[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "alam8064": 22
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "T/0/read book"
      }
    ],
    "authorContributionMap": {
      "alam8064": 1
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that executes the addition of a task into the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of adding the task into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.showAddedTask(task, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.appendFile(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 33
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of a deadline task that is input by the user to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"D/\" + num + \"/\" + super.task + \"/\" + by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 32
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that executes the deletion of a task into the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected int option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DeleteCommand(int option) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of deleting the task into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.showDeletedTask(tasks, option);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        tasks.deleteTask(option);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 33
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that marks a task to be done before updating it into the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected int option;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DoneCommand(int option) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.option \u003d option;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of updating the task\u0027s done status into the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages. The updated task list is then written and saved into the storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        tasks.markAsDone(option);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.showDoneTask(tasks.arr.get(option - 1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.writeFile(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alam8064": 34
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Duke, representing a personal assistant chat bot that helps to track the user\u0027s task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage \u003d new Storage(filePath, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Runs the chat bot, Duke, while users key in various command inputs."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                ui.showDateError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                ui.showIndexError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Main method which initiates the start of the system to run Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "alam8064": 48
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of an event task that is input by the user to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"E/\" + num + \"/\" + this.task + \"/\" + at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 32
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that exits the chat bot, Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of exiting the system of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.endDuke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 27
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that finds tasks from the task list using a specified keyword."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of finding tasks from the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.showFoundTasks(tasks.findTasks(keyword));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 31
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a command that lists all the tasks from the task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Executes the main method of listing the tasks from the task list, while the Ui replies the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * with the corresponding messages."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param tasks Task list that is updated."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param ui Ui to display interaction messages with the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param storage Storage where the updated list is saved into."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns if this command is an ExitCommand."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return The result if this command gives an exit."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 29
    }
  },
  {
    "path": "src/main/java/META-INF/MANIFEST.MF",
    "fileType": "MF",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Manifest-Version: 1.0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Main-Class: Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "alam8064": 3
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Handles making sense of the user inputs to return specific commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Parses the user input to return a corresponding command message."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param fullCommand User\u0027s given input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return Returns a Command type."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @throws DukeException When user\u0027s inputs do not fulfill any of the command specifications."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String[] arr \u003d fullCommand.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String command \u003d arr[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                Task task \u003d new Todo(arr[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                return new AddCommand(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] dArr \u003d arr[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (dArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You forgot to specify a date/time for the deadline.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Task task \u003d new Deadline(dArr[0], dArr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] eArr \u003d arr[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (eArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You forgot to specify a date/time for the event.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Task task \u003d new Event(eArr[0], eArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    return new AddCommand(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new DoneCommand(Integer.parseInt(arr[1]));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(arr[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new FindCommand(arr[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else if (command.equals(\"bye\")){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 60
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Storage(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Appends a new task to the back of the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task New task specified to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void appendFile(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, true));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String line \u003d task.toLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.write(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Rewrites the updated list of tasks to the file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param list Updated Tasklist of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void writeFile(TaskList list) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            for (int i \u003d 0; i \u003c list.arr.size(); i++) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String line \u003d list.arr.get(i).toLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                writer.write(line);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Loads existing tasks from the file to a list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return ArrayList representation of the list of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ArrayList\u003cTask\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String str \u003d br.readLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (str \u003d\u003d null) break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                String[] arr \u003d str.split(\"/\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Todo task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) task.setDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Deadline task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) task.setDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else { //event"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    Event task \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    if (arr[1].equals(\"1\")) task.setDone();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            ui.showFileNotFoundError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 80
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Represents a task defined from input by the user to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected boolean done; //✘"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Sets the status of a task to be done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d true; //✓"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a corresponding symbol showing the status of the task depending on whether it is done or not."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return String symbol of either a tick or a cross."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");  //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a formatted string representing a task to be written into the storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Abstract method that is formatted differently by different tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public abstract String toLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Returns a formatted string for the task to be printed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 43
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Contains the task list, as well as operations to amend existing tasks in thelist such as add/delete."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e arr;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.arr \u003d arr;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Marks the task to be done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param option Specific index of task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void markAsDone(int option) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.get(option - 1).setDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Removes the task from the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param option Specific index of task in the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void deleteTask(int option) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.remove(option - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Adds the task to the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param task Specifies task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        arr.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * Filters and returns a list of tasks pertaining to the keyword given."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     * @param keyword To find the specific task(s)."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String keyword) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (arr.get(i).task.contains(keyword)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                tasksFound.add(arr.get(i));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 50
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Specific form of a todo task that is input by the user to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toLine() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        if (super.done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            num \u003d 0;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"T/\" + num + \"/\" + super.task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": " * Handles the interactions with the user as they input to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public boolean hasInputs() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return sc.hasNext();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showFileNotFoundError() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"This file is not found in the specified directory!! :(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showIndexError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"This task option does not exist within the task list. Please try again.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"OOPS! An error occurred while loading from given file.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void endDuke() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showDoneTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showDeletedTask(TaskList tasks, int option) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n  \" + tasks.arr.get(option - 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Now you have \" + (tasks.arr.size() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showAddedTask(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showFoundTasks(ArrayList\u003cTask\u003e tasksFound) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            System.out.println(tasksFound.get(i));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void printList(TaskList list) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        for (int i \u003d 0; i \u003c list.arr.size(); i++) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            System.out.println(i + 1 + \". \" + list.arr.get(i));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void showDateError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Please key in the date in the YYYY-MM-DD format instead!!!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 84
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 10
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testWriteFile() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Storage storage \u003d new Storage(\"data/duke.txt\", ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Task task \u003d new Todo(\"read book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        storage.writeFile(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            assertEquals(\"T/0/read book\", br.readLine());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        } catch (Exception ignored) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 24
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.markAsDone(1);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(true, taskList.arr.get(0).done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.arr.add(new Todo(\"read book\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        assertEquals(0, taskList.arr.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 23
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [T][?] borrow book "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "1. [T][?] borrow book "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [E][?] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 3 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "alam8064": 20
    }
  },
  {
    "path": "text-ui-test/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Deadline(String task, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 15
    }
  },
  {
    "path": "text-ui-test/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        Task[] data \u003d new Task[100];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        int slot \u003d 0;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String[] inputArr \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            String action \u003d inputArr[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                for (int i \u003d 0; i \u003c slot; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    System.out.println(i + 1 + \". \" + data[i]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                int option \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                data[option-1].setDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + data[option-1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Todo(inputArr[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    String[] dArr \u003d inputArr[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Deadline(dArr[0], dArr[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                } else { //event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    String[] eArr \u003d inputArr[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                    data[slot] \u003d new Event(eArr[0], eArr[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"  \" + data[slot]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                slot++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "alam8064"
        },
        "content": "                System.out.println(\"Now you have \" + slot + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "alam8064"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 51
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [T][✘] borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "1.[T][✘] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": "  [E][✘] project meeting (at: Mon 2-4pm) "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "Now you have 3 tasks in the list. "
      }
    ],
    "authorContributionMap": {
      "alam8064": 20
    }
  },
  {
    "path": "text-ui-test/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Event(String task, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 15
    }
  },
  {
    "path": "text-ui-test/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    protected boolean done; //✘"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Task(String task) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        this.done \u003d true; //✓"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");  //return tick or X symbols"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 24
    }
  },
  {
    "path": "text-ui-test/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public Todo(String task) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "alam8064": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "todo borrow book "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "alam8064": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "alam8064"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "alam8064"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "alam8064"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "alam8064"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "alam8064"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "alam8064"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "alam8064"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "alam8064"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "alam8064"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "alam8064"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "alam8064"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "alam8064": 21
    }
  }
]
