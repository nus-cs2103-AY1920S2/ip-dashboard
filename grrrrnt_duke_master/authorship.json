[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "test {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 15,
      "-": 18
    }
  },
  {
    "path": "data/task_data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "T | 0 | say hi"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 1
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "#Thu Jan 30 23:59:49 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    protected String dayTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Deadline(String description, String dayTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.dayTime \u003d Parser.parseTime(dayTime);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getDayTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return dayTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 12
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class DeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public DeadlineException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return \"\\u2639 OOPS!!! The description of a deadline cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 10
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    static private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    static private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    static private TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    static private Parser parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    static String dataFilePath \u003d Paths.get(Paths.get(System.getProperty(\"user.dir\")).toString(),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            \"data/task_data.txt\").toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        storage \u003d new Storage(dataFilePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"NOTE: For all date/time input, please use the DD-MM-YYYY HH:MM format.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList.setList(storage.getList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList \u003d new TaskList(ui, storage);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Hello! I\u0027m Duke the dude.\\nHow can I serve you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.setInput(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            input \u003d ui.getLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                    exit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                    parser.parseInput(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            } catch (Exception ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                ui.showError(ex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public static void exit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Bye. Hope to serve you again soon!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 42,
      "-": 9
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    protected String dayTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Event(String description, String dayTime) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.dayTime \u003d Parser.parseTime(dayTime);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getDayTime() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return dayTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 12
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class EventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public EventException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return \"\\u2639 OOPS!!! The description of an event cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Parser(TaskList taskList) { this.taskList \u003d taskList; }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void parseInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList.showList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList.done(taskNum);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"todo\") ||"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                input.split(\" \")[0].equals(\"event\") ||"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                input.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList.add(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (input.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            int taskNum \u003d Integer.parseInt(input.split(\" \")[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            taskList.delete(taskNum);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public static String parseTime(String dayTime) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (dayTime.split(\" \").length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            LocalDateTime dt \u003d LocalDateTime.parse(dayTime, formatter);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            s \u003d dt.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM, FormatStyle.SHORT));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(dayTime, formatter);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            s \u003d d.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 42
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private FileWriter fw;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        f \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public List\u003cTask\u003e getList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            String[] elements \u003d str.split(\" \\\\| \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            Task t \u003d new Task();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            switch (elements[0]) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                t \u003d new Todo(elements[2]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                t \u003d new Event(elements[2], elements[3]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                t \u003d new Deadline(elements[2], elements[3]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            if (Integer.parseInt(elements[1]) \u003d\u003d 1)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            list.add(t);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void writeTaskList(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        for (Task t : list)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            fw.write(taskToString(t));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private static String taskToString(Task t) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        String str \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        int done \u003d t.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (t instanceof Todo)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            str \u003d \"T | \" + done + \" | \" + t.getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (t instanceof Event)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            str \u003d \"E | \" + done + \" | \" + t.getDescription() + \" | \" + ((Event) t).getDayTime();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (t instanceof Deadline)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            str \u003d \"D | \" + done + \" | \" + t.getDescription() + \" | \" + ((Deadline) t).getDayTime();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return str + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 61
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Task() {}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return (isDone ? \"OK!\" : \" X \"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getDescription() { return description; }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public boolean getIsDone() { return isDone; }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        String toReturn \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (this instanceof Todo) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            toReturn \u003d \"[T][\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            toReturn \u003d \"[E][\" + getStatusIcon() + \"] \" + description + \" (at: \" + ((Event) this).getDayTime() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            toReturn \u003d \"[D][\" + getStatusIcon() + \"] \" + description + \" (by: \" + ((Deadline) this).getDayTime() + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 36
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public TaskList(Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void setList(List\u003cTask\u003e list) { taskList \u003d list; }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void add(String s) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        String typeOfTask \u003d s.split(\" \", 2)[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        Task toAdd \u003d new Task();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        if (typeOfTask.equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                String task \u003d s.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                toAdd \u003d new Todo(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                throw new TodoException();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (typeOfTask.equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                String task \u003d s.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                String[] taskParts \u003d task.split(\" /at \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                toAdd \u003d new Event(taskParts[0], taskParts[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                throw new EventException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } else if (typeOfTask.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                String task \u003d s.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                String[] taskParts \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                toAdd \u003d new Deadline(taskParts[0], taskParts[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                throw new DeadlineException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Gotcha! Added this task:\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                + \"  \" + toAdd + \"\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            storage.writeTaskList(taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void delete(int i) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        Task t \u003d taskList.remove(i-1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Poof! This task is gone:\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                +  \"  \" + t + \"\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                + \"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            storage.writeTaskList(taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void showList() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            ui.print(count + \".\" + t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void done(int i) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        taskList.get(i-1).markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        ui.print(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "                \"  \" + taskList.get(i-1));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            storage.writeTaskList(taskList);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 87
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 5
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class TodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public TodoException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return \"\\u2639 OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 10
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void print(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void setInput(InputStream in) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        sc \u003d new Scanner(in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public String getLine() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 24
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void testParseTime() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        assertEquals(\"4 Jun 2000, 6:09 PM\", Parser.parseTime(\"04-06-2000 18:09\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 11
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        assertEquals(\"[T][ X ] eat apples\", new Todo(\"eat apples\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    public void getStatusIcon_todo_ok() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        Todo eat \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        assertEquals(\" X \", eat.getStatusIcon());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        eat.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "        assertEquals(\"OK!\", eat.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Hello! I\u0027m Duke the dude."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "How can I serve you?"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Gotcha! Added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "  [T][Not done] buy fruits"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "1.[T][Not done] buy fruits"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "Bye. Hope to serve you again soon!"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "todo buy fruits"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 3
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "grrrrnt"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "grrrrnt": 21
    }
  }
]
