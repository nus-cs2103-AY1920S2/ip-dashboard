[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "version \u00270.1\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "test {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 34,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "D , 1 , asdl , 2019-10-09"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": "D , 0 , 91239 , 2019-10-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "T , 1 , read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "E , 0 , collect book  , 2019-03-12"
      }
    ],
    "authorContributionMap": {
      "gb3h": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Representation of a deadline with a time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Deadline constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param a           a"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Deadline(String description, String a) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.by \u003d LocalDate.parse(a);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Overloaded deadline constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param a           a"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param mark        mark"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Deadline(String description, String a, boolean mark) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description, mark);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.by \u003d LocalDate.parse(a);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Custom toString implementation."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Override saveFormat method to generate neatly formatted information for saving."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"D\" + \" , \" + (super.isDone ? \"1\" : \"0\") + \" , \" + super.description + \" , \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                + this.by;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 57
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Duke program."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param filePath path to file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        } catch (DukeException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            System.out.println(UI.showLoadingError());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Duke () {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * The run method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @throws IOException exception"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        TaskList arr \u003d tasks;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        System.out.println(UI.say(\"Hello I am [AKSHAY]!\\nHow may I help you?\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            String[] c \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            switch (c[0]) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"list\"):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.list(arr));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"done\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    Task curr \u003d arr.get(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    curr.mark();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.done(curr));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"todo\"):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        Task todo \u003d new Todo(c[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        arr.add(todo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        System.out.println(UI.added(todo));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        System.out.println(UI.say(\"OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"deadline\"):"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    String[] dl \u003d c[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    Task d \u003d new Deadline(dl[0], dl[1].trim());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    arr.add(d);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.added(d));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"event\"):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    String[] ev \u003d c[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    Task e \u003d new Event(ev[0], ev[1].trim());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    arr.add(e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.added(e));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"delete\"):"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        Task del \u003d arr.get(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        arr.remove(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        System.out.println(UI.delete(del));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    } catch (Exception i) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        System.out.println(UI.say(\"Failed to delete item!!!\"));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case (\"find\"):"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.results(tasks.search(c[1])));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                case(\"help\"):"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    System.out.println(UI.help());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        throw new DukeException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    } catch (DukeException de) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                        System.out.println(UI.say(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            storage.save(arr.toArr());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        System.out.println(UI.goodbye());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        TaskList arr \u003d tasks;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String[] c \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        switch (c[0]) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"list\"):"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.list(arr));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"done\"):"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task curr \u003d arr.get(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                curr.mark();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.done(curr));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"todo\"):"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    Task todo \u003d new Todo(c[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    arr.add(todo);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    return(UI.added(todo));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    return(UI.say(\"OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"deadline\"):"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                String[] dl \u003d c[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task d \u003d new Deadline(dl[0], dl[1].trim());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                arr.add(d);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.added(d));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"event\"):"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                String[] ev \u003d c[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task e \u003d new Event(ev[0], ev[1].trim());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                arr.add(e);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.added(e));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"delete\"):"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    Task del \u003d arr.get(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    arr.remove(Integer.parseInt(c[1]) - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    return(UI.delete(del));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                } catch (Exception i) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    return(UI.say(\"Failed to delete item!!!\"));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"find\"):"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.results(tasks.search(c[1])));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case(\"help\"):"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                return(UI.help());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    throw new DukeException();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                } catch (DukeException de) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    return(UI.say(\"I\u0027m sorry, but I don\u0027t know what that means!!!\"));"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 160
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 7
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Representation of a event with a time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param at          at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Overloaded event constructor."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param at          at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param mark        mark"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Event(String description, String at, boolean mark) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description, mark);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Custom toString implementation."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                .format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Override saveFormat method to generate neatly formatted information for saving."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"E\" + \" , \" + (super.isDone ? \"1\" : \"0\") + \" , \" + super.description + \" , \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                + this.at;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 57
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 30
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        assert !input.isEmpty() : \"Input cannot be empty!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 54
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Class file to handle reading and writing of data to external files."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private String fp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Constructor requiring a file path for reading and writing of data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param path path to file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        fp \u003d path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Helper function to convert string of \"1\" or \"0\" to boolean true and false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param value \"1\" or \"0\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return true or false"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private boolean convertToBoolean(String value) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        boolean returnValue \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        if (\"1\".equalsIgnoreCase(value) || \"yes\".equalsIgnoreCase(value) || \"true\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                .equalsIgnoreCase(value)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                || \"on\".equalsIgnoreCase(value)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            returnValue \u003d true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return returnValue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Loads data to be passed to a tasklist."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @throws FileNotFoundException e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @throws DukeException         e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        File file \u003d new File(this.fp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            String task \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            String[] s \u003d task.split(\",\", 0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            switch (s[0].trim()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"T\"):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task todo \u003d new Todo(s[2].trim(), convertToBoolean(s[1].trim()));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                arr.add(todo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"E\"):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task ev \u003d new Event(s[2].trim(), s[3].trim(), convertToBoolean(s[1].trim()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                arr.add(ev);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            case (\"D\"):"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                Task dl \u003d new Deadline(s[2].trim(), s[3].trim(), convertToBoolean(s[1].trim()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                arr.add(dl);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return arr;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Saves data to file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param data data"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @throws IOException exception"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e data) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        for (Task datum : data) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            s.append(datum.saveFormat()).append(\"\\n\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(this.fp);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        PrintWriter printWriter \u003d new PrintWriter(fileWriter);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        printWriter.print(s);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        printWriter.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 93
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Task class representing task type."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Constructor method. Default value of isDone is false."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Overloaded constructor specifying isDone value."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description desc"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param mark        mark"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Task(String description, boolean mark) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.isDone \u003d mark;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Helper method to get status as a special char symbol (tick or X)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return (isDone ? \"O\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Method to mark task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void mark() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Custom toString implementation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Override saveFormat method to generate neatly formatted information for saving."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"N\" + \" , \" + (this.isDone ? \"1\" : \"0\") + \" , \" + this.description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 66
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Tasklist class to hold numerous Task objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    private ArrayList\u003cTask\u003e lst;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Constructor method with underlying use of Java Collections."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Overloaded constructor in the case of an existing collection of Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param lst lst"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        this.lst \u003d lst;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Returns task at index."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param index index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return lst.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Adds task e to tasklist."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param e element"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void add(Task e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        lst.add(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Removes task at index."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param e element"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public void remove(int e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        lst.remove(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Gets number of tasks currently held."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return int size"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return lst.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Converts and returns an ArrayList of Tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return ArrayList of Tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public ArrayList\u003cTask\u003e toArr() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Search function."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param s s"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return Returns a TaskList obj"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public TaskList search(String s) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        ArrayList\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        for (Task t : lst) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            String[] arr \u003d t.description.split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            for (String part : arr) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                if (part.equals(s) \u0026\u0026 !res.contains(t)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                    res.add(t);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gb3h"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return new TaskList(res);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 92
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * Class to represent tasks of the type to do."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Constructor method."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Overloaded constructor in case of specified isDone value."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param description description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param mark        mark"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public Todo(String description, boolean mark) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        super(description, mark);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Custom toString implementation."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Override saveFormat method to generate neatly formatted information for saving."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public String saveFormat() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return \"T\" + \" , \" + (super.isDone ? \"1\" : \"0\") + \" , \" + super.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 46
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": " * UI class to abstract all UI related printing."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Commonly used beautifying line."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    public static String LINE \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Prints string s wrapped in lines."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param s s"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String say(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Lists items in arr one by one."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param arr arr"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String listHelper(TaskList arr) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        StringBuilder returnString \u003d new StringBuilder();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        for (var i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            Task t \u003d arr.get(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gb3h"
        },
        "content": "            returnString.append(\"\\n\").append(i + 1).append(\": \").append(t.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return returnString.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String list(TaskList arr) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String returnString \u003d \"Here are the items in your list:\" + UI.listHelper(arr);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(returnString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Feedback if a task is done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param curr curr"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String done(Task curr) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"Marked as done:\\n\" + curr.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Feedback if a task is added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param curr curr"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String added(Task curr) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"Added: \" + curr.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Feedback if a task is deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * @param curr curr"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String delete(Task curr) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"Deleted item:\\n\" + curr.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Feedback failure."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String failure() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     * Says goodbye."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gb3h"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String goodbye() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"Bye! Hope to see you again!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String showLoadingError() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"Failed to load from file. Are you sure the path is correct?\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String results(TaskList tl) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        String returnString \u003d \"Here are your search results:\\n\" + UI.listHelper(tl);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(returnString);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    static String help() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        return say(\"The following commands are available:\\nlist\\ndone\\ntodo\\ndelete\\ndeadline\\nevent\\nhelp\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 94
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gb3h": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gb3h": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        assertEquals(\"[D][✘] Blah (by: Oct 10 2019)\", new Deadline(\"Blah\", \"2019-10-10\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    void saveFormat() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        assertEquals(\"D , 0 , Blah , 2019-10-10\", new Deadline(\"Blah\", \"2019-10-10\").saveFormat());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 18
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "        assertEquals(\"[T][✓] Blah\", new Todo(\"Blah\", true).toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gb3h": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "paldspalsd"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "deadline 11 11"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gb3h": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gb3h"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gb3h"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gb3h"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gb3h"
        },
        "content": "javac -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gb3h"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gb3h"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gb3h"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gb3h"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gb3h"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gb3h"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gb3h"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gb3h": 21
    }
  }
]
