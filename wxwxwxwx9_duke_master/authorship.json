[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 36,
      "-": 21
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.shape.Rectangle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private DialogBox(String name, String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.name.setText(name.toUpperCase() + \": \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        // got from online"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Rectangle clip \u003d new Rectangle("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            displayPicture.getFitWidth(), displayPicture.getFitHeight()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        clip.setArcWidth(90);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        clip.setArcHeight(90);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static DialogBox getUserDialog(String name, String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        DialogBox db \u003d new DialogBox(name, text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static DialogBox getDukeDialog(String name, String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        DialogBox db \u003d new DialogBox(name, text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        db.setStyle(\"-fx-background-color: #e2dfdb\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 72
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** Duke Task Manager */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Storage object to load and save tasks to text file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Task list object to store tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs the Duke program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            this.storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            this.taskList \u003d this.storage.loadTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            System.err.println(e.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            System.err.println(e.toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assert this.storage !\u003d null : \"Storage is null!\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assert this.taskList !\u003d null : \"Task list is null!\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Starts simulation without GUI."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printIntro();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                Command command \u003d Parser.parseUserInput(input, this.storage, this.taskList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                command.execute(storage, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                if (command.isBye()) break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                System.err.println(e.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                System.err.println(e.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Get Duke\u0027s response for GUI."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String message \u003d Parser.parseUserInput(input, storage, taskList).execute(storage, taskList);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            return String.format(message + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 72,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        if (args.length \u003e 0 \u0026\u0026 args[0].equals(\"gui\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            new Duke().run();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 16
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            stage.setTitle(\"Jerry finally became my servant!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().printGuiIntro();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 34
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected final String userName \u003d \"Tom\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected final String dukeName \u003d \"Jerry\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/TomEvil.gif\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JerryDrunk.jpg\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        if (!input.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                    DialogBox.getUserDialog(userName, input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                    DialogBox.getDukeDialog(dukeName, response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected void printGuiIntro() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String intro \u003d \"hey bud waht cna i do for ku\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            DialogBox.getDukeDialog(dukeName, intro, dukeImage)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 66
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.isByeCommand \u003d true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 22
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected boolean isByeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.isByeCommand \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public abstract String execute(Storage storage, TaskList taskList) throws IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public boolean isBye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return this.isByeCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Integer taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public DeleteCommand(Integer taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Task task \u003d taskList.removeTask(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Noted! I\u0027ve removed this task: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + task.toString()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + \"Now you have \" + taskList.getSize()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private Integer taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public DoneCommand(Integer taskNumber) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Task task \u003d taskList.completeTask(taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done: \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + task.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 29
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Here are the matching tasks in your list\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + taskList.searchTaskList(keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Here are the tasks in your list: \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + taskList.getTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 23
    }
  },
  {
    "path": "src/main/java/duke/command/UrgentCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class UrgentCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public UrgentCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String execute(Storage storage, TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String message \u003d \"Here are urgent tasks in your list! \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + taskList.getUrgentTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Ui.printMessage(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 24
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** Duke exception class to handle exceptions in the Duke program. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a Duke Exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @oaram message Message to be shown to user upon exception handling."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return String.format(\"%s\", getMessage());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 20
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** Parser to interpret and execute commands. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Interprets user input and creates the appropriate command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param input    User input during runtime."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param storage  Storage object to save the task list that is updated in this method."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskList Task list object to store the tasks that are created from user command in this method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return An appropriate command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If there is an error in parsing user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws IOException   If there is an error in saving task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static Command parseUserInput(String input, Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String instruction \u003d inputArr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please specify a task number to mark as done!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (taskNumber \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please specify a valid task number!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please specify a task number to be deleted!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (taskNumber \u003e taskList.getSize()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please specify a valid task number!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"todo\": {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please enter the descriptions for your to-do!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Pre-processing"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int idx \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskInput \u003d input.substring(idx + 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String[] taskInputArr \u003d taskInput.split(\"/\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Create task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskName \u003d taskInputArr[0];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Task newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new AddCommand(newTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please enter the description for your deadline!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Pre-processing"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int idx \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskInput \u003d input.substring(idx + 1);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String[] taskInputArr \u003d taskInput.split(\"/\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskName \u003d taskInputArr[0];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String dateTime \u003d taskInputArr[1];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            idx \u003d dateTime.indexOf(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            dateTime \u003d dateTime.substring(idx + 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Create task"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Task newTask \u003d new Deadline(taskName, dateTime);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new AddCommand(newTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please enter the description for your event!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Pre-processing"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int idx \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskInput \u003d input.substring(idx + 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String[] taskInputArr \u003d taskInput.split(\"/\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskName \u003d taskInputArr[0];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String dateTime \u003d taskInputArr[1];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            idx \u003d dateTime.indexOf(\" \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            dateTime \u003d dateTime.substring(idx + 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Create task"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Task newTask \u003d new Event(taskName, dateTime);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new AddCommand(newTask);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (inputArr.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                throw new DukeException(\"Please enter a keyword so that we can retrieve the appropriate task(s)!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Pre-processing"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int idx \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String keyword \u003d input.substring(idx + 1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"urgent\": {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            // Pre-processing"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            int idx \u003d input.indexOf(\" \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String keyword \u003d input.substring(idx + 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new UrgentCommand();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"list\": {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new ListCommand();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        case \"bye\": {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            command \u003d new ByeCommand();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 178
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** Storage for tasks stored in task list. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Filepath to store the text file to. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** File object to represent the file destination. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs the storage for the Duke program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Creates a new text file for data storage if it doesn\u0027t exist."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param filepath The destination for the saved text file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws IOException Exception if there is an error in creating the specified filepath for saving."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Storage(String filepath) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            file \u003d new File(filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assert this.file !\u003d null : \"Filepath is null!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Loads the task list from saved text file (if any)."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws IOException Exception if there is an error in reading task list data from saved text file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "   public TaskList loadTaskList() throws DukeException, IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "           data.add(scanner.nextLine());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       return new TaskList(data);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "   }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Saves the task list to the filepath specified."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskList The task list to be saved."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws IOException Exception if there is an error saving task list data to the specified filepath."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "   public void saveTaskList(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       fileWriter.write(taskList.getTaskListSaveFormat());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "       fileWriter.flush();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "   }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** A deadline task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Deadline(String taskName, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName, \"D\", dateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a deadline task with additional details."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param isDone Indicates if the task is completed already."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Deadline(String taskName, boolean isDone, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName, \"D\", isDone, dateTime);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** An event task. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs an event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Event(String taskName, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName, \"E\", dateTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs an event with additional details."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param isDone Indicates if the task is completed already."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Event(String taskName, boolean isDone, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName,\"E\", isDone, dateTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 31
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** An abstract task class to be extended for specific tasks. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Task name that describes the nature of the task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected String taskName \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Whether the task is completed. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Date and time of the task (if any). */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected LocalDate dateTime \u003d LocalDate.MAX;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Type of task. */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected String taskType \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Standard input date formatter for Duke program */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected final DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** Standard output date formatter for Duke program */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    protected final DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a task (for ToDo tasks)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Describes the nature of the task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task(String taskName, String taskType) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a task with additional details (for Event or Deadline tasks)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Describes the nature of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task(String taskName, String taskType, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            this.dateTime \u003d LocalDate.parse(dateTime.trim(), inputFormatter);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            throw new DukeException(\"Please give the appropriate date format in yyyy-MM-dd!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a task with additional details (for ToDo tasks)."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Describes the nature of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param isDone Indicates if the task is completed already."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task(String taskName, String taskType, boolean isDone) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a task with additional details (for Event or Deadline tasks)."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Describes the nature of the task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param isDone Indicates if the task is completed already."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param dateTime The date and time of the task (if any)."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task(String taskName, String taskType, boolean isDone, String dateTime) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            this.dateTime \u003d LocalDate.parse(dateTime.trim(), inputFormatter);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            throw new DukeException(\"Please give the appropriate date format in yyyy-MM-dd!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public LocalDate getTaskDate() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Returns icon to display completion status of the task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Icon status."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Converts the task into a format for saving to text file."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Task in the appropriate string format for saving."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getSaveFormat() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return String.format(\"%s_%s_%s_%s\", taskType, isDone, taskName, dateTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Outputs date along with task if it is an event or deadline. If it is a to-do task, then just output task."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Max value of local date is assigned for to-do task and used to differentiate between event and deadline from"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * to-do task."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Tasks in appropriate string output format."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String output \u003d String.format(\"[%s][%s] %s\", taskType, getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        if (this.dateTime.equals(LocalDate.MAX)) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            return String.format(\"%s (at: %s)\", output, this.dateTime.format(outputFormatter));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 133
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** Task list to manage tasks created by users. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /** ArrayList as the underlying implementation to store tasks. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param data List of tasks loaded from saved text file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @throws DukeException Exceptions that arise from creating/adding tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public TaskList(List\u003cString\u003e data) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        for (int i \u003d 0; i \u003c data.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String line \u003d data.get(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String[] parsedLine \u003d line.split(\"_\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskType \u003d parsedLine[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskName \u003d parsedLine[2];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            boolean isCompleted \u003d Boolean.parseBoolean(parsedLine[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                taskList.add(new ToDo(taskName, isCompleted));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                String deadlineDateTime \u003d parsedLine[3];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                taskList.add(new Deadline(taskName, isCompleted, deadlineDateTime));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                String eventDateTime \u003d parsedLine[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                taskList.add(new Event(taskName, isCompleted, eventDateTime));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task removeTask(int taskNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Task task \u003d this.taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        this.taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public Task completeTask(int taskNumber) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Task task \u003d this.taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        task.completeTask();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Retrieves tasks that are due within the next two weeks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Filtered urgent task list in appropriate string format."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getUrgentTasks() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        LocalDate current \u003d LocalDate.now();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        LocalDate oneWeekLater \u003d current.plusDays(7);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        LocalDate twoWeeksLater \u003d current.plusDays(14);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String dueThisWeekTasks \u003d \"Due this week\" + System.lineSeparator();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String dueNextWeekTasks \u003d \"Due next week\" + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String count \u003d (i + 1) + \". \";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            LocalDate taskDate \u003d task.getTaskDate();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (taskDate.compareTo(oneWeekLater) \u003c 0) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                // means this task is due in a week"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                dueThisWeekTasks +\u003d count + task.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            } else if (taskDate.compareTo(twoWeeksLater) \u003c 0) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                // means this task is due more than a week later but within two weeks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                dueNextWeekTasks +\u003d count + task.toString() + System.lineSeparator();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String urgentTasks \u003d dueThisWeekTasks + System.lineSeparator() + dueNextWeekTasks;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return urgentTasks;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Retrieves tasks that contain user keyword and format them into string in numbered order."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param keyword User-given keyword for Duke to lookup."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Filtered task list in appropriate string format."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String searchTaskList(String keyword) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String count \u003d (i + 1) + \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String taskString \u003d this.taskList.get(i).toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (taskString.contains(keyword)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                list +\u003d count + \". \" + taskString;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                if (i !\u003d this.taskList.size() - 1) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                    list +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Retrieves task list in numbered order."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Task list in appropriate string format."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getTaskList() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String count \u003d (i + 1) + \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            String task \u003d this.taskList.get(i).toString();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            list +\u003d count + \". \" + task;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            if (i !\u003d this.taskList.size() - 1) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                list +\u003d System.lineSeparator();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Formats task list to be saved into text file."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @return Task list in appropriate string format for saving."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public String getTaskListSaveFormat() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            Task item \u003d this.taskList.get(i);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            data +\u003d item.getSaveFormat() + System.lineSeparator();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 146
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** A To-Do task. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a To-Do task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName, \"T\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * Constructs a To-Do task with additional details."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param taskName Name of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     * @param isDone Indicates if the task is completed already."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public ToDo(String taskName, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        super(taskName, \"T\", isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 25
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "/** User Interface Manager. */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static void printIntro() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        String intro \u003d \"Hello! I\u0027m Duke\" + System.lineSeparator() + \"What can I do for you?\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        System.out.println(wrap(intro));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static void printMessage(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        System.out.println(wrap(message));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public static String wrap(String string) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        return \"___________________________________________________\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + string"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + \"___________________________________________________\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                + System.lineSeparator();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 24
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003cfx:root minHeight\u003d\"125\" prefWidth\u003d\"550.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003cstyle\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003c/style\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003cVBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003cLabel fx:id\u003d\"name\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                \u003cstyle\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c!--                    font styling not working--\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c!--                    -fx-font-size: 18pt;--\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c!--                    -fx-font-weight: bold;--\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c!--                    -fx-font-style: italic;--\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c!--                    -fx-stroke: red;--\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                    -fx-padding: 0 0 5.0 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                \u003c/style\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003cstyle\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                -fx-padding: 15.0;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003c/style\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 35
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"557.0\" prefWidth\u003d\"550.0\" fitToWidth\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"550.0\" promptText\u003d\"Torture Jerry here...\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003cstyle\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        -fx-focus-color: transparent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        -fx-faint-focus-color: transparent;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    \u003c/style\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 21
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void testGetStatusIcon() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", \"2020-12-01\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assertEquals(\"\\u2718\", deadlineTest.getStatusIcon());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void testGetSaveFormat() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"test\", \"2020-12-01\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assertEquals(\"D_false_test_2020-12-01\", deadlineTest.getSaveFormat());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 20
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        Event eventTest \u003d new Event(\"test\", \"2020-12-01\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "        assertEquals(\"[E][\\u2718] test (at: 01 12 2020)\", eventTest.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 15
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "deadline do homework /by 2100-01-01"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "[D][✘] do homework (by: 01 01 2100)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "bye"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "deadline do homework /by 2100-01-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 2
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wxwxwxwx9"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wxwxwxwx9": 34
    }
  }
]
