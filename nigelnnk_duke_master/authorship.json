[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 21,
      "-": 20
    }
  },
  {
    "path": "config/checkstyle/checkstyle.xml",
    "fileType": "xml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!DOCTYPE module PUBLIC"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "        \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "        \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c!--"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    Checkstyle configuration that checks the Google coding conventions from Google Java Style"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    that can be found at https://google.github.io/styleguide/javaguide.html"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    Checkstyle is very configurable. Be sure to read the documentation at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    http://checkstyle.sf.net (or in your downloaded distribution)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    To completely disable a check, just comment it out or delete it from the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " --\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cmodule name \u003d \"Checker\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cproperty name\u003d\"charset\" value\u003d\"UTF-8\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cproperty name\u003d\"severity\" value\u003d\"error\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cproperty name\u003d\"fileExtensions\" value\u003d\"java, properties, xml\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- Excludes all \u0027module-info.java\u0027 files              --\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- See https://checkstyle.org/config_filefilters.html --\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmodule name\u003d\"BeforeExecutionExclusionFileFilter\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cproperty name\u003d\"fileNamePattern\" value\u003d\"module\\-info\\.java$\"/\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- Checks for whitespace                               --\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c!-- See http://checkstyle.sf.net/config_whitespace.html --\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmodule name\u003d\"FileTabCharacter\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cproperty name\u003d\"eachLine\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cmodule name\u003d\"TreeWalker\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OuterTypeFilename\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"IllegalTokenText\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"STRING_LITERAL, CHAR_LITERAL\"/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"message\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"Consider using special escape sequence instead of octal value or Unicode escaped value.\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AvoidEscapedUnicodeCharacters\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEscapesForControlCharacters\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowByTailComment\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowNonPrintableEscapes\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AvoidStarImport\"/\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OneTopLevelClass\"/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoLineWrap\"/\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyBlock\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"TEXT\"/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NeedBraces\"/\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LeftCurly\"/\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"RightCurly\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlySame\"/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "                    LITERAL_DO\"/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"RightCurly\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"RightCurlyAlone\"/\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"alone\"/\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                    INSTANCE_INIT\"/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"WhitespaceAround\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.notFollowed\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not followed by whitespace. Empty blocks may only be represented as \u0027{}\u0027 when not part of a multi-block statement (4.1.3)\"/\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.notPreceded\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"WhitespaceAround: \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"FallThrough\"/\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"UpperEll\"/\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ModifierOrder\"/\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyLineSeparator\"\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowNoEmptyLineBetweenFields\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapDot\"/\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"DOT\"/\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapComma\"/\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA\"/\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 --\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapEllipsis\"/\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ELLIPSIS\"/\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 --\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapArrayDeclarator\"/\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"ARRAY_DECLARATOR\"/\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"EOL\"/\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SeparatorWrap\"\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"SeparatorWrapMethodRef\"/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_REF\"/\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"PackageName\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Package name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"TypeName\"\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MemberName\"\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Member name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ParameterName\"\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LambdaParameterName\"\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Lambda parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"CatchParameterName\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Catch parameter name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"LocalVariableName\"\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]([a-z0-9][a-zA-Z0-9]*)?$\"/\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Local variable name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ClassTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Class type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Method type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"InterfaceTypeParameterName\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Interface type name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoFinalizer\"/\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"GenericWhitespace\"\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.followed\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is followed by whitespace.\"/\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.preceded\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.illegalFollow\""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 should followed by whitespace.\"/\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"ws.notPreceded\""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"GenericWhitespace \u0027\u0027{0}\u0027\u0027 is not preceded with whitespace.\"/\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"Indentation\"\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"basicOffset\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"braceAdjustment\" value\u003d\"0\"/\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\"/\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"throwsIndent\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"lineWrappingIndentation\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"arrayInitIndent\" value\u003d\"4\"/\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"VariableDeclarationUsageDistance\"/\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodParamPad\"/\u003e"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF\"/\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"ParenPad\"/\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"OperatorWrap\"\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"option\" value\u003d\"NL\"/\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR,"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "                    LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF \"/\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AnnotationLocation\"\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationMostCases\"/\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AnnotationLocation\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"id\" value\u003d\"AnnotationLocationVariables\"/\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tokens\" value\u003d\"VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowSamelineMultipleAnnotations\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"NonEmptyAtclauseDescription\"/\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SummaryJavadoc\"\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"forbiddenSummaryFragments\""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocParagraph\"/\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"AtclauseOrder\"\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"tagOrder\" value\u003d\"@param, @return, @throws, @deprecated\"/\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"target\""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "                      value\u003d\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"JavadocMethod\"\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MissingJavadocMethod\"\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"scope\" value\u003d\"public\"/\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"minLineCount\" value\u003d\"2\"/\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test\"/\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"MethodName\"\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/\u003e"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cmessage key\u003d\"name.invalidPattern\""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                     value\u003d\"Method name \u0027\u0027{0}\u0027\u0027 must match pattern \u0027\u0027{1}\u0027\u0027.\"/\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"SingleLineJavadoc\"\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"ignoreInlineTags\" value\u003d\"false\"/\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"EmptyCatchBlock\"\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cproperty name\u003d\"exceptionVariableName\" value\u003d\"expected\"/\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/module\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cmodule name\u003d\"CommentsIndentation\"/\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    \u003cmodule name\u003d\"LineLength\"\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        \u003cproperty name\u003d\"ignorePattern\" value\u003d\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    \u003c/module\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/module\u003e"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 5,
      "-": 251
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "E|a|2020-01-01T00:00|0"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "E|a|2020-01-01T01:01|0"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "D|b|2020-02-02T02:02|0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "T|a |0"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 4
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "#Fri Jan 17 18:07:13 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 3,
      "-": 3
    }
  },
  {
    "path": "src/main/java/AutoResponder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": " * Main driver class of AutoResponder chat."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class AutoResponder {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final StringBuilder toPrint;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_DEADLINE \u003d Pattern.compile(\"^deadline (.+) /by (.+)\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_EVENT \u003d Pattern.compile(\"^event (.+) /at (.+)\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_TODO \u003d Pattern.compile(\"^todo (.+)\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_DONE \u003d Pattern.compile(\"^done (\\\\d+)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_DELETE \u003d Pattern.compile(\"^delete (\\\\d+)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_EMPTY_COMMAND \u003d Pattern.compile(\"^(todo|event|deadline|find|done|delete)\\\\s*$\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_LIST \u003d Pattern.compile(\"^list\\\\s*$\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern PATTERN_FIND \u003d Pattern.compile(\"^save\\\\s*$\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pFind \u003d Pattern.compile(\"^find (.+)\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.toPrint \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder(List\u003cTask\u003e taskList, StringBuilder toPrint) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.toPrint \u003d toPrint;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder printToConsole() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        ui.printToConsole(toPrint.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(taskList, new StringBuilder());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Reads input from UI, and processes commands accordingly."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param input String to be processed from System.in"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return new AutoResponder object with corresponding command to be processed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public AutoResponder readInput(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        String lowerInput \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (PATTERN_LIST.matcher(lowerInput).find()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.processList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_DONE.matcher(lowerInput).find()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_DONE.matcher(lowerInput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            int index \u003d Integer.parseInt(m.group(1)) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.markTaskDone(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_DELETE.matcher(lowerInput).find()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_DELETE.matcher(lowerInput);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            int index \u003d Integer.parseInt(m.group(1)) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.deleteTask(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_FIND.matcher(lowerInput).find()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.saveList();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_EMPTY_COMMAND.matcher(lowerInput).find()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_EMPTY_COMMAND.matcher(lowerInput);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            throw new IllegalArgumentException(\"☹ OOPS!!! The description of a \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    + m.group(1) + \" cannot be empty.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (pFind.matcher(input).find()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d pFind.matcher(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.findTask(m.group(1));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_DEADLINE.matcher(input).find()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_DEADLINE.matcher(input);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.addDeadline(m.group(1), m.group(2));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_EVENT.matcher(input).find()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_EVENT.matcher(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.addEvent(m.group(1), m.group(2));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (PATTERN_TODO.matcher(input).find()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Matcher m \u003d PATTERN_TODO.matcher(input);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            m.find();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return this.addTodo(m.group(1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            throw new IllegalArgumentException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder processList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(toPrint);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d taskList.size(); ++i) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            sb.append(i).append(\". \").append(taskList.get(i - 1)).append(\"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(taskList, sb).printToConsole();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder saveList() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder writeContents \u003d new StringBuilder();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        for (Task v : taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            writeContents.append(v.writeFormat());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            writeContents.append(\"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (!Files.exists(Paths.get(\"./data\"))) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            boolean ok \u003d new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            if (!ok) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                System.err.println(\"Error in creating directory.\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        File f \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        String path \u003d f.getAbsolutePath();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            fw.write(writeContents.toString());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"Tasks saved successfully.\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"Tasks not loaded\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.printToConsole();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder loadList() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            File f \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                switch (s.charAt(0)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                case \u0027T\u0027:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    taskList.add(Todo.readFormat(s));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                case \u0027D\u0027:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    taskList.add(Deadline.readFormat(s));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                case \u0027E\u0027:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    taskList.add(Event.readFormat(s));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    throw new IllegalArgumentException(\"No corresponding command found\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"Task file loaded successfully!\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"Task file not loaded. Check if file exists or is corrupted.\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.printToConsole();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder markTaskDone(int index) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(toPrint);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Index of \" + (index + 1)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    + \" does not correspond to task list of size \" + taskList.size());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            tl.set(index, taskList.get(index).makeCompleted());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            sb.append(\"Nice! I\u0027ve marked this task as done:\\n\\t\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            sb.append(tl.get(index)).append(\"\\n\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(tl, sb).printToConsole();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder deleteTask(int index) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(toPrint);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            throw new IndexOutOfBoundsException(\"Index of \" + (index + 1)"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                    + \" does not correspond to task list of size \" + taskList.size());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            sb.append(\"Noted! I\u0027ve removed this task:\\n\\t\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            sb.append(tl.get(index)).append(\"\\n\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            tl.remove(index);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(tl, sb).printToConsole();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder findTask(String description) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        String s \u003d taskList.stream().map(Object::toString)"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .filter(string -\u003e string.contains(description))"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .collect(Collectors.joining());"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (s.length() \u003e 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(s);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            toPrint.append(\"There are no matching tasks in your list.\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.printToConsole();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder addDeadline(String name, String date) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        tl.add(new Deadline(name, Parser.parseDateTime(date)));"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(tl, toPrint).taskAdded();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder addEvent(String name, String date) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        tl.add(new Event(name, Parser.parseDateTime(date)));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(tl, toPrint).taskAdded();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder addTodo(String name) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        tl.add(new Todo(name));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(tl, toPrint).taskAdded();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private AutoResponder taskAdded() {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(toPrint);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        sb.append(\"Got it. I\u0027ve added this task:\\n\\t\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        sb.append(taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        sb.append(\"\\nNow you have \").append(taskList.size()).append(\" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new AutoResponder(taskList, sb).printToConsole();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Initialises a new AutoResponder to be created, printing its landing page and loading a list"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * from the usual location (./data/duke.txt)."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return AutoResponder object being run"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static AutoResponder initialise() {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        AutoResponder ar \u003d new AutoResponder();"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        ar.ui.printLandingPage();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        ar \u003d ar.loadList();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return ar.run();"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Starts the AutoResponder from accepting input via UI and processing commands."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return the state of each AutoResponder after each run, or shutdown if the bye"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     *     command is passed into it."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public AutoResponder run() {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        AutoResponder ar \u003d this;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        while (ui.hasCommand()) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            String input \u003d ui.receiveCommand();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            if (input.matches(\"bye\\\\s*\")) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                return ar.shutdown();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                ar \u003d ar.readInput(input);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return ar.run();"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Shuts AutoResponder down and prints goodbye screen."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return AutoResponder in shut down mode"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public AutoResponder shutdown() {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 268
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Deadline implements Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final boolean isCompleted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Creates a Deadline object with a name as its description and a LocalDateTime. Assumes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * that Deadline is incomplete by definition."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param name Name of Deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param deadline LocalDateTime object of Deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Deadline(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Constructor for Deadline with all three inputs - name, deadline and isCompleted."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param name Name of Deadline"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param deadline LocalDateTime object of Deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param isCompleted Boolean value if Deadline is completed or not."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Deadline(String name, LocalDateTime deadline, boolean isCompleted) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Takes in another Deadline object and modifies its isCompleted value."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param deadline reference deadline object whose name and deadline is cloned over"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param isCompleted Boolean value if Deadline is completed or not."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Deadline(Deadline deadline, boolean isCompleted) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d deadline.getName();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d deadline.getDeadline();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Deadline makeCompleted() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Deadline(this, true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public boolean getCompletion() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String writeFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"D|\" + name + \"|\" + deadline + \"|\" + (isCompleted ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Reads string formatted to store info regarding a Deadline object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param input input string to be parsed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return Deadline object parsed from string information"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static Deadline readFormat(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        // assert here such that first token is D"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cString\u003e list \u003d Collections.list(new StringTokenizer(input, \"|\")).stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .map(token -\u003e (String) token)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Deadline(list.get(1), LocalDateTime.parse(list.get(2)), Boolean.parseBoolean(list.get(3)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"[D][\" + (isCompleted ? \"✓\" : \"✗\") + \"] \" + name + \" (by: \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 87
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Event implements Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final boolean isCompleted;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Creates an Event object with a name as its description and a LocalDateTime. Assumes"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * that Event is incomplete by definition."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param name Name of Event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param deadline LocalDateTime object of Event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Event(String name, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Takes in another Event object and modifies its isCompleted value."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param event reference Event object whose name and deadline is cloned over"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param isCompleted Boolean value if Event is completed or not."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Event(Event event, boolean isCompleted) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d event.getName();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d event.getDeadline();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Constructor for Event with all three inputs - name, deadline and isCompleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param name Name of Event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param deadline LocalDateTime object of Event"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param isCompleted Boolean value if Event is completed or not."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Event(String name, LocalDateTime deadline, boolean isCompleted) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Event makeCompleted() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Event(this, true);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public boolean getCompletion() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public LocalDateTime getDeadline() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String writeFormat() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"E|\" + name + \"|\" + deadline + \"|\" + (isCompleted ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Reads string formatted to store info regarding an Event object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param input input string to be parsed"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return Event object parsed from string information"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static Event readFormat(String input) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        // assert here such that first token is D"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cString\u003e list \u003d Collections.list(new StringTokenizer(input, \"|\")).stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .map(token -\u003e (String) token)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Event(list.get(1), LocalDateTime.parse(list.get(2)), Boolean.parseBoolean(list.get(3)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"[E][\" + (isCompleted ? \"✓\" : \"✗\") + \"] \" + name + \" (at: \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 87
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        AutoResponder ar \u003d AutoResponder.initialise();"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 5
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": " * Deals with the parsing of LocalDateTime objects to and from strings."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pDeadline \u003d Pattern.compile(\"deadline (.+) /by (.+)\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pEvent \u003d Pattern.compile(\"event (.+) /at (.+)\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pTodo \u003d Pattern.compile(\"todo (.+)\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pDone \u003d Pattern.compile(\"done (\\\\d+)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pDelete \u003d Pattern.compile(\"delete (\\\\d+)\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pEmptyCommand \u003d Pattern.compile(\"(todo|event|deadline)\\\\s*$\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pList \u003d Pattern.compile(\"list\\\\s*$\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Pattern pSave \u003d Pattern.compile(\"save\\\\s*$\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Parses LocalDateTime to or from text file into proper format."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param input Input string to be parsed"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return LocalDateTime object from parsed string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static LocalDateTime parseDateTime(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Pattern patternDateTime \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\\\\s+\\\\d{4}\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Pattern patternDate \u003d Pattern.compile(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (patternDateTime.matcher(input).find()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return LocalDateTime.parse(input, formatter);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        } else if (patternDate.matcher(input).find()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            return LocalDate.parse(input, formatter).atStartOfDay();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        throw new UnsupportedOperationException(\"Supplied string is not of proper format.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 37
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private File textFile;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Creates Storage object to read and write data from File object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        if (!Files.exists(Paths.get(\"./data\"))) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            boolean ok \u003d new File(\"./data\").mkdir();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            if (!ok) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                System.err.println(\"Error in creating directory.\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        textFile \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Saves current task list into text file, stored in ./data/duke.txt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param taskList list of tasks to store"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @throws IOException Exception if file in default location is not found"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void saveList(List\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        StringBuilder writeContents \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        for (Task v : taskList) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            writeContents.append(v.writeFormat());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            writeContents.append(\"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        String path \u003d textFile.getAbsolutePath();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        fw.write(writeContents.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Loads list of tasks from text file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return List of Tasks parsed from text file"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @throws IllegalArgumentException if text file contains invalid line"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @throws FileNotFoundException if file cannot be found in default location"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public List\u003cTask\u003e loadList() throws IllegalArgumentException, FileNotFoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Scanner sc \u003d new Scanner(textFile);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            String s \u003d sc.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            switch (s.charAt(0)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                taskList.add(Todo.readFormat(s));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                taskList.add(Deadline.readFormat(s));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                taskList.add(Event.readFormat(s));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                throw new IllegalArgumentException(\"No corresponding command found\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 72
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public interface Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    String getName();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    boolean getCompletion();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    Task makeCompleted();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    String writeFormat();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 9
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Todo implements Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    private final boolean completed;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Todo(String name, boolean completed) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Todo(Todo t, boolean completed) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.name \u003d t.getName();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        this.completed \u003d completed;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public boolean getCompletion() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return this.completed;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public Todo makeCompleted() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Todo(this, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String writeFormat() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"T|\" + name + \"|\" + (completed ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Reads string formatted to store info regarding todotask."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param input input string to be parsed"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @return todotask object parsed from string information"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public static Todo readFormat(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        // assert here such that first token is T"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        List\u003cString\u003e list \u003d Collections.list(new StringTokenizer(input, \"|\")).stream()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .map(token -\u003e (String) token)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return new Todo(list.get(1), Boolean.parseBoolean(list.get(2)));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return \"[T][\" + (completed ? \"✓\" : \"✗\") + \"] \" + name;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 58
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Prints output string into console."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * @param output string to be printed"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void printToConsole(String output) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"--------------------------------------------\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.print(output);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"--------------------------------------------\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Prints landing page with name of program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void printLandingPage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        String logo \u003d \"                _        _____                                 _           \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"     /\\\\        | |      |  __ \\\\                               | |          \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"    /  \\\\  _   _| |_ ___ | |__) |___  ___ _ __   ___  _ __   __| | ___ _ __ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"   / /\\\\ \\\\| | | | __/ _ \\\\|  _  // _ \\\\/ __| \u0027_ \\\\ / _ \\\\| \u0027_ \\\\ / _` |/ _ \\\\ \u0027__|\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"  / ____ \\\\ |_| | || (_) | | \\\\ \\\\  __/\\\\__ \\\\ |_) | (_) | | | | (_| |  __/ |   \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \" /_/    \\\\_\\\\__,_|\\\\__\\\\___/|_|  \\\\_\\\\___||___/ .__/ \\\\___/|_| |_|\\\\__,_|\\\\___|_|   \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"                                        | |                                \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                + \"                                        |_|                                \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"What do you wish to do?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public String receiveCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public boolean hasCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        return sc.hasNextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     * Prints goodbye lines before shutting down program."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"--------------------------------------------\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"Farewell. Thank you for using AutoResponder.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        System.out.println(\"--------------------------------------------\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 48
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Event test \u003d new Event(\"Event Test\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                LocalDateTime.of(2020, 1, 1, 0, 0));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"[E][✗] Event Test (at: Jan 1 2020 0000)\", test.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void testWriteFormatConversion() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Event test \u003d new Event(\"Event Test\","
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                LocalDateTime.of(2020, 1, 1, 0, 0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"E|Event Test|2020-01-01T00:00|0\", test.writeFormat());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void checkCompletion_incompleteEvent_makeComplete() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Event test \u003d new Event(\"Event Test\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "                LocalDateTime.of(2020, 1, 1, 0, 0));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"E|Event Test|2020-01-01T00:00|1\", test.makeCompleted().writeFormat());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 29
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Todo test \u003d new Todo(\"Test AR\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"[T][✗] Test AR\", test.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void testWriteFormatConversion() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Todo test \u003d new Todo(\"Test AR\", false);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"T|Test AR|0\", test.writeFormat());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void markCompleted_incompleteTodo_successfulChangeInCompleted() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Todo test \u003d new Todo(\"Test AR\", false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(\"T|Test AR|1\", test.makeCompleted().writeFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    public void markCompleted_completeTodo_noChange() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        Todo test \u003d new Todo(\"Test AR\", true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "        assertEquals(test.writeFormat(), test.makeCompleted().writeFormat());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 29
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "No matching command found"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "[T][✗] hi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "[T][✗] hey"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "[E][✗] 1 (at: 1)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "[D][✗] 2 (by: 2)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "1. [T][✗] hi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "2. [T][✗] hey"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "3. [E][✗] 1 (at: 1)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "4. [D][✗] 2 (by: 2)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "[E][✓] 1 (at: 1)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "1. [T][✗] hi"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "2. [T][✗] hey"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "3. [E][✓] 1 (at: 1)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "4. [D][✗] 2 (by: 2)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "Farewell. Thank you for using AutoResponder."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "--------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "todo hi"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "todo hey"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "event 1 /at 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "deadline 2 /by 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "java -classpath ..\\bin AutoResponder \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nigelnnk"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nigelnnk": 22
    }
  }
]
