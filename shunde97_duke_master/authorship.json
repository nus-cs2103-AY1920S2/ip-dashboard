[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "shunde97": 23
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "T | 1 | project for week 2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "D | 0 | be born | 1997-08-05"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "E | 0 | project meeting  |  bayfront"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "E | 0 | cny dinner  |  saturday 6pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "T | 0 | project for week 2"
      }
    ],
    "authorContributionMap": {
      "shunde97": 5
    }
  },
  {
    "path": "src/main/java/CommandChecker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The CommandChecker class encapsulates validating user input. It takes in user input and determines"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * the corresponding action. It checks the input against the current ArrayList of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class CommandChecker {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The method to validate user input against the current ArrayList of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param command The String representation of user input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param list The current ArrayList of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @throws DukeException If user input is invalid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void checkCommand(String command, ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.length() \u003c 4) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, your command is too short \\uD83D\\uDE09 \\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.contains(\"todo\") || command.contains(\"event\") || command.contains(\"deadline\") || command.contains(\"delete\") || command.contains(\"done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (command.equals(\"todo \") || command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\" \") || command.equals(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! What task number have you accomplished?\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(command.substring(5)) \u003e list.size()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The number you typed is too high!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(command.substring(5)) \u003c 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You typed a negative number!\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if ((command.equals(\"event\")) || (command.equals(\"event \"))) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Did you forget to add /at for your event???\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (command.split(\"/at\")[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! An event should have a day and time!!!\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\" \") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! What task number did you want to delete?\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(command.substring(7)) \u003e list.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The number you typed is too high!\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(command.substring(7)) \u003c 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You typed a negative number!\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if ((command.equals(\"deadline \")) || (command.equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Did you forget to add /by for your deadline???\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (command.contains(\"list\") \u0026\u0026 !command.equals(\"list\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! did you mean to type \\\"list\\\"? ☹ \\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (!command.substring(0, 4).equals(\"list\") \u0026\u0026 !command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means ☹ \\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 74
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Deadline class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to deadline objects, and contains a deadline which is a String."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String dateInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private boolean hasTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String timeInput;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Deadline class and formats the date input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A String description of the Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param dateInput A String description of the date of Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Deadline(String description, String dateInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.hasTime \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.dateInput \u003d dateInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (dateInput.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.dateInput \u003d dateInput.split(\" \")[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.timeInput \u003d dateInput.split(\" \")[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.hasTime \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.date \u003d LocalDate.parse(this.dateInput);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Deadline class and formats the date and time input."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A String description of the Deadline."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param dateInput A String description of the date of Deadline."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param timeInput A String description of the time of Deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Deadline(String description, String dateInput, String timeInput) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.dateInput \u003d dateInput;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.timeInput \u003d timeInput;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.date \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.hasTime \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Saves the deadline object in a human readable string format with all"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * the important information."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String containing information of the deadline saved in a"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * human readable format."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (!hasTime) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"D | \" + this.binary + \" | \" + this.description + \" | \" + this.dateInput;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"D | \" + this.binary + \" | \" + this.description + \" | \" + this.dateInput + \" \" + this.timeInput;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns a string representation of the Deadline object with the date and time formatted."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the Deadline object with the proper date and time format."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (!hasTime) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"     [D]\" + this.getIcon() + \" \" + this.description + \" (by: \""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.getDayOfWeek().toString().substring(0,3)  + \" \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"     [D]\" + this.getIcon() + \" \" + this.description + \" (by: \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.getDayOfWeek().toString().substring(0,3)  + \" \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.timeInput + \"hrs)\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 80
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * Class for Duke chat bot with main class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * This program is a chat bot which manages a list of tasks. Upon exit, the tasks will"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * be saved to a data file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String effect;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param filePath the String representation of the file location"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.effect \u003d \"************************************************************\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Handles the main operations of Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A scanner will scan the user input and this method will return the corresponding"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * action. Once the operations has been completed, a file will be saved based on the"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * current list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ui.greet(this.effect);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        while(!ui.checkFinished()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            assert userInput.length() \u003e 0 : \"The input is not valid.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            parser.verifyCommand(this.tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.tasks \u003d ui.handleInput(userInput, tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        storage.saveCurrentList(this.tasks.getTaskArray());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The main method for Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The method creates an instance of Duke based on the file location and starts the"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * operations of Duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"booting up...\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        new Duke(\"data/data.txt\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "shunde97": 60
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The DukeException class handles the output of error message."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class DukeException extends IllegalArgumentException{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Event class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to event objects, and contains a deadline which is a String."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor class for the Event class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The string description of the Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param deadline The deadline date and or time of the Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Event(String description, String deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Saves the event object in a human readable string format with all"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * the important information"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String containing information of the event saved in a"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * human readable format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"E | \" + this.binary + \" | \" + this.description + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns a String representation of an Event object"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of an Event object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"     [E]\" + this.getIcon() + \" \" + this.description + \"(at:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 40
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Parser class takes in the user input and makes sense of it, splitting it up into"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * commands and descriptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method for Parser class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * It takes in the user input and splits it up into commands and descriptions."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Parser (String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.command \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (userInput.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.description \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.description \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * To verify that the user input is valid."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param tasks The TaskList class object containing the current Arraylist of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void verifyCommand(TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        CommandChecker commandChecker \u003d new CommandChecker();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            commandChecker.checkCommand(userInput, tasks.getTaskArray());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (DukeException e)  {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the description of the command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of the description."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 56
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Storage class encapsulates the saving and loading of tasks. It creates a new file if"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * no files exist."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String stringSplitter \u003d \" \" + \"\\\\|\" + \" \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Storage class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param fileName the name of the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor to load the previous file with all the previous tasks saved inside."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A ArrayList of tasks based on the previous ArrayList, or an empty one if there"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * was no previous list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FileReader fileReader \u003d new FileReader(this.fileName);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            String lineRead \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            while (lineRead !\u003d null) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String[] dataLine \u003d lineRead.split(stringSplitter);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (dataLine[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Todo(dataLine[2]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else if (dataLine[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Event(dataLine[2], dataLine[3]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else if (dataLine[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Deadline(dataLine[2], dataLine[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (dataLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task.markDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                lineRead \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            assert tasks.size() \u003e 0 : \"File is empty.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"No file found at: \" + fileName);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Creating one now...\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Error reading file: \" + fileName);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"done with loading\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A class to handle the saving of the ArrayList of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param list the ArrayList of tasks to save."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void saveCurrentList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.fileName);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                bufferedWriter.write(task.saveTask());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 86
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Task class is a subclass for all todos, deadlines, and events. It contains a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * String description of the task and a boolean to determine if the task is completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected String binary;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.binary \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain a icon corresponding to whether the task is completed"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * or not."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A tick if the task is completed and a cross if the task is not completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"[\\u2713]\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"[\\u2718]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A method to mark the task as completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.binary \u003d \"1\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A method to save the task in a readable format, with a binary representing"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * whether the task has been completed or not."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the task in a readable format"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"T | \" + this.binary + \" | \" + this.description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Prints the completion icon of the task, and the task description."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String which contains the completion icon and the task description."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.getIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The TaskList class is to encapsulates the methods of task operations. It contains an"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * ArrayList of Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private ArrayList\u003cTask\u003e taskArray;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of TaskList using an existing ArrayList of Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param taskArray ArrayList of Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArray) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray \u003d taskArray;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Prints out all the tasks in the ArrayList in a readable format."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void printlist(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        for (Task t : taskArray) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Adds a Task into the ArrayList based on user input and type of task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param command The type of task to add into the ArrayList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The description of the task to add into the ArrayList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList based on the modified ArrayList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList addTask (String command, String description) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (description.split(\" /by \")[1].split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String date \u003d description.split(\" /by \")[1].split(\" \")[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (date.contains(\"/\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String day \u003d date.split(\"/\")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String month \u003d date.split(\"/\")[1];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String year \u003d date.split(\"/\")[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    date \u003d year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                this.taskArray.add(new Deadline(description.split(\" /by \")[0], date));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String date \u003d description.split(\" /by \")[1].split(\" \")[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String time \u003d description.split(\" /by \")[1].split(\" \")[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (date.contains(\"/\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String day \u003d date.split(\"/\")[0];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String month \u003d date.split(\"/\")[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String year \u003d date.split(\"/\")[2];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    date \u003d year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                this.taskArray.add(new Deadline(description.split(\" /by \")[0], date, time));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.add(new Todo(description));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.add(new Event(description.split(\"/at\")[0], description.split(\"/at\")[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(taskArray);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Deletes a task in the ArrayList based on user input."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param target The position chosen by the user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList created from the modified ArrayList."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList deleteTask (int target) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray.remove(target);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(taskArray);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Changes the completion status of the chosen task to completed, based on user input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param target The position chosen by the user."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList with the modified ArrayList."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList markDone(int target) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray.get(target).markDone();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(taskArray);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Searches for tasks containing the user input keyword."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param keyWord The user input to search for tasks containing this word."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void searchTask(String keyWord) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        for (Task t: taskArray) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (t.getDescription().contains(keyWord)){"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                System.out.println(index + \". \" + t) ;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns the task chosen by the user."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param position The position of the chosen task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return The chosen task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Task get(int position) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray.get(position);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Method to return the number of tasks present in the ArrayList."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the number of tasks inside the ArrayList."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray.size();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Accesses the ArrayList of tasks."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the ArrayList of tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArray() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 135
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The To do class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to to do objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A constructor method for the to do class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A string representation of the description of the to do object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns the String representation of the to do object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the String representation of the to do object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"     [T]\" + this.getIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Ui class encapsulates all the methods dealing with user interactions. It takes in user input"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * and determines the corresponding action. It contains a boolean to determine if the user wants to end"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * the chat bot operations."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private boolean isFinished;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String effect;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Ui."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isFinished \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.effect \u003d \"************************************************************\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Method to print out the greeting messages to welcome the user to the chat bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param effect The design of the line."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void greet(String effect) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                   + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                   + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                   + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                   + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(effect +\"\\nHi! I\u0027m\\n\"+logo);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"What can I do for you?\\n\"+effect);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * This method takes in the user input and perform the required actions based on user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param userInput String containing user input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param tasks The TaskList containing the ArrayList of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList from the actions performed based on user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList handleInput(String userInput, TaskList tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                System.out.println(\"😊 You have 0 tasks in your list! 😊\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                tasks.printlist();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.equals(\"done\") \u0026\u0026 ((Integer.parseInt(description) - 1) \u003c\u003d tasks.getSize())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect + \"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks \u003d tasks.markDone(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(tasks.get(Integer.parseInt(description) - 1));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.equals(\"delete\") \u0026\u0026 ((Integer.parseInt(description) - 1) \u003c\u003d tasks.getSize())) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect + \"\\nNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(tasks.get(Integer.parseInt(description) - 1));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks \u003d tasks.deleteTask(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.isFinished \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (((command.equals(\"todo\")) || (command.equals(\"deadline\")) || (command.equals(\"event\"))) \u0026\u0026 (!description.isBlank())) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks \u003d tasks.addTask(command, description);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect + \"\\nGot it! I\u0027ve added this task:\\n\" + tasks.get(tasks.getSize() - 1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect + \"\\nHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks.searchTask(description);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(this.effect);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * To bid farewell to the user before the chat bot closes."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void farewell() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"\\n\" + \"Bye! :) Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"☹ OOPS!!! LOADING ERROR...\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Checks if the user has keyed in \"bye\" to end chat bot operations."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return true if there are still actions to be inputted, false if the user has keyed in \"bye\"."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public boolean checkFinished() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.isFinished;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 100
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "todo project for week 2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "deadline celebrate cny /by 29/02/2020 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "deadline be born /by 1997-08-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "event project meeting /at bayfront"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "event cny dinner /at saturday 6pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "todo project for week 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shunde97": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin C:\\Users\\chian\\Documents\\GitHub\\duke\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shunde97": 21
    }
  }
]
