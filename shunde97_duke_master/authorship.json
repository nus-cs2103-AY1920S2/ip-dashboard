[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveVersion \u003d \"0.1.4\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    mainClassName \u003d \"dukeclass.Launcher\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:win\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "shunde97": 52
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "T | 0 | project 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "T | 0 | project 2"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "D | 0 | interview | 2020-03-05 2359"
      }
    ],
    "authorContributionMap": {
      "shunde97": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "# Double McSpicy User Guide  "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Double McSpicy is an easy to use bot which helps you keep track of your tasks, or when you just need a friend."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Add tasks "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Adds a ToDo, Deadline, or Event task to the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Generate list of tasks "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Generate the current list of tasks with their description and whether they are done or not"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Delete tasks "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Deletes a task from the list of tasks based on the index of the tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Find tasks "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Finds task(s) which contains the desired keyword in the list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Mark tasks as done "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Marks a tasks from the list of tasks as done, based on the position."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Mass delete tasks  "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Delete tasks which contains the desired keyword from the list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Mass mark done tasks "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Mark all tasks containing the desired keyword as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### Save list of tasks for future use "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Close the app and saves the current list of tasks so that when Double McSpicy is opened in future, the list of tasks is still accessible."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `todo` - Adds a ToDo task to the list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Adds a ToDo task to the list of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `todo [description]`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`todo submit iP`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![ToDo expected outcome](Todo.png)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `event` - Adds an Event task to the list of tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Adds an Event task to the list of tasks, with information about the event. The information"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "about the event can be the time, date, or place that the event is happening or even a combination of the above, it need"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "not follow a format."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "The important thing about the usage is the `/at` after the description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `Event [description] /at [information]`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`event ip celebration /at tuesday 2359`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`event buffet /at raffles place tuesday 05/08/1997 7pm`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![Event expected outcome](Event.png)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `deadline` - Adds a Deadline task to the list of tasks"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Adds a Deadline task to the list of tasks, with the date and/or time of the deadline. "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "The important things about the usage is the `/by` after the description and to follow the format of the date and time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "below."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `Deadline [description] /by [date and/or time]`, the date must be in DD/MM/YYYY format or YYYY-MM-DD format"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "and the time must be in HHMM format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`deadline submit ip /by 02/03/2020 2359`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`deadline submit ip /by 02/03/2020`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![Deadline expected outcome](Deadline.png)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `list` - Generate the list of tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Generate the list of tasks and their information."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `list`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![list expected outcome](list.png)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `delete` - Deletes a task from the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Deletes a task from the list based on its numerical position in the list "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": "The important things about the usage is number given must fall within the range of number of tasks on the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `delete [position]`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`delete 3`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![delete expected outcome](Delete.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `find` - Searches for tasks from the list which contains the desired keyword"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Displays tasks from the list which contains the desired keyword"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `find [keyword]`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`find project`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![find expected outcome](find.png)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `done` - mark the desired task as done based on the given position of task"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Given the position of a task, marks it as done. It is not reversible until further editions of this bot."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shunde97"
        },
        "content": "It is important that the number/position given falls within the size of the list."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `done [position]`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`done 2`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![done expected outcome](done.png)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `massdelete` - delete all tasks containing the desired keyword"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Deletes all tasks from the list which contains the desired keyword"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `massdelete [keyword]`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`massdelete project`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![massdelete expected outcome](massdelete.png)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `massdone` - marks all tasks containing the desired keyword as done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Marks all tasks from the list which contains the desired keyword as done, it is not reversible as of this update."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `massdone [keyword]`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`massdone project`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shunde97"
        },
        "content": "![massdone expected outcome](massdone.png)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shunde97"
        },
        "content": "### `bye` - saves the current list of tasks and closes the window"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shunde97"
        },
        "content": "It saves all the tasks and their respective information and status of done/not done, and closes the window."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Format is `bye`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shunde97"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shunde97"
        },
        "content": "The window closes"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shunde97"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Credits to Jeffry Lum for the tutorial and code for gradle, fxml, and javafx files -  [iP Tutorials](https://github.com/nus-cs2103-AY1920S2/duke/blob/master/tutorials/javaFxTutorialPart4.md)"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shunde97"
        },
        "content": "Acknowledgements for images used:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shunde97"
        },
        "content": "[Double McSpicy](https://www.mcdonalds.com.sg/food-menu/double-mcspicy/) is from McDonalds Singapore, [Homer Drooling](https://www.pinterest.com/pin/488218415832350967/) is from Pinterest"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "shunde97": 156
    }
  },
  {
    "path": "src/main/Resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"88\" fitWidth\u003d\"88\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "shunde97": 16
    }
  },
  {
    "path": "src/main/Resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukeclass.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: linen;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "shunde97": 19
    }
  },
  {
    "path": "src/main/java/dukeclass/CommandChecker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The CommandChecker class encapsulates validating user input. It takes in user input and determines"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * the corresponding action. It checks the input against the current ArrayList of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class CommandChecker {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The method to validate user input against the current ArrayList of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param command The String representation of user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param list The current ArrayList of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @throws DukeException If user input is invalid"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void checkCommand(String command, ArrayList\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String description \u003d \" \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            description \u003d command.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            description \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.length() \u003c 4) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (!command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, your command is too short \\uD83D\\uDE09 \\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.contains(\"todo\") || command.contains(\"event\") || command.contains(\"deadline\") ||"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                command.contains(\"delete\") || command.contains(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (command.equals(\"todo \") || command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\" \") || command.equals(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! What task number have you accomplished?\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(description) \u003e list.size()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The number you typed is too high!\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(description) \u003c 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You typed a negative number!\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if ((command.equals(\"event\")) || (command.equals(\"event \"))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\"/at\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Did you forget to add /at for your event???\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (command.split(\"/at\")[1].length() \u003c 2) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! An event should have a day and time!!!\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\" \") || command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! What task number did you want to delete?\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(description) \u003e list.size()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The number you typed is too high!\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (Integer.parseInt(description) \u003c 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You typed a negative number!\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else if (command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if ((command.equals(\"deadline \")) || (command.equals(\"deadline\"))) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (!command.contains(\"/by\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Did you forget to add /by for your deadline???\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (command.contains(\"list\") \u0026\u0026 !command.equals(\"list\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! did you mean to type \\\"list\\\"? ☹ \\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (!command.substring(0, 4).equals(\"list\") \u0026\u0026 !command.substring(0, 4).equals(\"find\") \u0026\u0026"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    !command.contains(\"massdelete\") \u0026\u0026 !command.contains(\"massdone\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means ☹ \\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (command.contains(\"delete\") \u0026\u0026 description.matches(\"-?\\\\d+(\\\\.\\\\d+)?\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means ☹ \\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 87
    }
  },
  {
    "path": "src/main/java/dukeclass/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Deadline class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to deadline objects, and contains a deadline which is a String."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String dateInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private boolean hasTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String timeInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Deadline class and formats the date input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A String description of the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param dateInput A String description of the date of Deadline."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Deadline(String description, String dateInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.hasTime \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.dateInput \u003d dateInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (dateInput.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.dateInput \u003d dateInput.split(\" \")[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.timeInput \u003d dateInput.split(\" \")[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.hasTime \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.date \u003d LocalDate.parse(this.dateInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Deadline class and formats the date and time input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A String description of the Deadline."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param dateInput A String description of the date of Deadline."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param timeInput A String description of the time of Deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Deadline(String description, String dateInput, String timeInput) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.dateInput \u003d dateInput;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.timeInput \u003d timeInput;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.date \u003d LocalDate.parse(dateInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.hasTime \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Saves the deadline object in a human readable string format with all"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * the important information."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String containing information of the deadline saved in a human readable format."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (!hasTime) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"D | \" + this.binary + \" | \" + this.description + \" | \" + this.dateInput;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"D | \" + this.binary + \" | \" + this.description + \" | \" + this.dateInput + \" \" + this.timeInput;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns a string representation of the Deadline object with the date and time formatted."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the Deadline object with the proper date and time format."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (!hasTime) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"     [D]\" + this.getIcon() + \" \" + this.description + \" (by: \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.getDayOfWeek().toString().substring(0,3)  + \" \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"     [D]\" + this.getIcon() + \" \" + this.description + \" (by: \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.getDayOfWeek().toString().substring(0,3)  + \" \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + this.timeInput + \"hrs)\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 81
    }
  },
  {
    "path": "src/main/java/dukeclass/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 63
    }
  },
  {
    "path": "src/main/java/dukeclass/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * Class for Duke chat bot with main class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * This program is a chat bot which manages a list of tasks. Upon exit, the tasks will"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * be saved to a data file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Handles the main operations of Duke."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A scanner will scan the user input and this method will return the corresponding"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * action. Once the operations has been completed, a file will be saved based on the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * current list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String run(String userInput) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        assert userInput.length() \u003e 0 : \"The input is not valid.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        parser.verifyCommand(userInput, this.ui.tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.ui.handleInput(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The main method for Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The method creates an instance of Duke based on the file location and starts the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * operations of Duke."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.run(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shunde97": 58
    }
  },
  {
    "path": "src/main/java/dukeclass/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The DukeException class handles the output of error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class DukeException extends IllegalArgumentException{"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 20
    }
  },
  {
    "path": "src/main/java/dukeclass/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Event class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to event objects, and contains a deadline which is a String."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor class for the Event class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The string description of the Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param deadline The deadline date and or time of the Event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Event(String description, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Saves the event object in a human readable string format with all"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * the important information"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String containing information of the event saved in a"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * human readable format."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"E | \" + this.binary + \" | \" + this.description + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns a String representation of an Event object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of an Event object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"     [E]\" + this.getIcon() + \" \" + this.description + \"(at:\" + this.deadline + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 42
    }
  },
  {
    "path": "src/main/java/dukeclass/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 12
    }
  },
  {
    "path": "src/main/java/dukeclass/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            stage.setTitle(\"Double McSpicy\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "shunde97": 33
    }
  },
  {
    "path": "src/main/java/dukeclass/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                DialogBox.getDukeDialog(ui.greet(), dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        assert input.length() \u003e 0 : \"your input is not valid.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.farewell(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Closes the dialogue box"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param userInput user input to check for bye"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private void farewell(String userInput) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 70
    }
  },
  {
    "path": "src/main/java/dukeclass/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Parser class takes in the user input and makes sense of it, splitting it up into"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * commands and descriptions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String userInput;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method for Parser class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * It takes in the user input and splits it up into commands and descriptions."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Parser (String userInput) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.command \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (userInput.split(\" \").length \u003e 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.description \u003d userInput.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.description \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * To verify that the user input is valid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param tasks The TaskList class object containing the current Arraylist of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void verifyCommand(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        CommandChecker commandChecker \u003d new CommandChecker();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (tasks.getTaskArray() \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                commandChecker.checkCommand(input, temp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                commandChecker.checkCommand(input, tasks.getTaskArray());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (DukeException e)  {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the description of the command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of the description."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 65
    }
  },
  {
    "path": "src/main/java/dukeclass/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Storage class encapsulates the saving and loading of tasks. It creates a new file if"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * no files exist."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private String stringSplitter \u003d \" \" + \"\\\\|\" + \" \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor method for the Storage class"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param fileName the name of the file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * The constructor to load the previous file with all the previous tasks saved inside."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A ArrayList of tasks based on the previous ArrayList, or an empty one if there"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * was no previous list."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FileReader fileReader \u003d new FileReader(this.fileName);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            String lineRead \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            while (lineRead !\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String[] dataLine \u003d lineRead.split(stringSplitter);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                Task task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (dataLine[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Todo(dataLine[2]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else if (dataLine[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Event(dataLine[2], dataLine[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else if (dataLine[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task \u003d new Deadline(dataLine[2], dataLine[3]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (dataLine[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        task.markDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                lineRead \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            assert tasks.size() \u003e 0 : \"File is empty.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            bufferedReader.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"No file found at: \" + fileName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Creating one now...\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Error reading file: \" + fileName);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\"done with loading\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void checkDirectory() throws IOException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        Path directory \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (!Files.exists(directory)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                Files.createDirectory(directory);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void checkFile() throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        File dukefile \u003d new File(\"data\" + File.separator + \"data.txt\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (dukefile.createNewFile()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                System.out.println(\"creating new file\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"Error creating file\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A class to handle the saving of the ArrayList of tasks."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param list the ArrayList of tasks to save."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void saveCurrentList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.fileName);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(fileWriter);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                bufferedWriter.write(task.saveTask());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 118
    }
  },
  {
    "path": "src/main/java/dukeclass/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Task class is a subclass for all todos, deadlines, and events. It contains a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * String description of the task and a boolean to determine if the task is completed."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    protected String binary;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.binary \u003d \"0\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain the description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A getter method to obtain a icon corresponding to whether the task is completed"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * or not."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A tick if the task is completed and a cross if the task is not completed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"[Done]\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return \"[Not]\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A method to mark the task as completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.binary \u003d \"1\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A method to save the task in a readable format, with a binary representing"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * whether the task has been completed or not."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String representation of the task in a readable format"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"T | \" + this.binary + \" | \" + this.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Prints the completion icon of the task, and the task description."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A String which contains the completion icon and the task description."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.getIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 74
    }
  },
  {
    "path": "src/main/java/dukeclass/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The TaskList class is to encapsulates the methods of task operations. It contains an"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * ArrayList of Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e taskArray;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of TaskList using an existing ArrayList of Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param taskArray ArrayList of Tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskArray) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray \u003d taskArray;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Prints out all the tasks in the ArrayList in a readable format."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void printlist(){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        for (Task t : this.taskArray) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(index + \".\" + t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Adds a Task into the ArrayList based on user input and type of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param command The type of task to add into the ArrayList."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description The description of the task to add into the ArrayList."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList based on the modified ArrayList."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList addTask (String command, String description) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (command.equals(\"deadline\") \u0026\u0026 description.contains(\"/by\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (description.split(\" /by \")[1].split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String date \u003d description.split(\" /by \")[1].split(\" \")[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (date.contains(\"/\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String day \u003d date.split(\"/\")[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String month \u003d date.split(\"/\")[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String year \u003d date.split(\"/\")[2];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    date \u003d year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                this.taskArray.add(new Deadline(description.split(\" /by \")[0], date));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String date \u003d description.split(\" /by \")[1].split(\" \")[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                String time \u003d description.split(\" /by \")[1].split(\" \")[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (date.contains(\"/\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String day \u003d date.split(\"/\")[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String month \u003d date.split(\"/\")[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    String year \u003d date.split(\"/\")[2];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    date \u003d year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                this.taskArray.add(new Deadline(description.split(\" /by \")[0], date, time));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.add(new Todo(description));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.add(new Event(description.split(\"/at\")[0], description.split(\"/at\")[1]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(taskArray);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Deletes a task in the ArrayList based on user input."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param target The position chosen by the user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList created from the modified ArrayList."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList deleteTask (int target) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray.remove(target);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(taskArray);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Changes the completion status of the chosen task to completed, based on user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param target The position chosen by the user."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList with the modified ArrayList."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList markDone(int target) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.taskArray.get(target).markDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(this.taskArray);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Searches for tasks containing the user input keyword."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param keyWord The user input to search for tasks containing this word."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e searchTask(String keyWord) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ArrayList\u003cTask\u003e correctTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        for (Task t: this.taskArray) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            if (t.getDescription().contains(keyWord)){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                correctTasks.add(t);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return correctTasks;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Mass deletes tasks containing the user input keyword."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param keyWord The user input to search for tasks containing this word."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList created from the modified ArrayList with the required tasks deleted."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList massDelete(String keyWord) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (keyWord.equals(\"all\")){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            for (Task t: this.taskArray) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (t.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    System.out.println(t);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    temp.add(t);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.taskArray.removeAll(temp);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(this.taskArray);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Mass mark tasks containing the user input keyword as done."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param keyWord The user input to search for tasks containing this word."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A new TaskList created from the modified ArrayList with the required tasks marked as done."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList massDone(String keyWord) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        if (keyWord.equals(\"all\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            for (Task t : this.taskArray) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            for (Task t: this.taskArray) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                if (t.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    t.markDone();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    System.out.println(t);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return new TaskList(this.taskArray);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns the task chosen by the user."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param position The position of the chosen task."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return The chosen task."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Task get(int position) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray.get(position);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Method to return the number of tasks present in the ArrayList."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the number of tasks inside the ArrayList."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray.size();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Accesses the ArrayList of tasks."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the ArrayList of tasks."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskArray() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.taskArray;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Prints the string representation of all the tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of all the tasks."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        StringBuilder tasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        for (Task t : this.taskArray) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks.append(\"\\n\" + Integer.valueOf(index).toString() + \".\" + t.toString());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 195
    }
  },
  {
    "path": "src/main/java/dukeclass/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The To do class extends the Task class, it encapsulates all the information pertaining"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * to to do objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * A constructor method for the to do class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param description A string representation of the description of the to do object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Returns the String representation of the to do object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return the String representation of the to do object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"     [T]\" + this.getIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 27
    }
  },
  {
    "path": "src/main/java/dukeclass/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "package dukeclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * The Ui class encapsulates all the methods dealing with user interactions. It takes in user input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * and determines the corresponding action. It contains a boolean to determine if the user wants to end"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * the chat bot operations."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": " * @author Chiang Shun De"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    private boolean isFinished;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Constructor method to create an instance of Ui."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.isFinished \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        storage \u003d new Storage(\"data/data.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            storage.checkDirectory();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            storage.checkFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            showLoadingError(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            System.out.println(\"error creating files/directory\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Method to print out the greeting messages to welcome the user to the chat bot."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string greeting for the chatbot."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"Hello I\u0027m Double McSpicy!\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * This method takes in the user input and perform the required actions based on user input."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @param userInput String containing user input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String handleInput(String userInput) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (this.tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"YAY You have 0 tasks in your list! :)\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Here are the tasks in your list:\" + this.tasks.printTasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if ((Integer.parseInt(description)) \u003c\u003d this.tasks.getSize()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        this.tasks.markDone(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Nice! I\u0027ve marked this task as done: \\n\" + this.tasks.get(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"the number u keyed in is too high \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if ((Integer.parseInt(description)) \u003c\u003d this.tasks.getSize()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        System.out.println();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        Task temp \u003d this.tasks.get(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        this.tasks.deleteTask(Integer.parseInt(description) - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Noted. I\u0027ve removed this task: \\n\" + temp.toString() + \"\\nNow you have \" + Integer.valueOf(this.tasks.getSize()).toString() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"the number u keyed in is too high \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"massdelete\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    ArrayList\u003cTask\u003e massTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    massTasks \u003d this.tasks.searchTask(description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    StringBuilder massDeleteString \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    for (Task t : massTasks) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        massDeleteString.append(\"\\n\" + t.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    this.tasks.massDelete(description);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (description.equals(\"all\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Noted. I\u0027ve removed all tasks! \\n Now you have 0 tasks! :)\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Noted. I\u0027ve removed these tasks with the keyword: \" + description + massDeleteString.toString() + \"\\nNow you have \" + Integer.valueOf(this.tasks.getSize()).toString() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"massdone\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    this.tasks.massDone(description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    ArrayList\u003cTask\u003e massDoneTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    massDoneTasks \u003d this.tasks.searchTask(description);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    StringBuilder massDoneString \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    for (Task t : massDoneTasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        massDoneString.append(\"\\n\" + t.toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    if (description.equals(\"all\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Noted. I\u0027ve marked all tasks as done!\" + \"\\nNow you have \" + Integer.valueOf(this.tasks.getSize()).toString() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        return \"Noted. I\u0027ve marked done these tasks with the keyword: \" + description + massDoneString.toString() + \"\\nNow you have \" + Integer.valueOf(this.tasks.getSize()).toString() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    this.tasks.addTask(command, description);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    return \"Got it! I\u0027ve added this task:\\n\" + this.tasks.get(this.tasks.getSize() - 1) + \"\\n\" + \"Now you have \" + Integer.valueOf(this.tasks.getSize()).toString() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    ArrayList\u003cTask\u003e correctTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    correctTasks \u003d this.tasks.searchTask(description);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    StringBuilder matchingTasks \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    for (Task t : correctTasks) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                        matchingTasks.append(\"\\n\" + t.toString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    return matchingTasks.toString();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    storage.saveCurrentList(this.tasks.getTaskArray());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    return this.farewell();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "shunde97"
        },
        "content": "                    return \"sorry got error\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "shunde97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * To bid farewell to the user before the chat bot closes."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return A string representation of the bot farewell"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public String farewell() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return \"Bye! :\u0027) Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        e.printStackTrace();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        System.out.println(\":( OOPS!!! LOADING ERROR...\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * Checks if the user has keyed in \"bye\" to end chat bot operations."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     * @return true if there are still actions to be inputted, false if the user has keyed in \"bye\"."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "shunde97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public boolean checkFinished() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        return this.isFinished;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    public void updateTaskList(TaskList taskList) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "shunde97"
        },
        "content": "        this.tasks \u003d taskList;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "shunde97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "shunde97": 154
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "todo project for week 2"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": "deadline celebrate cny /by 29/02/2020 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "deadline be born /by 1997-08-05"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "event project meeting /at bayfront"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": "event cny dinner /at saturday 6pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "todo project for week 2"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "shunde97": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "shunde97"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "shunde97"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "shunde97"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "shunde97"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin C:\\Users\\chian\\Documents\\GitHub\\duke\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "shunde97"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "shunde97"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "shunde97"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "shunde97"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "shunde97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "shunde97"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "shunde97"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "shunde97": 21
    }
  }
]
