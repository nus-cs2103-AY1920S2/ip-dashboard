[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    //Shadow is a plugin that packages an application into an executable jar file"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation \u0027org.testng:testng:6.9.6\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "version \u00270.2.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "mightyrabbit99": 41
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "T,false,shit"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "T,false,haha"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "D,by:, Sun,false,nanv"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "T,false,ahhah"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "T,false,shinva"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.event.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.parser.*;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.ui.*;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * Main UI method."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Button sendButton;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public ScrollPane scrollPane;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public AnchorPane mainLayout;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public UiText ui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * If no file path specified, default path is assumed"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private Duke(boolean gui) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(Storage.DEFAULT_PATH, gui);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * constructor to specify file path of the last saved data"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param filePath \u003d path of last saved data file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param gui      \u003d using gui?"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Duke(String filePath, boolean gui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.ui \u003d new Ui(new Scanner(System.in));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.storage.fileExist()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.tasks \u003d TaskList.fromCSVList(storage.loadCSVList());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.ui.respond(Ui.loadingErrorMsg);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (gui) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.gui \u003d new Gui(this.dialogContainer, this.userInput);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }*/"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Main method."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.respond(Ui.greetings);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Command cmd;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        while (ui.hasNextLine()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            cmd \u003d Parser.parse(ui.nextLine());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            cmd.execute(this.tasks, this.ui, this.storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (args.length \u003e 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            new Duke(args[0], false).run();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            new Duke(false).run();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected void handleSendButtonAction(MouseEvent event) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ui \u003d new Gui(this.dialogContainer, this.userInput);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            if(this.ui.hasNextLine()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                Command cmd \u003d Parser.parse(this.ui.nextLine());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                cmd.execute(this.tasks, this.ui \u003d new Gui(this.dialogContainer, this.userInput), this.storage);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.ui.clearUserInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected void handleUserInputOnAction(Event event) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.ui \u003d new Gui(this.dialogContainer, this.userInput);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if(this.ui.hasNextLine()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            Command cmd \u003d Parser.parse(this.ui.nextLine());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            cmd.execute(this.tasks, this.ui \u003d new Gui(this.dialogContainer, this.userInput), this.storage);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ui.clearUserInput();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        URL url \u003d new File(\"src/main/java/duke/fxml/main.fxml\").toURI().toURL();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Parent root \u003d FXMLLoader.load(url);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //Parent root \u003d FXMLLoader.load(getClass().getClassLoader().getResource(\"src/main/java/duke/fxml/main.fxml\"));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scene scene \u003d new Scene(root, 300, 275);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setTitle(\"FXML Welcome\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //this.dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "/*"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        });"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        });"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "mightyrabbit99": 205
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 12
    }
  },
  {
    "path": "src/main/java/duke/fxml/main.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "\u003cAnchorPane fx:id\u003d\"mainLayout\" fx:controller\u003d\"duke.Duke\" xmlns:fx\u003d\"http://javafx.com/fxml\" prefHeight\u003d\"600\" prefWidth\u003d\"400\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" prefHeight\u003d\"535\" prefWidth\u003d\"385\" hbarPolicy\u003d\"NEVER\" vbarPolicy\u003d\"ALWAYS\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                fitToWidth\u003d\"true\" AnchorPane.topAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" prefWidth\u003d\"300.0\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "              spacing\u003d\"10\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        \u003c/VBox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" prefWidth\u003d\"325.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"1.0\" onAction\u003d\"#handleUserInputOnAction\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" prefWidth\u003d\"55.0\" text\u003d\"send\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"1.0\" onMouseClicked\u003d\"#handleSendButtonAction\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 16
    }
  },
  {
    "path": "src/main/java/duke/parser/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.DeadlineTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.EventTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.task.ToDoTask;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.ui.UiText;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    Scanner terms;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    Command(Scanner sc) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.terms \u003d sc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Add new user task into task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param first   \u003d task type specified by user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param terms   \u003d subsequent terms specified by to define the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param tasks   \u003d task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param ui      \u003d ui for responding to user after adding the new task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param storage \u003d save to local file after every changes to task list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return task successfully added?"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    static boolean addTask(String first, Scanner terms, TaskList tasks, UiText ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            switch (first) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    t \u003d new ToDoTask(terms.nextLine().trim());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    t \u003d new DeadlineTask(terms.useDelimiter(\"/\").next().trim(), terms.useDelimiter(\" \").next().substring(1),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                            terms.nextLine());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    t \u003d new EventTask(terms.useDelimiter(\"/\").next().trim(), terms.useDelimiter(\" \").next().substring(1),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                            terms.nextLine());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ui.respond(\"☹ OOPS!!! The description of a \" + first + \" cannot be empty.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (t !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            tasks.add(t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ui.respond(\"Got it. I\u0027ve added this task:\", \"  \" + t.toString(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    \"Now you have \" + tasks.count() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static void listTask(TaskList tasks, UiText ui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        List\u003cTask\u003e lst \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.start(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.respondLine(lst.stream().map(x -\u003e \"\" + (lst.indexOf(x) + 1) + \".\" + x).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.over();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static void findTask(Scanner terms, TaskList tasks, UiText ui) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        List\u003cTask\u003e lst \u003d tasks.find(terms.next());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.start(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.respondLine(lst.stream().map(x -\u003e \"\" + (lst.indexOf(x) + 1) + \".\" + x).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.over();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static void markAsDone(Scanner terms, TaskList tasks, UiText ui) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        int num \u003d Integer.parseInt(terms.next()) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        tasks.get(num).setToDone();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.respond(UiText.taskDoneNote, tasks.get(num).toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static void remove(Scanner terms, TaskList tasks, UiText ui) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        int num \u003d Integer.parseInt(terms.next()) - 1;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ui.respond(\"Got it. I\u0027ve removed this task:\", \"  \" + tasks.remove(num).toString(),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                \"Now you have \" + tasks.count() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * execute the command with the given elements"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param tasks   \u003d tasklist"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param ui      \u003d ui to respond to user"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param storage \u003d to store data to local file"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return task successfully executed?"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean execute(TaskList tasks, UiText ui, Storage storage) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        String first \u003d this.terms.next();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            if (!addTask(first, this.terms, tasks, ui, storage)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                switch (first) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    case \"exit\":"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        ui.respond(UiText.bye);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        System.exit(0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        listTask(tasks, ui);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        findTask(this.terms, tasks, ui);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        markAsDone(this.terms, tasks, ui);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        remove(this.terms, tasks, ui);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        ui.respond(UiText.dunno);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                        return false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ui.respond(UiText.dunno);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 136
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private Parser() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Parse new Command object based on one command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param cmdLine \u003d user command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return new Command object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static Command parse(String cmdLine) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new Command(new Scanner(cmdLine));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 18
    }
  },
  {
    "path": "src/main/java/duke/storage/CSV.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * CSV class represents a line in a typical .csv file"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * CSV.parse(line) converts a .csv line String to CSV object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class CSV implements Comparable\u003cCSV\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String s;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ArrayList\u003cCSV\u003e arr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (args.length \u003e 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            System.out.println(parseCSV(args[0]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (true) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                String csvStr \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                if (csvStr.equals(\"/exit\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                CSV csv \u003d parseCSV(csvStr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.print(\"\" + csv.length() + \":\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.println(csv.printString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            // \"g, \\\"\\\"\\\"r, t\\\"\\\",d ,a\\\", c\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.s \u003d\u003d null \u0026\u0026 this.arr \u003d\u003d null;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public int getType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.arr !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (this.s !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public int length() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.isEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (this.getType() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.s.length();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.getType() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.size();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    // if allow creation of CSV from another single type 0 CSV, inceptions will"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    // occur"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV(CSV... csvs) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert (csvs.length \u003e\u003d 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.arr \u003d new ArrayList\u003cCSV\u003e(Arrays.asList(csvs));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV(String... str) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert (str.length \u003e 0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (str.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            if (str[0].length() !\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.s \u003d str[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.arr \u003d new ArrayList\u003cCSV\u003e(Arrays.asList(str).stream().map(x -\u003e new CSV(x)).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV(List\u003cString\u003e lst) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (lst.size() !\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.arr \u003d new ArrayList\u003cCSV\u003e(lst.stream().map(CSV::new).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static void flatPrint(CSV csvstr) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (csvstr.getType()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.print(csvstr.s);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                csvstr.arr.forEach(CSV::flatPrint);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV get(int i) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.arr.get(i);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean remove() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.getType() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.s \u003d null;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV remove(int idx) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (getType() \u003d\u003d 1 \u0026\u0026 this.arr.size() \u003e idx) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.remove(idx);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String getStr(int i) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.get(i).toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean add(CSV csv) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.isEmpty()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.arr \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.add(csv);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (this.getType() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.add(csv);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            switchType1();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.arr.add(csv);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private void switchType1() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (this.getType() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.arr \u003d new ArrayList\u003cCSV\u003e();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            if (this.s !\u003d null) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.arr.add(new CSV(this.s));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                this.s \u003d null;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean addAll(CSV csv) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (csv.isEmpty()) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.switchType1();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (csv.getType()) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.arr.addAll(csv.arr);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.arr.add(csv);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String cFormat(String s) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return s.replace(\"\\\\\", \"\\\\\\\\\").replace(\",\", \"\\\\,\").replace(\"\\\"\", \"\\\\\\\"\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String csFormat(String s) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        s \u003d s.replace(\"\\\\\\\\\", Character.toString((char) 25)).replace(\"\\\\,\", Character.toString((char) 26)).replace(\"\\\\\\\"\","
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                Character.toString((char) 24));"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String deSFormat(String s) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (s \u003d\u003d null) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return s.replace((char) 25, \u0027\\\\\u0027).replace((char) 26, \u0027,\u0027).replace((char) 24, \u0027\\\"\u0027);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private void deS() {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (getType() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.s \u003d deSFormat(this.s);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (getType() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.arr.forEach(x -\u003e x.deS());"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static CSV parseCSV(String str) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        str \u003d csFormat(str);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        CSV ans \u003d parseCSV(str, 0);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        ans.deS();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return ans;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static CSV parseCSV(String str, int layer) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        int m \u003d 1 + layer;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        str \u003d str.replace(\"\\\"\".repeat(m), \"\\\"\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (str.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return new CSV();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (!str.contains(\"\\\"\")) {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            String[] strarr \u003d str.split(\",\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return new CSV(Arrays.asList(strarr));"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (str.trim().startsWith(\"\\\"\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            Scanner sc \u003d new Scanner(str.trim() + \" \").useDelimiter(\"\\\"\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            String s \u003d sc.next();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            String ss \u003d \"\";"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            int i \u003d 1; // no. of quotes encountered"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            do {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                do {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    ss +\u003d \"\\\"\" + s;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    s \u003d sc.next();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                } while (s.length() \u003d\u003d 0);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            } while (i % 2 !\u003d 0);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            CSV ans \u003d parseCSV(ss.substring(1), 1);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ans \u003d new CSV(ans);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            str \u003d str.substring(ss.length() + str.indexOf(ss) + 1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            if (str.trim().startsWith(\",\")) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                str \u003d str.substring(str.indexOf(\",\") + 1);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ans.addAll(parseCSV(str, layer));"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return ans;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else if (str.contains(\",\")) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            int r \u003d str.indexOf(\",\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            CSV ans \u003d new CSV(str.substring(0, r));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ans.addAll(parseCSV(str.substring(r + 1), layer));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return ans;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return new CSV(str);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static String quoteFrame(String str, int n) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (n \u003c 0) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        String q \u003d \"\\\"\".repeat((int) Math.pow(2, n));"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return q + str + q;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private String toStrn(int n) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return quoteFrame(\"\", n);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.s;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return quoteFrame(this.arr.stream().map(x -\u003e x.toStrn(n + 1)).collect(Collectors.joining(\",\")), n);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private String printStrn(int n) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return quoteFrame(\"\", n);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return cFormat(this.s);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return quoteFrame(this.arr.stream().map(x -\u003e x.printStrn(n + 1)).collect(Collectors.joining(\",\")), n);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public ArrayList\u003cString\u003e toStringArrayList() {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                ArrayList\u003cString\u003e ans \u003d new ArrayList\u003cString\u003e(1);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                ans.add(this.s);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return ans;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return new ArrayList\u003cString\u003e(this.arr.stream().map(x -\u003e x.toStrn(0)).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String printString() {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return cFormat(this.s);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.arr.stream().map(x -\u003e x.printStrn(0)).collect(Collectors.joining(\",\"));"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return \"\"; // empty CSV"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public int compareTo(CSV csv2) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return length() - csv2.length();"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (this.getType()) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 0:"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.s;"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case 1:"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return this.arr.stream().map(x -\u003e x.toStrn(0)).collect(Collectors.joining(\",\"));"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return \"\";"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 327
    }
  },
  {
    "path": "src/main/java/duke/storage/CSVParsable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public interface CSVParsable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV toCSV();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 5
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * Storage class represents a .csv file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * loadCSVList() returns a list of .csv lines represented in CSV objects in the particular .csv file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " * which path was specified in argument of Storage constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static final String DEFAULT_PATH \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    File originFl;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(DEFAULT_PATH);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.originFl \u003d new File(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean fileExist() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.originFl.exists();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Load csv objects from csv file"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return list of csv object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public List\u003cCSV\u003e loadCSVList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        List\u003cCSV\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert this.originFl !\u003d null \u0026\u0026 this.originFl.isFile() : \"path not file\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            FileReader flr \u003d new FileReader(this.originFl);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            BufferedReader bfr \u003d new BufferedReader(flr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            String line \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while ((line \u003d bfr.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                lst.add(CSV.parseCSV(line));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            bfr.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Save all csv parsable object into local csv file specified by originFl"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param lst \u003d all objects to save"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void save(List\u003c? extends CSVParsable\u003e lst) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try (PrintWriter pw \u003d new PrintWriter(this.originFl)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            for (CSVParsable q : lst) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                pw.println(q.toCSV().printString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (FileNotFoundException fne) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            System.out.println(fne);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 69
    }
  },
  {
    "path": "src/main/java/duke/task/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected static final String TYPE_STR \u003d \"D\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static final DateTimeFormatter defaultDateF \u003d DateTimeFormatter.ofPattern(\"d\u0027/M/L\u0027/y\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    LocalDate ld;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String prepos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String dateLine;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Main constructor used when creating this type of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param name   \u003d task name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param prepos \u003d preposition to describe the time (eg. by , on...)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param time   \u003d string inputted by user that describe the time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public DeadlineTask(String name, String prepos, String time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(name, prepos, time, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private String timeRemStr() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.prepos + \":\" + (this.ld \u003d\u003d null ? this.dateLine"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    : ld.format(DateTimeFormatter.ofPattern(\"E, d-M/L-y\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.prepos + \":\" + this.dateLine;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private DeadlineTask(String name, String prepos, String time, boolean done) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        super(name, TaskType.DEADLINE_TASK);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.prepos \u003d prepos;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.dateLine \u003d time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ld \u003d LocalDate.parse(time, defaultDateF);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ld \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Convert all the relevant data to CSV in order to save to local file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV toCSV() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new CSV(new CSV(DeadlineTask.TYPE_STR), new CSV(this.prepos), new CSV(this.dateLine),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                new CSV(Boolean.toString(isDone())), new CSV(getName()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Load task from local file"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param csv \u003d csv file parsed from local file"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return previously saved task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static DeadlineTask parseFromCSV(CSV csv) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new DeadlineTask(csv.getStr(4), csv.getStr(1), csv.getStr(2), Boolean.parseBoolean(csv.getStr(3)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * String that describe the task when listing all the tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return sqB(DeadlineTask.TYPE_STR) + sqB(gou()) + \" \" + getName() + \" (\" + timeRemStr() + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 74
    }
  },
  {
    "path": "src/main/java/duke/task/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected static final String TYPE_STR \u003d \"E\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private static final DateTimeFormatter defaultDateF \u003d DateTimeFormatter.ofPattern(\"yyyy-mm-dd\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    LocalDate ld;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String prepos;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Main constructor used when creating this type of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param name   \u003d task name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param prepos \u003d preposition to describe the time (eg. by , on...)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param time   \u003d string inputted by user that describe the time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public EventTask(String name, String prepos, String time) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(name, prepos, time, false);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private EventTask(String name, String prepos, String time, boolean done) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        super(name, TaskType.EVENT_TASK);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.prepos \u003d prepos;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ld \u003d LocalDate.parse(time, defaultDateF);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            this.ld \u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Convert all the relevant data to CSV in order to save to local file"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV toCSV() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new CSV(new CSV(EventTask.TYPE_STR), new CSV(this.prepos), new CSV(this.time),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                new CSV(Boolean.toString(isDone())), new CSV(getName()));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Load task from local file"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param csv \u003d csv file parsed from local file"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return previously saved task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static EventTask parseFromCSV(CSV csv) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new EventTask(csv.getStr(4), csv.getStr(1), csv.getStr(2), Boolean.parseBoolean(csv.getStr(3)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private String timeRemStr() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.prepos + \": \" + (this.ld \u003d\u003d null ? this.time"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                    : ld.format(DateTimeFormatter.ofPattern(\"E, d-M/L-y\")));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            return this.prepos + \": \" + this.time;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * String that describe the task when listing all the tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return sqB(EventTask.TYPE_STR) + sqB(gou()) + \" \" + getName() + \" (\" + timeRemStr() + \")\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 74
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSVParsable;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public abstract class Task implements CSVParsable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected boolean done \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected Task(String name, TaskType type) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * getter for done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * set done to true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean setToDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.done \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * getter for name"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return name"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * getter for task type"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return type"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected String gou() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected String sqB(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return \"[\" + s + \"]\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV toCSV() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new CSV(new CSV(\"T\"), new CSV(Boolean.toString(isDone())), new CSV(getName()));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Parse tasks from csv object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param csv \u003d csv that described the task (parsed from local file)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return previously saved task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static Task parseFromCSV(CSV csv) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        switch (csv.getStr(0)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case ToDoTask.TYPE_STR:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return ToDoTask.parseFromCSV(csv);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case DeadlineTask.TYPE_STR:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return DeadlineTask.parseFromCSV(csv);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            case EventTask.TYPE_STR:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return EventTask.parseFromCSV(csv);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                return new Task(csv.getStr(csv.size()), TaskType.TODO_TASK) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                };"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 83
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private List\u003cTask\u003e lst;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    TaskList(List\u003cTask\u003e lst) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.lst \u003d lst;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean add(Task t) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.lst.add(t);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Task get(int idx) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.lst.get(idx);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Task remove(int idx) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.lst.remove(idx);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.lst.size();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.lst;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * search for tasks"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param searchStr \u003d strings to search for among task names"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return list of tasks which name matches the search strings"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public List\u003cTask\u003e find(String... searchStr) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Stream\u003cTask\u003e ans \u003d new ArrayList\u003c\u003e(this.lst).stream();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : searchStr) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            ans \u003d ans.filter(x -\u003e x.getName().contains(str));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return ans.collect(Collectors.toList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static TaskList fromCSVList(List\u003cCSV\u003e lst) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new TaskList(lst.stream().map(Task::parseFromCSV).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 60
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    TODO_TASK, DEADLINE_TASK, EVENT_TASK"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 5
    }
  },
  {
    "path": "src/main/java/duke/task/ToDoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class ToDoTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected static final String TYPE_STR \u003d \"T\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Main constructor used when creating this type of task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param name   \u003d task name"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param prepos \u003d preposition to describe the time (eg. by , on...)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param time   \u003d string inputted by user that describe the time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public ToDoTask(String name) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this(name, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private ToDoTask(String name, boolean done) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        super(name, TaskType.TODO_TASK);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Convert all the relevant data to CSV in order to save to local file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public CSV toCSV() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new CSV(new CSV(ToDoTask.TYPE_STR), new CSV(Boolean.toString(isDone())), new CSV(getName()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Load task from local file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param csv \u003d csv file parsed from local file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return previously saved task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static ToDoTask parseFromCSV(CSV csv) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return new ToDoTask(csv.getStr(2), Boolean.parseBoolean(csv.getStr(1)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * String that describe the task when listing all the tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return sqB(ToDoTask.TYPE_STR) + sqB(gou()) + \" \" + getName();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 49
    }
  },
  {
    "path": "src/main/java/duke/ui/Gui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.parser.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.input.MouseEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Gui implements UiText {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private boolean isOpen \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private StringBuilder tempText;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Gui(VBox dialogContainer, TextField userInput) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.dialogContainer \u003d dialogContainer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private void outPrint(String text) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.tempText.append(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private void outPrintln() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.tempText.append(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private void outPrintln(String text) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.tempText.append(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.tempText.append(\"\\n\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(String... text) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        respond(Arrays.asList(text));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(List\u003cString\u003e text) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        respondLine(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        over();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void start(String... initials) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert !this.isOpen : \"illegal usage of responder\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.tempText \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        outPrint(resSpace);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : initials) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrint(resSpace + \" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrintln(sc2.nextLine());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.isOpen \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respondLine(List\u003cString\u003e respondStr) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert this.isOpen : \"illegal usage of responder\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : respondStr) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrint(resSpace + \" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrintln(sc2.nextLine());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void over(String... remarks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : remarks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrint(resSpace + \" \");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                outPrintln(sc2.nextLine());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        outPrint(resSpace);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        outPrintln();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.dialogContainer.getChildren().add(getDialogLabel(this.tempText.toString()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.isOpen \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void clearUserInput() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.userInput.getText();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean hasNextLine() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return !this.userInput.getText().isEmpty();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 119
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class Ui implements UiText {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    private boolean isOpen \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    protected Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public Ui(Scanner inputSc) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.sc \u003d inputSc;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * To start responding to user, open the responding window"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param initials \u003d optional imitial respond to user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void start(String... initials) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert !this.isOpen : \"illegal usage of responder\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        System.out.print(resSpace);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : initials) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.print(resSpace + \" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.println(sc2.nextLine());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.isOpen \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Respond the lines to user, need to start responding first"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param respondStr \u003d lines to respond"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    void respondLine(String... respondStr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        respondLine(Arrays.asList(respondStr));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respondLine(List\u003cString\u003e respondStr) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assert this.isOpen : \"illegal usage of responder\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : respondStr) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.print(resSpace + \" \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.println(sc2.nextLine());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * To stop responding to user, close the respond window"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param remarks \u003d any ending respond before closing"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void over(String... remarks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        Scanner sc2;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        for (String str : remarks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            sc2 \u003d new Scanner(str);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            while (sc2.hasNext()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.print(resSpace + \" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "                System.out.println(sc2.nextLine());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        System.out.print(resSpace);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        this.isOpen \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(String... respondStr) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        respond(Arrays.asList(respondStr));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Shortcut function to open respond window, respond to user with the strings given, then close window"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @param respondStr \u003d strings to respond"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(List\u003cString\u003e respondStr) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        respondLine(respondStr);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        over();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * User has next input line?"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return User has next input line?"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean hasNextLine() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.sc.hasNextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * Similar to Scanner nextLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     * @return Next line from input"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String nextLine() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void clearUserInput() {}"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 111
    }
  },
  {
    "path": "src/main/java/duke/ui/UiText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public interface UiText {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    static String stupidLogo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    static String resSpace \u003d \"    \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    static String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String greetings \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String taskDoneNote \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String dunno \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public static String loadingErrorMsg \u003d \"File not exist\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void start(String... initials);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respondLine(List\u003cString\u003e respondStr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void over(String... remarks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(String... respondStr);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void respond(List\u003cString\u003e respondStr);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public boolean hasNextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public String nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void clearUserInput();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 26
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assertEquals(\" \", \" \");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 13
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import duke.storage.CSV;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "        assertEquals(Task.parseFromCSV(new CSV(new CSV(\"D\"), new CSV(\"by\"), new CSV(\" Sun\"), new CSV(\"false\"), new CSV(\"fuckyou\"))).toString(), \"[D][✗] fuckyou (by: Sun)\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 15
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     bye"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "bye"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "blah"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "if [ -e \"./ACTUAL.txt\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    rm ACTUAL.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.txt"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "diff ACTUAL.txt EXPECTED.txt"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mightyrabbit99"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mightyrabbit99": 34
    }
  }
]
