[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "watsheldon": 23
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "T # 1 # read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "D # 0 # return book # 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "E # 0 # project meeting # 2020-08-08"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "T # 1 # join sports club"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 4
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showMessage(tasklist.addTask(task, storage));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 17
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public abstract void execute(TaskList tasklist, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 4
    }
  },
  {
    "path": "src/main/java/CommandIdentifier.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public enum CommandIdentifier {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 9
    }
  },
  {
    "path": "src/main/java/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"D # \" + (isDone ? \"1\" : \"0\" + \" # \") + description + \" # \" + by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 22
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showMessage(tasklist.deleteTask(index, storage));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 17
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showMessage(tasklist.doneTask(index, storage));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 17
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasklist \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Command c \u003d parser.parse(fullCommand, tasklist);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 35,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"E # \" + (isDone ? \"1\" : \"0\") + \" # \" + description + \" # \" + at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 22
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 11
    }
  },
  {
    "path": "src/main/java/InvalidDukeArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class InvalidDukeArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public InvalidDukeArgumentException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 5
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showMessage(tasklist.listTask());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private static HashMap\u003cString, CommandIdentifier\u003e COMMAND_IDENTIFIERS \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"bye\", CommandIdentifier.BYE);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"list\", CommandIdentifier.LIST);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"done\", CommandIdentifier.DONE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"todo\", CommandIdentifier.TODO);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"deadline\", CommandIdentifier.DEADLINE);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"event\", CommandIdentifier.EVENT);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"delete\", CommandIdentifier.DELETE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Command parse(String fullCommand, TaskList tasklist) throws CommandNotFoundException, InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(fullCommand);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String identifier \u003d st.nextToken();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            CommandIdentifier commandIdentifier \u003d getCommandIdentifier(identifier);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            switch (commandIdentifier) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                int doneIndex \u003d getCommandIndex(st, tasklist);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                int deleteIndex \u003d getCommandIndex(st, tasklist);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String todoDescription \u003d getTaskDescription(st);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Todo(todoDescription));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String[] deadlineDescriptionAndTime \u003d getTaskDescriptionAndTime(st);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Deadline(deadlineDescriptionAndTime[0], deadlineDescriptionAndTime[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String[] eventDescriptionAndTime \u003d getTaskDescriptionAndTime(st);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Event(eventDescriptionAndTime[0], eventDescriptionAndTime[1]));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (CommandNotFoundException | InvalidDukeArgumentException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private CommandIdentifier getCommandIdentifier(String identifier) throws CommandNotFoundException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (COMMAND_IDENTIFIERS.get(identifier) \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new CommandNotFoundException(\"OOPS!!! I don\u0027t understand this command. ☹\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return COMMAND_IDENTIFIERS.get(identifier);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private int getCommandIndex(StringTokenizer st, TaskList tasklist) throws InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            index \u003d Integer.parseInt(st.nextToken());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! Please enter a valid number.\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e tasklist.getTasks().size()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! Please enter a number in the list.\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String getTaskDescription(StringTokenizer st) throws InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            description \u003d st.nextToken(\"\").trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! The task description cannot be empty. ☹\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String[] getTaskDescriptionAndTime(StringTokenizer st) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d st.nextToken(\"/\").trim();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String time \u003d st.nextToken(\"/\").trim().substring(3);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String[] descriptionAndTime \u003d new String[]{description, time};"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return descriptionAndTime;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 86
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Task parseTask(String str) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String[] taskElements \u003d str.split(\" # \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String type \u003d taskElements[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String isDone \u003d taskElements[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d taskElements[2];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String time \u003d (taskElements.length \u003e 3) ? taskElements[3] : \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Task(\"default\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasks.add(parseTask(s.nextLine()));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private void writeToFile(String text) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String tasksToString(TaskList tasklist) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(task.toStringInFile()).append(\"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void updateTaskData(TaskList tasklist) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            writeToFile(tasksToString(tasklist));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 74
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "//        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 27
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String addTask(Task task, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String addMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + String.format(\"\\nnow you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return addMessage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String deleteTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String deleteMessage \u003d \"Noted. I\u0027ve removed this task:\\n\" + task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + String.format(\"\\nnow you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return deleteMessage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String listTask() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(\"There is currently no pending task. \" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                    \"Please add some tasks by using the \\\"todo\\\", \\\"event\\\" or \\\"deadline\\\" command\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(\"Here are all the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                sb.append(String.format(\"%d. \", ++index)).append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String doneTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String doneMessage \u003d \"Nice! Congratulations for completing this task:\\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return doneMessage;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 61
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"T # \" + (isDone ? \"1\" : \"0\") + \" # \" + description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private static final String SEPERARION_LINE \u003d \"_\".repeat(50) + \"\\n\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String formatMessage(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return SEPERARION_LINE + message + SEPERARION_LINE;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m\\n\" + logo + \"\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(greetings);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String message \u003d \"Hope to see you next time! xD\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String message \u003d \"Failed to load the existing tasks... can you check if the file is still there? :p\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 46
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[T][✘]read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[D][✘]return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "1. [T][✘]read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "2. [D][✘]return book (by: June 6th)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "3. [E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Nice! Congratulations for completing this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[D][✓]return book (by: June 6th)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "1. [T][✘]read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "2. [D][✓]return book (by: June 6th)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "3. [E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "See you next time! xD"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 34
    }
  }
]
