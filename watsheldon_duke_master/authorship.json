[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "test {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "watsheldon": 41
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "T # 1 # read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "D # 0 # return book # 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "E # 0 # project meeting # 2020-08-08"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "T # 1 # join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "D # 0 # finish ip # 2020-03-01"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 5
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.InvalidDukeArgumentException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a Duke chat bot, which supports basic todo list features such as adding and deleting tasks,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * marking a task as done or list out all the tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private TaskList tasklist;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a Duke chat bot instance."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param filePath the file path of the data file in which the existing tasks are stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasklist \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Starts the chat bot, exits when encountering the \"bye\" command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Command c \u003d parser.parse(fullCommand, tasklist);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String response \u003d c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                ui.showMessage(response);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        TaskList tasklist \u003d duke.tasklist;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Storage storage \u003d duke.storage;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            Command c \u003d parser.parse(input, tasklist);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            return c.execute(tasklist, ui, storage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (InvalidDukeArgumentException | CommandNotFoundException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 75,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (input.trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 55
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents an add command that extends from the command class, describing the behaviour of adding a task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs an add command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the add command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasklist.addTask(task, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Defines an abstract class that specifies the behaviours of the command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the command is the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public abstract String execute(TaskList tasklist, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 24
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a delete command that extends from the command class, describing the behaviour of deleting a task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param index The index number of the task to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the delete command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasklist.deleteTask(index, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a done command that extends from the command class, describing the behaviour of marking a task as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param index The index number of the task to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the done command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasklist.doneTask(index, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents an exit command that extends from the command class, describing the behaviour when exiting the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"Hope to see you next time! xD\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 30
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasklist.findTask(keyword);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a list command that extends from the command class, describing the behaviour of listing all the tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the the command is the exit command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Executes the list command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param ui The User Interface of the chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage client of the bot that writes to the data file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasklist.listTask();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 30
    }
  },
  {
    "path": "src/main/java/duke/exception/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents the exception when the command typed by the user cannot be found."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class CommandNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a CommandNotFoundException instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public CommandNotFoundException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Extends from the java \u003ccode\u003eException\u003c/code\u003e class and represents exceptions happened in the Duke chat bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a duke exception instance."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 19
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDukeArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents the exception when the commands receive invalid arguments such as not a number or the number is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * out of range."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class InvalidDukeArgumentException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a InvalidArgumentException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param message The error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public InvalidDukeArgumentException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a deadline task that extends from the \u003ccode\u003eTask\u003c/code\u003e class. It contains one additional \u003ccode\u003eby\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * attribute which represents the due date of the task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a deadline task instance. The deadline task is initialized as undone."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param description The description of the deadline task details."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param by The due date of the deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.by \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns a string representation of the todo task in the data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return string representation of the todo task in the data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"D # \" + (isDone ? \"1\" : \"0\" + \" # \") + description + \" # \" + by;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a event that extends from the \u003ccode\u003eTask\u003c/code\u003e class. It contains one additional \u003ccode\u003eat\u003c/code\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * attribute that which represents the date of the event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a event instance. The event is initialized as undone."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param description The description of the event details."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.at \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns a string representation of the todo task in the data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return string representation of the todo task in the data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"E # \" + (isDone ? \"1\" : \"0\") + \" # \" + description + \" # \" + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a task in the todo list. It has task description and can be done or not done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a task instance, initialized as undone."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param description The description of the task details."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns a string representation of the task in the data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return string representation of the task in the data file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 48
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents a todo task that extends from the \u003ccode\u003eTask\u003c/code\u003e class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Constructs a Todo task instance. The todo task is initialized as undone."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param description The description of the todo task details."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Returns a string representation of the todo task in the data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return string representation of the todo task in the data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toStringInFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"T # \" + (isDone ? \"1\" : \"0\") + \" # \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 28
    }
  },
  {
    "path": "src/main/java/duke/util/CommandIdentifier.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Collects all the command identifiers."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public enum CommandIdentifier {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 15
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.InvalidDukeArgumentException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Handles the logic of parsing the user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private static HashMap\u003cString, CommandIdentifier\u003e COMMAND_IDENTIFIERS \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"bye\", CommandIdentifier.BYE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"list\", CommandIdentifier.LIST);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"done\", CommandIdentifier.DONE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"todo\", CommandIdentifier.TODO);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"deadline\", CommandIdentifier.DEADLINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"event\", CommandIdentifier.EVENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"delete\", CommandIdentifier.DELETE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        COMMAND_IDENTIFIERS.put(\"find\", CommandIdentifier.FIND);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Parses the user input and returns the corresponding command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param fullCommand User input which is in String format."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The current list of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The command corresponds to the user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @throws CommandNotFoundException If the command is not found."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @throws InvalidDukeArgumentException If the argument is invalid, either not a number or out of range."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Command parse(String fullCommand, TaskList tasklist)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throws CommandNotFoundException, InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringTokenizer st \u003d new StringTokenizer(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String identifier \u003d st.nextToken();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            CommandIdentifier commandIdentifier \u003d getCommandIdentifier(identifier);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            switch (commandIdentifier) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                int doneIndex \u003d getCommandIndex(st, tasklist);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new DoneCommand(doneIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                int deleteIndex \u003d getCommandIndex(st, tasklist);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new DeleteCommand(deleteIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String todoDescription \u003d getTaskDescription(st);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Todo(todoDescription));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String[] deadlineDescriptionAndTime \u003d getTaskDescriptionAndTime(st);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Deadline(deadlineDescriptionAndTime[0], deadlineDescriptionAndTime[1]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String[] eventDescriptionAndTime \u003d getTaskDescriptionAndTime(st);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new AddCommand(new Event(eventDescriptionAndTime[0], eventDescriptionAndTime[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String keyword \u003d getTaskDescription(st);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new FindCommand(keyword);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (CommandNotFoundException | InvalidDukeArgumentException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Gets the command identifier from the user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param identifier The String that acts as a key to find the command identifier."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The corresponding command identifier."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @throws CommandNotFoundException When the command identifier is not found."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public CommandIdentifier getCommandIdentifier(String identifier) throws CommandNotFoundException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (COMMAND_IDENTIFIERS.get(identifier) \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new CommandNotFoundException(\"OOPS!!! I don\u0027t understand this command. ☹\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return COMMAND_IDENTIFIERS.get(identifier);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public int getCommandIndex(StringTokenizer st, TaskList tasklist) throws InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            index \u003d Integer.parseInt(st.nextToken());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! Please enter a valid number.\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (index \u003c\u003d 0 || index \u003e tasklist.getTasks().size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! Please enter a number in the list.\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String getTaskDescription(StringTokenizer st) throws InvalidDukeArgumentException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            description \u003d st.nextToken(\"\").trim();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            throw new InvalidDukeArgumentException(\"OOPS!!! The task description cannot be empty. ☹\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String[] getTaskDescriptionAndTime(StringTokenizer st) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d st.nextToken(\"/\").trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String time \u003d st.nextToken(\"/\").trim().substring(3);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String[] descriptionAndTime \u003d new String[]{description, time};"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return descriptionAndTime;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 124
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.StringTokenizer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Handles loading tasks from the stored data file and saving tasks in the data file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Initializes a \u003ccode\u003eStorage\u003c/code\u003e class with the given file path."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param filePath The path of the data file in which the existing tasks are stored."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            if (!(new File(filePath)).exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String rootLocation \u003d Paths.get(\"\").toAbsolutePath().toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                StringTokenizer st \u003d new StringTokenizer(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String newDirectoryLocation \u003d rootLocation + File.separator + st.nextToken(\"/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                String newFileLocation \u003d newDirectoryLocation + File.separator + st.nextToken(\"/\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Files.createDirectories(Paths.get(newDirectoryLocation));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                Files.createFile(Paths.get(newFileLocation));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            System.err.println(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Task parseTask(String str) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String[] taskElements \u003d str.split(\" # \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String type \u003d taskElements[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String isDone \u003d taskElements[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String description \u003d taskElements[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String time \u003d (taskElements.length \u003e 3) ? taskElements[3] : \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task \u003d new Task(\"default\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (isDone.equals(\"1\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Loads the tasks from the data file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return A tasklist that contains all the existing tasks."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @throws FileNotFoundException If the data file is not found."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList loadTasks() throws FileNotFoundException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            tasks.add(parseTask(s.nextLine()));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private void writeToFile(String text) throws IOException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String tasksToString(TaskList tasklist) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(task.toStringInFile()).append(\"\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Writes the given tasklist into the data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasklist The tasklist that needs to be written."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void updateTaskData(TaskList tasklist) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            writeToFile(tasksToString(tasklist));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 113
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents the list of tasks. Supports operations such as add task, delete task, list tasks and so on."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Initializes an empty list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Initialize a tasklist from the given list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param tasks The list of existing tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Adds a task to the tasklist and updates the data file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage used to write to the data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The message that is later displayed in the user interface."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String addTask(Task task, Storage storage) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String addMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + String.format(\"\\nnow you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return addMessage;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Deletes a task and updates the data file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage used to write to the data file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The message that is later displayed in the user interface."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String deleteTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        tasks.remove(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String deleteMessage \u003d \"Noted. I\u0027ve removed this task:\\n\" + task"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + String.format(\"\\nnow you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return deleteMessage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Lists out all the exiting tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The message that is later displayed in the user interface."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String listTask() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(\"There is currently no pending task. \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                    + \"Please add some tasks by using the \\\"todo\\\", \\\"event\\\" or \\\"deadline\\\" command\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(\"Here are all the tasks in your list:\\n\").append(tasksToString(tasks));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Marks a task in the tasklist as done and updates the data file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param index The index of the task to be marked as done."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param storage The storage used to write to the data file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The message that is later displayed in the user interface."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String doneTask(int index, Storage storage) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Task task \u003d getTask(index);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String doneMessage \u003d \"Nice! Congratulations for completing this task:\\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        storage.updateTaskData(this);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return doneMessage;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Finds the tasks that contain the give keyword."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param keyword The keyword that needs to be searched."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The matching tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String findTask(String keyword) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String findMessage \u003d \"\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            findMessage \u003d \"Sorry, I can\u0027t find any task that matches the keyword :(\\nMaybe you want to try a different\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                    + \" keyword? :D\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            findMessage \u003d \"Here are the matching tasks in your list:\\n\" + tasksToString(matchingTasks);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return findMessage;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String tasksToString(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            sb.append(String.format(\"%d. \", ++index)).append(task.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 124
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " * Represents the user interface of the duke chat bot."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private static final String SEPERARION_LINE \u003d \"_\".repeat(100) + \"\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Formats the given message by adding two separation lines at the top and the bottom."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param message The message to be formatted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return The formatted message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    private String formatMessage(String message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return SEPERARION_LINE + message + SEPERARION_LINE;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Displays the message to the user in a certain format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @param message The message to be displayed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showMessage(String message) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        System.out.println(formatMessage(message));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Shows the welcome message on start up."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String greetings \u003d \"Hello! I\u0027m\\n\" + logo + \"\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(greetings);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String farewell \u003d \"Hope to see you next time! xD\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(farewell);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        String message \u003d \"Failed to load the existing tasks... can you check if the file is still there? :p\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        showMessage(message);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     * @return A string representation of the user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 67
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 19
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        assertEquals(\"[E][✘]project meeting (at: Aug 8 2020)\", new Event(\"project meeting\", \"2020-08-08\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void testStringInFileConversion() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        assertEquals(\"E # 0 # project meeting # 2020-08-08\", new Event(\"project meeting\", \"2020-08-08\").toStringInFile());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 17
    }
  },
  {
    "path": "src/test/java/duke/util/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import duke.exception.CommandNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void getCommandIdentifier_commandFound_success() throws Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        assertEquals(CommandIdentifier.BYE, parser.getCommandIdentifier(\"bye\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    public void getCommandIdentifier_commandNotFound_exceptionThrown() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            assertEquals(CommandIdentifier.BYE, parser.getCommandIdentifier(\"hey\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        } catch (CommandNotFoundException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "            assertEquals(\"OOPS!!! I don\u0027t understand this command. ☹\\n\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[T][✘]read book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[D][✘]return book (by: June 6th)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "1. [T][✘]read book"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "2. [D][✘]return book (by: June 6th)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "3. [E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "Nice! Congratulations for completing this task:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "[D][✓]return book (by: June 6th)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "1. [T][✘]read book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "2. [D][✓]return book (by: June 6th)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "3. [E][✘]project meeting (at: Aug 6th 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "See you next time! xD"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "watsheldon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "watsheldon"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "watsheldon": 34
    }
  }
]
