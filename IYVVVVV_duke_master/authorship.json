[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "test {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    archiveVersion \u003d \"0.1\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 36,
      "-": 20
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    // Format constant."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private static final Color userBackground \u003d Color.rgb(39, 130, 215);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private static final Color dukeBackground \u003d Color.rgb(216, 78, 67);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(20); // Add spaces."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialog.setTextFill(Color.rgb(255, 255, 255));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialog.setFont(new Font(12));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(userBackground,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                CornerRadii.EMPTY,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                new Insets(-6, -6, -10, -6))));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(dukeBackground,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                CornerRadii.EMPTY,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                new Insets(-6, -6, -10, -6))));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Generate a dialog box based on User\u0027s input."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param text The contents of User\u0027s input."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param img User\u0027s image."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A new DialogBox contents the text and correspond image."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Generate a dialog box based on Duke\u0027s reply."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param text The contents of Duke\u0027s reply."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param img Duke\u0027s image."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A new DialogBox contents the text and correspond image."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 92
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This is a simulation of a chat bot called Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Constructs a new Duke with the given data storage path."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param path The file path of Duke data file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return Parser.parse(input).run(ui, storage,tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getLogo() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showLogo();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getGreet() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showGreet();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 34,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private String dir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private String path \u003d dir + File.separator + \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Duke duke \u003d new Duke(path);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Sets up Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param d a Duke to start with."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                DialogBox.getDukeDialog(duke.getLogo(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                DialogBox.getDukeDialog(duke.getGreet(), dukeImage)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 62
    }
  },
  {
    "path": "src/main/java/duke/mission/AddMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class AddMission extends Mission {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public AddMission(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (words[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showAdd(new Todo(input.substring(5)), tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } else if (words[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            String[] ddlDetails \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showAdd(new Deadline(ddlDetails[0], LocalDate.parse(ddlDetails[1])), tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showException(\"Input time should be \\\" /by yyyy-mm-dd\\\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            String[] eventDetails \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showAdd(new Event(eventDetails[0], LocalDate.parse(eventDetails[1])), tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d ui.showException(\"Input time should be \\\" /at yyyy-mm-dd\\\"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 47
    }
  },
  {
    "path": "src/main/java/duke/mission/DeleteMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class DeleteMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public DeleteMission(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d ui.showDelete(tasks.getTask(Integer.valueOf(words[1]) - 1), tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d ui.showException(\"OOP!!! The number of tasks you have is only \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                    + tasks.getTaskNumber());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 25
    }
  },
  {
    "path": "src/main/java/duke/mission/ExitMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class ExitMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 12
    }
  },
  {
    "path": "src/main/java/duke/mission/FindMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class FindMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public FindMission(String input) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showFind(input.substring(5), tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 16
    }
  },
  {
    "path": "src/main/java/duke/mission/HelpMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class HelpMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showHelp();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 12
    }
  },
  {
    "path": "src/main/java/duke/mission/InvalidMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class InvalidMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 12
    }
  },
  {
    "path": "src/main/java/duke/mission/ListMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class ListMission extends Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return ui.showList(tasks);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 12
    }
  },
  {
    "path": "src/main/java/duke/mission/MarkDoneMission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class MarkDoneMission extends Mission {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public MarkDoneMission(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String run(Ui ui, Storage storage, TaskList tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d ui.showMarkDone(tasks.getTask(Integer.valueOf(words[1]) - 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d ui.showException(\"OOP!!! The number of tasks you have is only \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                    + tasks.getTaskNumber());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 26
    }
  },
  {
    "path": "src/main/java/duke/mission/Mission.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.mission;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public abstract class Mission {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Mission(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Mission() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.input \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public abstract String run(Ui ui, Storage storage, TaskList tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 19
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This is a subclass of task which simulates tasks with deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /** Deadline time of this task. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Class constructor inherits form Task constructor and add deadline time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param description Description of this deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param by Deadline time."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Override String representation of deadline tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Type D and its description and deadline time."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"D\" + super.getData() + \"|\" + this.by;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This is a subclass of task which simulates tasks with event time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Event time of this task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Class constructor inherits form Task constructor and add event time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param description Description of this Event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param at          Event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Override String representation of event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Type E and its description and event time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"E\" + super.getData() + \"|\" + this.at;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 42
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This is a simulation of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /** Description of this task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /** Status of this task, whether it has been marked as done. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Class constructor with status to be false by default."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Returns status of the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Status icon, tick for done tasks and X for undo tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Overrides String representation of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return  String representation of status and description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Returns description of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Description."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Marks this task status as done."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Gets String representation of the task when storing in data file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return String representation of the task data"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"|\" + (this.isDone ? 1 : 0) + \"|\" + this.description;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * This is a subclass of task which simulates Todotasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Class constructor inherits Task constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param description Description of this Todotask."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Override String representation of Todotasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Type T and its description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"T\" + super.getData();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 31
    }
  },
  {
    "path": "src/main/java/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.AddMission;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.DeleteMission;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.ExitMission;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.FindMission;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.HelpMission;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.InvalidMission;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.ListMission;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.MarkDoneMission;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.mission.Mission;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Generates correspond Mission based on user inputs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param input User input string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return a Mission that Duke needs to run."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public static Mission parse(String input) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new ExitMission();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new HelpMission();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new ListMission();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String[] words \u003d input.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new MarkDoneMission(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new DeleteMission(input);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new FindMission(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new AddMission(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return new InvalidMission();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 50
    }
  },
  {
    "path": "src/main/java/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * Loads and saves Duke data file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Construct a Storage with given file path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param path The past of data file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Loads original data from the data file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A list of old tasks record."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        FileReader fr \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            fr \u003d new FileReader(path);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            System.out.println(\"    Cannot open data file in path: \" + path);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                if ((line \u003d br.readLine()) \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                System.out.println(\"    Cannot read data!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            Task currTask \u003d decodeTaskFromString(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            tasks.add(currTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private static Task decodeTaskFromString(String line) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String[] words \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        Task currTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        switch (words[0]) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            currTask \u003d new Todo(words[2]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            currTask \u003d new Deadline(words[2], LocalDate.parse(words[3]));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            currTask \u003d new Event(words[2], LocalDate.parse(words[3]));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (Integer.parseInt(words[1]) \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            currTask.markAsDone();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Saves new Task list data into the data file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks New task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            // Record task data."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getTaskNumber(); i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                bw.write(tasks.getTask(i).getData());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                bw.newLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            System.out.println(\"    Cannot save data!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 106
    }
  },
  {
    "path": "src/main/java/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * A list of user\u0027s tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    private  ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Constructs TaskList with given list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks A list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Creates an empty TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Gets total number of tasks in the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Total number of tasks."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Gets target Task in the list with the certain index."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param index Index of target Task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return Target Task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Adds certain Task into the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param t New Task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Removes certain Task from the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param t Removed Task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void removeTask(Task t) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        this.tasks.remove(t);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 65
    }
  },
  {
    "path": "src/main/java/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "package duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " * Text Ui of Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows Duke logo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string of logo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showLogo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Hello from\\n\" + logo;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows greeting message."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string of greeting sentences."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showGreet() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Hello! I\u0027m Duke! What can I do for you?\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"You may type \\\u0027help\\\u0027 to see more functions.\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows all tasks in the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string that list our all tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showList(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getTaskNumber(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            Task currTask \u003d tasks.getTask(i - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d str.concat(\"  \" + i + \".\" + currTask + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows adding response."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param t New Task to be added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string shows successful addition of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showAdd(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Got it. I\u0027ve added this task:\\n  \" + t + \"\\nNow you have \""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + tasks.getTaskNumber() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows marking as done message."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param currTask Task that be marked."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string shows successful marking done."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showMarkDone(Task currTask) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        currTask.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \" + currTask + \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows deleting message."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param currTask Target Task to delete."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string shows successful deletion."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showDelete(Task currTask, TaskList tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str \u003d \"Noted. I\u0027ve removed this task:\\n  \" + currTask + \"\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        tasks.removeTask(currTask);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        str \u003d str.concat(\"Now you have \" + tasks.getTaskNumber() + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows exiting message."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string shows exiting sentences."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows user guidance."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string of all functions in Duke."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return \"Here are my functions that you can try: \\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- help: show my functions. \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- list: list your tasks.\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- todo [task description]: add a todo task.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- deadline [task description] /by [yyyy-mm-dd]: add a task with deadline.\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- event [task description] /at [yyyy-mm-dd]: add an event with time.\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- done [task number]: mark this task as done.\\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- delete [task number]: delete this task from your list.\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- find [keywords]: find all tasks containing the keywords.\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                + \"- exit: say goodbye!\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows Exception message."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param message Exception message."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string description of the exception."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showException(String message) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * Shows all Tasks that matches the key word."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param keyWord String of key word."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @param tasks Task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     * @return A string of all found tasks."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public String showFind(String keyWord, TaskList tasks) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        String str \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        boolean isfailed \u003d true;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getTaskNumber(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            Task currTask \u003d tasks.getTask(i - 1);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            if (currTask.getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                str \u003d str.concat(\"  \" + i + \".\" + currTask + \"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "                isfailed \u003d false;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        if (isfailed) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "            str \u003d str.concat(\"  None.\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 146
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 19
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "import static  org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        assertEquals(\"say hihi\", new Todo(\"say hihi\").getDescription());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    public void testDataConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "        assertEquals(\"T|0|say hihi\", new Todo(\"say hihi\").getData());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "IYVVVVV"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "IYVVVVV": 21
    }
  }
]
