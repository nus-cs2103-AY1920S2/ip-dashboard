[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.2.0\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "test {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 41,
      "-": 20
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Viewing help"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays a list of all the commands available and their usage."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Adding Event tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds an event task with the specified description and event time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Adding Deadline tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a deadline task with the specified description and deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Adding Todo tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a todo task with the specified description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Deleting tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Deletes an existing task from the application memory."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Marking tasks as done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Marks an existing task as done. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Filtering tasks by priority level"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays only the tasks tagged with the specified priority level. "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "There are three such priority levels; LOW, MEDIUM and HIGH."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Updating priority level of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Updates the priority level of a specified task with the specified priority level."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Listing all tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Lists all the existing tasks, in order of addition."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### Exiting program"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Exits the program. "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `help` - Viewing help"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays a list of command available and their usage."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays a help page that summarizes the commands and their usage in list form. "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `event` - Adding Event tasks "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds an event task with the specified description and event time."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`event \u003cTask Description\u003e /by \u003cTask Time\u003e`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a new event task with the description `\u003cTask Description\u003e` and event time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`\u003cEvent Time\u003e`. Returns a descriptive message informing you whether the operation has "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "succeeded or failed."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `deadline` - Adding Deadline tasks"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a deadline task with the specified description and deadline."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`deadline \u003cTask Description\u003e /by \u003cTask Deadline\u003e`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a new event task with the description `\u003cTask Description\u003e` and deadline"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`\u003cTask Deadline\u003e`. Returns a descriptive message informing you whether the operation has "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "succeeded or failed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `todo` - Adding Todo tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a todo task with the specified description."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`todo \u003cTask Description\u003e`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Adds a new todo task with the description `\u003cTask Description\u003e`. Returns a descriptive message informing you whether "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "the operation has succeeded or failed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `delete` - Deleting tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Deletes an existing task, specified by its task number as per the task list. "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`delete \u003cTask Number\u003e`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Deletes the task with task number `\u003cTask Number\u003e`. Returns a descriptive message informing you whether "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "the operation has succeeded or failed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `done` - Marking tasks as done "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Marks an existing task as done. "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`done \u003cTask Number\u003e`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Marks as done the task with task number `\u003cTask Number\u003e`. Returns a descriptive message informing you whether "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "the operation has succeeded or failed."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `priority` - Filtering tasks by priority level"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays only the tasks tagged with the specified priority level (LOW, MEDIUM or HIGH)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`priority \u003cpriority level\u003e`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays as a list all the tasks with the specified priority level. Returns a descriptive message informing you whether "
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "the operation has succeeded or failed."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `update` - Updating priority level of tasks"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Updates the priority level of a specified task with the specified priority level."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "`update \u003cTask Number\u003e \u003cNew Priority Level\u003e`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Updates the priority level of the task with task number `\u003cTask Number\u003e`. Returns a descriptive message informing you "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "whether the operation has succeeded or failed."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `list` - Listing all tasks"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Lists all the existing tasks, in order of addition."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Lists all existing tasks, in order of addition."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "### `bye`- Exiting program"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Exits the program. "
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Displays a goodbye message, before closing the application."
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 139,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents the Chat Bot feature of the application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Comprises of a User Interface, and Storage for app data."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The Storage object with in-memory and persistently stored data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private TaskStorage taskStorage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The Ui object that gives feedback to the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Initialises a Duke object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The Duke constructor takes in no parameters."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            this.taskStorage \u003d new TaskStorage(\"./data/Storage.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            assert this.ui !\u003d null : \"ui instance in duke is null\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            assert this.taskStorage !\u003d null : \"taskStorage instance in duke is null\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            System.out.println(\"./data/Storage.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return command.execute(this.ui, this.taskStorage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return this.ui.showErrorMessage(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 54,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            assert fxmlLoader !\u003d null : \"fxmlLoader instance in Main.java is null\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 34
    }
  },
  {
    "path": "src/main/java/duke/Ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.control.Dialog;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns a DialogBox containing the text input by the user along with his profile."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param img"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return DialogBox representing user\u0027s message."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns a DialogBox containing the text input by Duke along with his profile."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param img"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return DialogBox representing Duke\u0027s message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 77
    }
  },
  {
    "path": "src/main/java/duke/Ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpeg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpeg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                DialogBox.getDukeDialog(Ui.showWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 56
    }
  },
  {
    "path": "src/main/java/duke/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Scans input from the user and prints text feedback to the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns welcome message to be displayed on app start up."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return welcome message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static String showWelcomeMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String welcomeMessage \u003d \" Hello! I\u0027m Alfred.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \" What can I do for you, master?\\n\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \" When in doubt, type \\\"help\\\"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns goodbye message to be displayed on app closure."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return goodbye message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String showByeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns the error message to be displayed to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param exception"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Error Message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String showErrorMessage(Exception exception) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return exception.getMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns help message to be displayed when user types help command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Help Message."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String showHelpMessage() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String helpMessage \u003d \" Commands Available:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"list\\\" - Lists all the current Tasks\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"done\\\" - Marks a Task as complete\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"delete\\\" - Removes an existing Task\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"priority\\\" - Sorts Tasks by priority\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"todo\\\" - Adds a Todo type Task\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"event\\\" - Adds a Event type Task\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"  \u003e\\\"deadline\\\" - Ads a Deadline type Task\\n\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \" Still clueless? Type a Command for details!\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \" Still clueless? Open the user guide!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return helpMessage;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return ui.showByeMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 12
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import exception.IllegalTextException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents the command to be executed, in response to user inputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns a response string through the Ui after carrying out the business logic"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * corresponding to the command type."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return A string corresponding to the response message after executing the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws IllegalTextException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public abstract String execute(Ui ui, TaskStorage storage) throws IllegalTextException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 21
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public DeadlineCommand(String[] eventArgs) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskDescription \u003d eventArgs[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.by \u003d eventArgs[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(this.taskDescription, this.by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.addToTaskList(newDeadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        text +\u003d \"    Got it. I\u0027ve added this task:\\n\" + \"      \" + newDeadline + \"    Now you have \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + storage.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task taskToDelete \u003d storage.getTaskList().get(taskNumber - 1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.deleteFromTaskList(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        text +\u003d \"    Noted. I\u0027ve removed this task:\" + System.lineSeparator() + \"     \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + taskToDelete + System.lineSeparator()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"    Now you have \" + storage.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.markTaskAsDone(this.taskNumber);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"    \" + storage.getTaskList().get(taskNumber - 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 20
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public EventCommand(String[] eventArgs) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskDescription \u003d eventArgs[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.date \u003d eventArgs[1];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Event newEvent \u003d new Event(this.taskDescription, this.date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.addToTaskList(newEvent);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        text +\u003d \"    Got it. I\u0027ve added this task:\\n\" + \"      \" + newEvent + \"    Now you have \""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + storage.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 26
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return ui.showHelpMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 12
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (Task task : storage.getTaskList()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            text +\u003d \"    \" + counter + \". \" + task + System.lineSeparator();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String prependedString \u003d getPrependedString(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return prependedString + \"    \" + text.trim();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String getPrependedString(TaskStorage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (storage.getTaskList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return \"    Here are the tasks in your list:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return \"Your task list is currently empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 30
    }
  },
  {
    "path": "src/main/java/duke/command/PriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Priority;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class PriorityCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public PriorityCommand(String priority) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        switch (priority) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"HIGH\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            this.priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"MEDIUM\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            this.priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"LOW\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            this.priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ArrayList\u003cTask\u003e storageTaskList \u003d storage.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ArrayList\u003cTask\u003e prioritisedTaskList \u003d (ArrayList\u003cTask\u003e) storageTaskList"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                .filter(task -\u003e task.getPriority().equals(this.priority))"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (Task task : prioritisedTaskList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            text +\u003d \"    \" + counter + \". \" + task + System.lineSeparator();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String prependedString \u003d getPrependedString(storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return prependedString + \"    \" + text.trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String getPrependedString(TaskStorage storage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (storage.getTaskList().size() !\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return \"    Here are the \" + this.priority + \" priority tasks in your list:\" + System.lineSeparator();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return \"You do not have any tasks with priority \" + this.priority;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 61
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String taskDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public TodoCommand(String taskDesc) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskDescription \u003d taskDesc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Todo newTodo \u003d new Todo(this.taskDescription);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.addToTaskList(newTodo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        text +\u003d \"    Got it. I\u0027ve added this task:\\n\" + \"      \" + newTodo + System.lineSeparator()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                + \"    Now you have \" + storage.getTaskList().size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 24
    }
  },
  {
    "path": "src/main/java/duke/command/UpdatePriorityCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.storage.TaskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Priority;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import exception.IllegalTextException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class UpdatePriorityCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private Priority priority;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String taskNumber;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public UpdatePriorityCommand(String[] updatePriorityArgs) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "       this.taskNumber \u003d updatePriorityArgs[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        switch (updatePriorityArgs[1]) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"HIGH\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                this.priority \u003d Priority.HIGH;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"MEDIUM\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                this.priority \u003d Priority.MEDIUM;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"LOW\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                this.priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        assert this.priority!\u003dnull : \"Invalid priority was passed to UpdatePriorityCommand constructor\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static void checkItemNumberValidity(String taskNumber, TaskStorage storage) throws Exception {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            int taskNumberInt\u003d Integer.parseInt(taskNumber);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (taskNumberInt \u003c 1 || taskNumberInt \u003e storage.getTaskList().size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new Exception();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String execute(Ui ui, TaskStorage storage) throws IllegalTextException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            checkItemNumberValidity(this.taskNumber, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw new IllegalTextException(\"The specified task does not exist in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        System.out.printf(\"priority: %s, task_number %s\", this.priority, this.taskNumber);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        storage.updateTaskPriority(this.priority, Integer.parseInt(this.taskNumber));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return String.format(\"The priority for task %s has been set to %s\", this.taskNumber, this.priority);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 58
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Priority;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import exception.IllegalTextException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.regex.PatternSyntaxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Command parse(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        stringToParse \u003d removeExtraWhitespaces(stringToParse);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String commandType \u003d parseCommandType(stringToParse);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        switch (commandType.toLowerCase()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new DoneCommand(parseItemNumber(stringToParse));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new DeleteCommand(parseItemNumber(stringToParse));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new TodoCommand(parseTodoArgs(stringToParse));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new EventCommand(parseEventArgs(stringToParse));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new DeadlineCommand(parseDeadlineArgs(stringToParse));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"priority\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new PriorityCommand(parsePriorityArgs(stringToParse));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        case \"update\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new UpdatePriorityCommand(parseUpdateArgs(stringToParse));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String[] parseUpdateArgs(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // e.g. \"update 2 HIGH\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            String[] splittedString \u003d stringToParse.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (splittedString.length \u003c 3) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalTextException(\"Wrong Format, please follow this format: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                        + System.lineSeparator() + \"update [command number from list] [priority]\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            } else if (!Priority.isValidPriority(splittedString[2])) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalTextException(\"You typed an invalid priority level\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            System.out.printf(\"%s %s\", splittedString[1].trim(), splittedString[2].trim());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return new String[] {splittedString[1].trim(), splittedString[2].trim()};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IllegalTextException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String parsePriorityArgs(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            String[] splittedString \u003d stringToParse.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (splittedString.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalTextException(\"Specify LOW, MEDIUM or HIGH priority\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            } else if (!Priority.isValidPriority(splittedString[1])) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalTextException(\"You typed an invalid priority level\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return splittedString[1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IllegalTextException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String[] parseDeadlineArgs(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // Consider an example: \"deadline return book /by Sunday\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // deadlineArgs \u003d \"return book /by Sunday\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String deadlineArgs \u003d removeActionKeyword(stringToParse, \"deadline\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // deadlineArgsArray \u003d [\"return book\", \"Sunday\"]"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String[] deadlineArgsArray \u003d deadlineArgs.split(\"/by\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (String s : deadlineArgsArray) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            s \u003d s.trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return deadlineArgsArray;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String[] parseEventArgs(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // Consider an example: \"event project meeting /at mon 2-4pm\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // eventArgs \u003d \"project meeting /at mon 2-4pm\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String eventArgs \u003d removeActionKeyword(stringToParse, \"event\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // eventArgsArray \u003d [\"Project meeting\", \"mon 2-4pm\"]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String[] eventArgsArray \u003d eventArgs.split(\"/at\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (String s : eventArgsArray) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            s \u003d s.trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return eventArgsArray;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String removeActionKeyword(String stringToParse, String commandType) throws IllegalTextException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return stringToParse.split(\" \", 2)[1];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw new IllegalTextException(commandType + \" command must have a valid description.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String parseTodoArgs(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return removeActionKeyword(stringToParse, \"todo\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String removeExtraWhitespaces(String stringToParse) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return stringToParse.replaceAll(\"\\\\s+\", \" \").trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static int parseItemNumber(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return Integer.parseInt(stringToParse.split(\" \")[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw new IllegalTextException(\"Incorrect task number entered.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private static String parseCommandType(String stringToParse) throws IllegalTextException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            String command \u003d stringToParse.split(\" \")[0];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw new IllegalTextException(\"Illegal command format entered.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 129
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Priority;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import exception.IllegalCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.TaskDispatch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents the Storage object for user\u0027s Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Consists of an ArrayList representing in-app memory as well as methods to"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * write to a file for persistent memory, simulating the hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class TaskStorage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Represents the hard disk to which reads and writes occur."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Represents the path to the text file used for persistent storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Represents the in-memory task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Constructor for a Storage object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The Storage object is initialised such that on start up, its in-memory"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * ArrayList gets populated by the persisted data from previous sessions."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param filePath the path of the text file, as a string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public TaskStorage(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        populateTaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Reads all the Tasks stored in persistent memory, and clones them into"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * in-memory storage."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private void populateTaskList() throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                taskList.add(TaskDispatch.dispatchTaskFromStorage(scanner.nextLine().split(\"\\\\s+\")));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            } catch (IllegalCommandException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                // Assumption is that data is checked to be valid before adding to the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                // Hence, when reading from it, the data should result in valid duke.task.Task objects"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns a snapshot of the tasks in memory as a list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return tasks in memory as an ArrayList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Adds a new Task to the list of tasks in the memory and persistent storage."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param newTask new task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void addToTaskList(Task newTask) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (this.taskList.size()!\u003d1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw.write(newTask.toString());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // default behaviour is that nothing happens"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Marks a task as done from both in-memory and persistent storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param taskNumber task number as it appears in the list order."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ArrayList\u003cString\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int tempCounter \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Scanner scanner \u003d null;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempCounter++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (tempCounter \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                String lineToModify \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                tempArray.add(lineToModify.replace(Task.CROSS, Task.TICK));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempArray.add(scanner.nextLine());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // add the contents of auxillary array to the file"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        replaceTasksInFile(tempArray);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Deletes the task corresponding to the taskNumber from both the in-memory"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * and persistent storage."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param taskNumber task number of the task to be deleted, in list order."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void deleteFromTaskList(int taskNumber) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        System.out.println(this.taskList.size());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        System.out.println(this.taskList.size());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // Add all lines except line to be removed in an auxillary array"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ArrayList\u003cString\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int tempCounter \u003d 0;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Scanner scanner \u003d null;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // guard condition"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (this.taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            System.out.println(\"entered guard clause\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            replaceTasksInFile(tempArray);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempCounter++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (tempCounter \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                scanner.nextLine();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempArray.add(scanner.nextLine());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // add the contents of auxillary array to the file"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        replaceTasksInFile(tempArray);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Replace the contents of the File with new contents."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param tasksArray an ArrayList containing the tasks to rewrite the file."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    private void replaceTasksInFile(ArrayList\u003cString\u003e tasksArray) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw.write(tasksArray.get(0));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            for (int i \u003d 1; i \u003c tasksArray.size(); i++) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                fw.write(tasksArray.get(i));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // default behavior is that nothing happens"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            System.out.println(\"detected an error\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // default behavior is that nothing happens"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Updates the priority of the task corresponding to the given taskNumber,"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * with a new priority."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param priority"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param taskNumber"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void updateTaskPriority(Priority priority, int taskNumber) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.taskList.get(taskNumber - 1).setPriority(priority);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        ArrayList\u003cString\u003e tempArray \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int tempCounter \u003d 0;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Scanner scanner \u003d null;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempCounter++;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (tempCounter \u003d\u003d taskNumber) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                String lineToModify \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                tempArray.add(lineToModify.replace(Task.CROSS, Task.TICK));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            tempArray.add(scanner.nextLine());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // add the contents of auxillary array to the file"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        replaceTasksInFile(tempArray);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 227
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents a deadline to meet that contains both a description and a deadline time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The time of the Deadline, as input by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Constructor to create a Deadline task.."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param description The description of the Deadline task, as input by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param by the time of the Deadline task, as input by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Takes in the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns the Deadline task object, if successful, based on the input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * If incorrect arguments were specified, throws an IllegalArgumentException."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param commandArgs the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Deadline task object, if successful."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws IllegalArgumentException if user entered incorrect arguments."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Task createTask(String[] commandArgs) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String by \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int toggle \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (int i \u003d 0; i \u003c commandArgs.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (commandArgs[i].equals(\"(by:\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                toggle \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // current token is part of description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (toggle \u003d\u003d 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                description +\u003d commandArgs[i] + \" \";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // current token is part of by"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            else if (toggle \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                by +\u003d commandArgs[i] + \" \";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        by \u003d by.trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        by \u003d by.substring(0, by.length() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return new Deadline(description.trim(), by);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents a Event that contains both a description and a event time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The time of the Deadline, as input by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Constructor to create a Event task.."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param description The description of the Event task, as input by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param at the time of the Event task, as input by the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Takes in the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns the Event task object, if successful, based on the input."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * If incorrect arguments were specified, throws an IllegalArgumentException."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param commandArgs the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Event task object, if successful."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws IllegalArgumentException if user entered incorrect arguments."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Task createTask(String[] commandArgs) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String at \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        int toggle \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (int i \u003d 0; i \u003c commandArgs.length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (commandArgs[i].equals(\"(at:\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                toggle \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // current token is part of description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (toggle \u003d\u003d 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                description +\u003d commandArgs[i] + \" \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            // current token is part of by"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            else if (toggle \u003d\u003d 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                at +\u003d commandArgs[i] + \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        at \u003d at.trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        at \u003d at.substring(0, at.length() - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return new Event(description.trim(), at);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Priority.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents the Priority level of a task. There could exist tasks of differing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * priority level, but a task can only have one priority level at any one time."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public enum Priority {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    LOW,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    MEDIUM,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    HIGH;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns true or false depending on whether the user input s is a valid priority."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param s user input priority s, as a string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return true or false."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static boolean isValidPriority(String s) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return (s.equals(\"LOW\") || s.equals(\"MEDIUM\") || s.equals(\"HIGH\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * The super-class for all Task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Contains attributes to store important Task information, and their getters/setters."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static final char TICK \u003d \u0027Y\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static final char CROSS \u003d \u0027N\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The description of the Task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The completion status of the Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * The priority level of the Task, specified as a Priority enum type."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Initialised to LOW priority by default."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    protected Priority priority \u003d Priority.LOW;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (o \u003d\u003d this) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (!(o instanceof Task)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task t \u003d (Task) o;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return t.description.equals(this.description) \u0026\u0026 (Boolean.compare(t.isDone, this.isDone)\u003d\u003d0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Gets the status icon of the Task, indicating its completion status."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Status Icon of the Task as a character."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public char getStatusIcon() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return (isDone ? Task.TICK : Task.CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Marks this Task as done, regardless of it\u0027s initial state of completeness."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Gets the description of the Task object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return Returns the description of this Task object as a string."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Gets the priority level of the Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return a Priority enum type."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Priority getPriority() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return this.priority;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Sets the priority of this Task to a user defined Priority enum type p."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param p"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void setPriority(Priority p) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        this.priority \u003d p;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 88
    }
  },
  {
    "path": "src/main/java/duke/task/TaskDispatch.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import exception.IllegalCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public interface TaskDispatch {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Task dispatchTaskFromInput(String[] commandArgs) throws IllegalCommandException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        switch (commandArgs[0]) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Event.createTask(commandArgs);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Todo.createTask(commandArgs);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Deadline.createTask(commandArgs);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                // Unrecognised command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalCommandException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Task dispatchTaskFromStorage(String[] inputStrings) throws IllegalCommandException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String[] commandArgs \u003d new String[inputStrings.length - 1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (int i \u003d 1; i\u003c inputStrings.length; i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            commandArgs[i - 1] \u003d inputStrings[i];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        switch (inputStrings[0].toCharArray()[1]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Event.createTask(commandArgs);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Todo.createTask(commandArgs);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                t \u003d Deadline.createTask(commandArgs);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                // Unrecognised command"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                throw new IllegalCommandException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        // Complete the duke.task.Task if Done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (inputStrings[0].toCharArray()[4] \u003d\u003d Task.TICK) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 58
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents a todo with a description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Constructor for a todo task with user defined description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Calls parent constructor with user input description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Takes in the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Returns the todo task object, if successful, based on the input."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * If incorrect arguments were specified, throws an IllegalArgumentException."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param commandArgs the arguments after the command keyword as input by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @return todo task object, if successful."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @throws IllegalArgumentException if user entered incorrect arguments."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public static Task createTask(String[] commandArgs) throws IllegalArgumentException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        for (String s : commandArgs) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            if (s.equals(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            description +\u003d s + \" \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            throw new IllegalArgumentException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return new Todo(description.trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 45
    }
  },
  {
    "path": "src/main/java/exception/IllegalCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents a custom Error caused by Illegal Commands entered by the User"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class IllegalCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 12
    }
  },
  {
    "path": "src/main/java/exception/IllegalTextException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " * Represents a custom Error caused by Illegal Text entered by the User"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class IllegalTextException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Constructor for the IllegalTextException object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * Calls the parent constructor of Exception class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     * @param errorMessage Error Message to describe the illegal user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public IllegalTextException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            fx:controller\u003d\"duke.Ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                   prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 24
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void testDeadlineMarkAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task testDeadlineTask \u003d new Deadline(\"return book\", \"Sunday\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        assertEquals(\"[D][\" + duke.task.Task.CROSS + \"] \" + \"return book (by: Sunday)\", testDeadlineTask.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        testDeadlineTask.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        assertEquals(\"[D][\" + duke.task.Task.TICK + \"] \" + \"return book (by: Sunday)\", testDeadlineTask.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 17
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    public void testEventMarkAsDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        Task testEventTask \u003d new Event(\"Meeting\", \"Mon 2-4pm\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        assertEquals(\"[E][\" + duke.task.Task.CROSS + \"] \" + \"Meeting (at: Mon 2-4pm)\", testEventTask.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        testEventTask.markAsDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "        assertEquals(\"[E][\" + duke.task.Task.TICK + \"] \" + \"Meeting (at: Mon 2-4pm)\", testEventTask.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Hello! I\u0027m duke.Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "hello"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "      [D][?] deadline return book (by: sunday)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "      [E][?] event project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    1. [T][?] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    2. [D][?] deadline return book (by: sunday)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    3. [E][?] event project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "deadline return book /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "HemanshuGandhi"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "HemanshuGandhi": 34
    }
  }
]
