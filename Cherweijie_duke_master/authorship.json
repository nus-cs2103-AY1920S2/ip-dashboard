[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine:5.1.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "Cherweijie": 30
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "T | [N] | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "T | [N] | return book"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 2
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "#Tue Jan 21 01:04:55 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "Cherweijie": 3
    }
  },
  {
    "path": "local.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "## This file must *NOT* be checked into Version Control Systems,"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "# as it contains information specific to your local configuration."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "#"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "# Location of the SDK. This is only used by Gradle."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "# For customization when using a Version Control System, please read the"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "# header note."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "#Fri Jan 31 21:49:18 SGT 2020"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "sdk.dir\u003d/Users/weijie/Library/Android/sdk"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 8
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The AddCommand class is used to update the current TaskList with the newly added task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * and prints the added task to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    AddCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The execute method of the AddCommand is used to add the task in the command given into"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * the TaskList and updates the stored TaskList in duke.txt."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the current TaskList in duke.txt."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui The current Ui created."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is used for saving of the new TaskList into duke.txt."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws IOException if file input cannot be written to or closed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            if (this.command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String commandWithoutDeadline \u003d this.command.substring(9);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String[] commands \u003d commandWithoutDeadline.split(\"/by\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(commands[1].trim());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                Deadline deadline \u003d new Deadline(commands[0], localDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                tasks.getTaskList().add(deadline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(\"\\n\" + \"Alright, I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(deadline + \"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(\"You currently have \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + tasks.getTaskList().size()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (this.command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String[] commands \u003d this.command.split(\"todo \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    if (commands.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        ToDo toDo \u003d new ToDo(commands[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        tasks.getTaskList().add(toDo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        System.out.println(\"\\n\" + \"Alright, I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        System.out.println(toDo + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        System.out.println(\"You currently have \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                                + tasks.getTaskList().size()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                                + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        throw new DukeException(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    System.err.println(\"There is no valid input after to do. Please try again.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (this.command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String commandWithoutEvent \u003d command.substring(6);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String[] commands \u003d commandWithoutEvent.split(\"/at\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                LocalDate localDate \u003d LocalDate.parse(commands[1].trim());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                Event event \u003d new Event(commands[0], localDate);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                tasks.getTaskList().add(event);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(\"\\n\" + \"Alright, I\u0027ve added this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(event + \"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                System.out.println(\"You currently have \""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + tasks.getTaskList().size()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            System.err.println(\"Your date input should be in \u0027YYYY-MM-DD\u0027 format. Please try again.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 81
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The abstract Command class is used for extension to the different commands for different interaction"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * with the saved TaskList and output printed to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method is used to terminate the run() method in the Duke class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return This returns true if the command is an ExitCommand and false otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        if (this instanceof ExitCommand) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This abstract method is inherited by all child classes of the Command class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * for different interaction with the saved TaskList and updating"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * the duke.txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws IOException if file cannot be written to or closed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @see IOException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 36
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Deadline class object is created when the user inputs a command that starts with \"deadline\" and"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * has a valid date input with the \"yyyy-MM-dd\" format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected LocalDate dateBy;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DateTimeFormatter formattedOutput \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DateTimeFormatter input \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for Deadline tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskName The String input of the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param dateBy The date input of the user in \u0027yyyy-MM-dd\u0027 format."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Deadline(String taskName, LocalDate dateBy) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.dateBy \u003d dateBy;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Returns the LocalDate of the created Deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The LocalDate of the Deadline task created."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    LocalDate getDateBy() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return dateBy;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The toString method of the created Deadline task returns \"D\" to indicate it is a deadline task,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * the string input of the task and the date of the deadline task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The String output of a deadline task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \"(by:\" + dateBy.format(formattedOutput) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 44
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The DeleteCommand inherits from Command and is used to delete tasks in the saved TaskList."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for DeleteCommand which takes in a String command that starts with \"delete\"."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DeleteCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The execute method of DeleteCommand is used to delete the specified task from"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * the list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws IOException if file cannot be written to or closed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        String[] commands \u003d command.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        Task toBeRemoved \u003d tasks.getTaskList().get(Integer.parseInt(commands[1])-1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        tasks.taskList.remove(Integer.parseInt(commands[1])-1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"\\n\" + \"Alright, I\u0027ve removed this task:\" + \"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(toBeRemoved + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"You currently have \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + tasks.getTaskList().size()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 40
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The DoneCommand inherits from Command and is used whenever the markAsDone() method"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * from Task is called. This updates the status of the specified task in the TaskList"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * and saves it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for a DoneCommand takes in a task number specified by the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * to update the status of the specific task in the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskNum"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The execute method in DoneCommand serves to update the TaskList with the updated status"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * of the specified task and saves it in the duke.txt file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws IOException if file cannot be written to or closed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        Task doneTask \u003d tasks.getTaskList().get(taskNum - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showDoneMessage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(doneTask + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 40
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Duke class contains the main method to update the TaskList and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * execute the user\u0027s commands and input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public final static String LINE \u003d \"__________________________________________\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private static Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for Duke takes in a String that contains the file path of the txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * to update the TaskList in the txt file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param filePath The path which contains the txt file to be updated with the new list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            // shown when current saved task list in the txt file is empty"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            // therefore, there is a need to make a new task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method is called to update the Tasks and print outputs based on different user inputs."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Duke\u0027s main method which serves to update the given txt file with the updated list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws DateTimeParseException if user\u0027s date input is not of \u0027yyyy-MM-dd\u0027 format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public static void main(String[] args) throws DateTimeParseException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "Cherweijie": 62
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * Custom exception class created for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for DukeException which prints the message input."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param message The String message to be printed to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Event class inherits from Task and is created when user input starts with \"event\"."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected LocalDate dateAt;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DateTimeFormatter formattedOutput \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    DateTimeFormatter input \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for Event tasks that takes in a task name and a date in \u0027yyyy-MM-dd\u0027 format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskName String task name."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param dateAt LocalDate input in \u0027yyyy-MM-dd\u0027 format."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Event(String taskName, LocalDate dateAt) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.dateAt \u003d dateAt;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Returns the LocalDate of the created Event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The LocalDate of the Event task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    LocalDate getDateAt() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return dateAt;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The toString method of the Event task contains \"[E]\" which indicates its an Event task and"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * the task name as well as the date of the event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A String containing the details of the event object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    + \"(at:\" + dateAt.format(formattedOutput) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 43
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * ExitCommand inherits from Command and is called to"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * terminate the program when user inputs \"bye\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Prints a goodbye message and terminates Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 18
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * FindCommand inherits from Command and is used when user input starts with \"find\"."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for FindCommand which takes in the input keyed in by user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    FindCommand(String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Used to find the tasks that match the user\u0027s input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        String commandWithoutFind \u003d this.command.substring(5).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        List\u003cTask\u003e matchedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            String[] taskStringArray \u003d task.toString().split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            List\u003cString\u003e listToBeChecked \u003d new ArrayList\u003cString\u003e(Arrays.asList(taskStringArray));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            if (listToBeChecked.contains(commandWithoutFind)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                matchedList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"Here are the matching tasks in the list:\" + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        for (int i \u003d 0; i \u003c matchedList.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            System.out.println(i + 1 + \" . \" + matchedList.get(i));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 43
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * ExitCommand inherits from Command and is called to print"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * the current TaskList when user inputs \"list\"."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Used to print the current TaskList to the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param tasks This is the saved TaskList in duke.txt."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param ui This is the created Ui in Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param storage This is responsible for loading and saving the updated TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"\\n\" + \"Here are your tasks!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getTaskList().size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            System.out.println(i + 1 + \". \" + tasks.getTaskList().get(i));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 23
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Parser class is used to make sense of the user\u0027s input by calling different commands based"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * on the first word input of the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * A static method used to parse the user\u0027s commands and"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * calls different commands based on input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param command The user\u0027s String input is parsed to call different Commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A Command based on input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    static Command parse(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            String[] arrOfCommands \u003d command.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            int num \u003d Integer.parseInt(arrOfCommands[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new DoneCommand(num);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 35
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Storage class is reponsible for saving the updated list of tasks into the .txt file and"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * loading the saved list of tasks to be updated further by user inputs."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    static List\u003cTask\u003e savedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private final static String ROOT_PATH \u003d Paths.get(\"\").toAbsolutePath().toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private final static String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private String absolutePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private File file_path;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for a Storage object takes in a String file path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param filePath The file path containing the .txt file to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        String path \u003d Paths.get(ROOT_PATH + System.getProperty(\"file.separator\") + filePath).toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            this.file_path \u003d file;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            this.absolutePath \u003d path;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method is used to load the saved list of tasks from the .txt file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The saved list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws FileNotFoundException if the file path is invalid"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public List\u003cTask\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        Scanner scan \u003d new Scanner(file_path);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        while (scan.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            String command \u003d scan.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            String[] arrOfCommands \u003d command.split(\" \\\\| \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            if (\"T\".equals(arrOfCommands[0])) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                if (\"[Y]\".equals(arrOfCommands[1])) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    ToDo toDo \u003d new ToDo(arrOfCommands[2]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    toDo.markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(toDo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                } else if (\"[N]\".equals(arrOfCommands[1])) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    ToDo toDo \u003d new ToDo(arrOfCommands[2]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(toDo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (\"D\".equals(arrOfCommands[0])) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                if (arrOfCommands[1].equals(\"[Y]\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    Deadline deadline \u003d new Deadline(arrOfCommands[2], LocalDate.parse(arrOfCommands[3].trim()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                } else if (\"[N]\".equals(arrOfCommands[1])) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    Deadline deadline \u003d new Deadline(arrOfCommands[2], LocalDate.parse(arrOfCommands[3].trim()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(deadline);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (\"E\".equals(arrOfCommands[0])) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                if (arrOfCommands[1].equals(\"[Y]\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    Event event \u003d new Event(arrOfCommands[2],"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                            LocalDate.parse(arrOfCommands[3].trim()));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(event);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                } else if (\"[N]\".equals(arrOfCommands[1])) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    Event event \u003d new Event(arrOfCommands[2], LocalDate.parse(arrOfCommands[3].trim()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                    savedList.add(event);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return savedList;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The save method takes in the old list of tasks and saves the"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * updated list of tasks into the .txt file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskList The old list of tasks from the .txt file."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @throws IOException if file path of the .txt file is invalid."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void save(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        PrintWriter out \u003d new PrintWriter(file);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        for (Task task : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                out.write(\"T | \" + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + task.getTaskName() + NEWLINE);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                out.write(\"E | \" + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + task.getTaskName() + \" | \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + ((Event) task).getDateAt() + NEWLINE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                out.write(\"D | \" + task.getStatusIcon() + \" | \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + task.getTaskName() + \" | \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                        + ((Deadline) task).getDateBy() + NEWLINE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        out.close();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 102
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Task class is a parent class for the different types of tasks that the user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * input will generate."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    private static String horizontalLine \u003d \"__________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected static int taskNumber \u003d 1; // for Level 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected int currentTaskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected boolean isDone; // for Level 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for a Task takes in a String task name that is specified by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskName The String input by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Task(String taskName) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        currentTaskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.taskNumber++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method serves to get the status of a specific task to check if the task is done or not."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "      * @return Returns [Y] if the task is done and [N] if the task is not done."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return (isDone ? \"[Y]\" : \"[N]\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        // The symbols for the check marks and crosses do not seem to work and have been replaced by \"Y\" and \"N\" to"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        // represent \u0027Yes\u0027 and \u0027No\u0027 respectively."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method changes the status of a specified task to be done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method returns the name of a specified task."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A String of the name of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return taskName.trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This task returns the task number of the specified task."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A number of type int."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public int getTaskNumber() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return currentTaskNumber;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The toString method of a Task object returns the status of the task and the name of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A String containing details of a task object."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "            return getStatusIcon() + \" \" + getTaskName() + \" \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 70
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The TaskList keeps track of the different tasks created by the user\u0027s input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    protected List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for TaskList. TaskList is a wrapper class for a List containing different Tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskList A List of Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The constructor for an empty TaskList; which initialises the List of Tasks to be empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Returns the current TaskList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A List of Tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method is used to delete a specific task from the TaskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskNum The task number of the task to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void delete(int taskNum) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        taskList.remove(taskNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method is used to delete a specific task from the TaskList but is not a void method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param i The task number of the task to be deleted."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The Task that was deleted."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public Task deleteTask(int i) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return taskList.remove(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 53
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * This class extends from Task and is created when users input starts with \u0027todo\u0027."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Constructor for a ToDo object takes in a String with the name of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param taskName"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    ToDo(String taskName) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * The toString method returns [T] which indicates it is a ToDo Task and the name of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return The String containing the details of the ToDo Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * The Ui class is mainly responsible for reading user inputs and printing different output"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " * to the user based on his or her input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Shows the Duke logo when the Duke program is started."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"Hello! I am \\n\" + logo + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Shows a divider line."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(Duke.LINE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * This method reads the input of the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @return A String identical to the user\u0027s input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        String command \u003d scan.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showByeMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"Bye-bye! See you again, my friend!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showDoneMessage() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"\\n\" + \"Fantastic! This task is a done-deal!\" + \"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Used to print error messages to the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * @param message The error message to be shown."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showError(String message) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     * Used to print loading error which only occurs if the .txt file is empty."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    void showLoadingError() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        System.out.println(\"The current duke.txt file is empty. Your inputs will be saved into an empty text file.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 62
    }
  },
  {
    "path": "src/test/java/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    ExitCommand exit \u003d new ExitCommand();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    AddCommand add \u003d new AddCommand(\"todo read book\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        assertEquals(true, exit.isExit());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        assertEquals(false, add.isExit());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 2
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void getDateAt() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", LocalDate.now());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        assertEquals(LocalDate.now(), event.getDateAt());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 11
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Task task \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    Task doneTask \u003d new Task(\"return book\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    public void getStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        assertEquals(\"[N]\", task.getStatusIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "        assertEquals(\"[Y]\", doneTask.getStatusIcon());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Cherweijie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Cherweijie": 14
    }
  }
]
