[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveVersion \u003d \"0.3.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "test {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 41,
      "-": 21
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "T | 0 | Feed Gary"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": "D | 0 | Annoy Squidward | Apr 3 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "E | 0 | Buy party supplies | Apr 3 2020-15:00"
      }
    ],
    "authorContributionMap": {
      "gyant6": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob Organiser is an organiser which helps you manage your tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![OnStart](./Ui.png)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "## Tasks "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "There are 3 types of tasks that Spongebob can help you track."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Task Descriptions"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * A basic task to be done without any specific date or time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * A task that has to be completed by a specified date"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * An upcoming task that will occur on a specified date and time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. List"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. Add"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. Complete"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. Delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. Find"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "1. Schedule"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Feature 1 - List"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob will show you the list of all existing tasks he is tracking."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Feature 2 - Add"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "You can add one of the three tasks for Spongebob to help you track."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Feature 3 - Complete"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob will mark this task as completed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Feature 4 - Delete"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob will stop tracking this task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### Feature 5 - Schedule"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob will show you a list of tasks that is occurring on a specified date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "With reference to [Ben\u0027s User Guide](https://github.com/chanckben/duke/tree/master/docs)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "* Words in `{UPPER_CASE}` are user supplied parameters"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * `{DATE}` parameters are to be in the format `YYYY-MM-DD`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * `{TIME}` parameters are to be in the format `HHMM`"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  * `{INDEX}` parameters are the indexes of the specified tasks in the task list"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "  "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `list` - View all tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob shows all the tasks that he is tracking."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![List](./images/list.png)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `todo` - Add a new Todo task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Adds a new task to be tracked by Spongebob."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `todo {TASK_DESRCIPTION}`"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `todo Walk Gary`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![AddTodo](./images/todo.png)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `deadline` - Add a new Deadline task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Adds a new task to be tracked by Spongebob. This task comes with a deadline date."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `deadline {TASK_DESRCIPTION} /by {DATE}`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `deadline Annoy Squidward /by 2020-04-03`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![AddDeadline](./images/deadline.png)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `event` - Add a new Event task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Adds a new task to be tracked by Spongebob. This task comes with an upcoming date and time."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `event {TASK_DESRCIPTION} /at {DATE} {TIME}`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `event Buy party supplies /at 2020-04-03 1500`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![AddEvent](./images/event.png)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `done` - Mark a task as complete"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob marks this task as completed."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `done {INDEX}`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `done 2`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Done](./images/done.png)"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `delete` - Delete a task from list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob removes a task from the list of tracked tasks."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `delete {INDEX}`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `delete 2`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Delete](./images/delete.png)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `find` - View all tasks containing a given keyword"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob shows all tasks that contain the given keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `find {KEYWORD}`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `find Gary`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Find](./images/find.png)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `schedule` - View all tasks occurring on a given date"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob shows all tasks that are occurring on the given date"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `schedule {DATE}`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Example of usage: `schedule 2020-04-03`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Schedule](./images/schedule.png)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `help` - Provides list of available commands "
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Spongebob shows a list of all available commands"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Help](./images/help.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gyant6"
        },
        "content": "### `bye` - Exit "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Exits Spongebob Organiser"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gyant6"
        },
        "content": "![Exit](./images/exit.png)"
      }
    ],
    "authorContributionMap": {
      "gyant6": 140,
      "-": 22
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.paint.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.shape.*;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 57
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Main class to run Duke program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * \u003cp\u003eThis program acts as a scheduler that can add tasks to be done, tasks with a deadline and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * upcoming events \u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * @param filePath - File path where schedule is saved. File path is relative to src folder"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(Parser.parse(input, tasks, storage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 42,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Image appIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pineapple.jpeg\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            stage.setTitle(\"Spongebob Organiser\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // Setting application icon adapted from https://stackoverflow.com/questions/10121991/javafx-application-icon"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            stage.getIcons().add(appIcon);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 38
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Patrick.jpeg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Spongebob.jpeg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        startDuke();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * startDuke method to show the welcome message on start"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private void startDuke() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                DialogBox.getDukeDialog(Ui.welcomeMsg, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 62
    }
  },
  {
    "path": "src/main/java/duke/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.WrongDeadlineFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class AddDeadlineCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds a Deadline task to TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Description about the Deadline task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String description, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String[] input \u003d description.split(\"/by\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String taskTitle \u003d input[0].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String deadline \u003d input[1].trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            task \u003d new Deadline(taskTitle, Parser.parseDate(deadline));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new WrongDeadlineFormatException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task !\u003d  null) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks.addTask(storage, task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(\"You\u0027ve added this deadline!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(\"Deadline was not added. Please try again\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 46
    }
  },
  {
    "path": "src/main/java/duke/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.WrongEventFormatException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class AddEventCommand implements Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds an Event task to TaskList"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Description about the Event task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String description, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String[] input \u003d description.split(\"/at\", 2);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String taskTitle \u003d input[0].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String[] dateTime \u003d input[1].trim().split(\" \", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String date \u003d dateTime[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String time \u003d dateTime[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            task \u003d new Event(taskTitle, Parser.parseDate(date), Parser.parseTime(time));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new WrongEventFormatException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks.addTask(storage, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(\"You\u0027ve added this event!\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    + \"Now you have \" + tasks.size() + \" tasks in the list\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(\"Event was not added. Please try again\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 49
    }
  },
  {
    "path": "src/main/java/duke/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class AddTodoCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds a Todo task to TaskList"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Description about the Todo task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String description, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.addTask(storage, task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"You\u0027ve added this Todo task!\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Now you have \" + tasks.size() + \" tasks in the list\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 30
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Interface for different commands to implement"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    static String execute() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 12
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    REMOVE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    SCHEDULE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    TODO"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 15
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Deletes a task from list of current tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNum Task number to be deleted"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String taskNum, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String deleted \u003d tasks.deleteTask(storage, taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"We\u0027ve deleted this task! \\n\" + deleted;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks a particular task as done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNum Task number to be completed"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String taskNum, TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String completed \u003d tasks.completeTask(storage, taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"We\u0027ve completed this task! \\n\" + completed;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 22
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Exits the program upon user input of \"bye\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        // Exits system after one second, giving time to show exit message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        // @@author jadetayy-reused"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        Executors.newSingleThreadScheduledExecutor()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "                .schedule(() -\u003e System.exit(0), 1, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"Bye Patrick! Let\u0027s play soon!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 12,
      "-": 6
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class FindCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Searches through existing list for matching keyword"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param keyword Keyword of tasks to search"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If keyword is not in list of tasks"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String keyword, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        TaskList matchingTasks \u003d tasks.findKeyWord(keyword);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"Okay! These tasks contain \u0027\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + keyword + \"\u0027:\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(matchingTasks.printTaskList());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gyant6": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints out the list of available commands"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute()  {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"Hi Patrick, these are the things you can do!\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(Ui.printCommands());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 17
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints out the current list of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong. Not used here"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"This is what you\u0027ve asked me to track!\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(tasks.printTaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 20
    }
  },
  {
    "path": "src/main/java/duke/commands/ScheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.WrongScheduleFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ScheduleCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints out the current list of tasks to terminal"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong. Not used here"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String execute(String date, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        LocalDate taskDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            taskDate \u003d Parser.parseDate(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new WrongScheduleFormatException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"Okay! We\u0027re doing these things on \" + Parser.outputDateFormatter.format(taskDate) + \":\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(tasks.printSchedule(taskDate));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 32
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Exception in thrown when user input is not recognized or of a wrong format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 10
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, there\u0027s nothing in your list!\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingDetailsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class MissingDetailsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, enter more details with your command!\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/MissingKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class MissingKeywordException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, nothing in our list contains that word :(\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NoTasksScheduledException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class NoTasksScheduledException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, you do not have any tasks scheduled on this date!\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Want to catch some jellyfishes instead?\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnknownTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class UnknownTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick you silly, this task number does not exist!\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/UnrecognizedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class UnrecognizedCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"Patrick, I don\u0027t recognize this command :(\\n\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        output.append(\"Type \u0027help\u0027 if you need help!\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/WrongDeadlineFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class WrongDeadlineFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, your deadline needs to be in this format:\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Description /by YYYY-MM-DD\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/WrongEventFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class WrongEventFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, your event needs to be in this format:\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Description /at YYYY-MM-DD HHMM\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/WrongScheduleFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class WrongScheduleFormatException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"Patrick, your schedule date needs to be in this format:\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"YYYY-MM-DD\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 9
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Filters user input to determine type of command to be used"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.AddEventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.AddTodoCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.CommandType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.HelpCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.ScheduleCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.MissingDetailsException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.UnrecognizedCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String datePattern \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String timePattern \u003d \"HH:mm\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static DateTimeFormatter outputTimeFormatter \u003d DateTimeFormatter.ofPattern(timePattern);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static DateTimeFormatter outputDateFormatter \u003d DateTimeFormatter.ofPattern(datePattern);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the command corresponding to user input"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param input Input received from user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Command requested by user"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String parse(String input, TaskList taskList, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String[] inputArr \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String cmd \u003d inputArr[0].trim().toUpperCase();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        CommandType commandType;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // Check if input command is in enum list"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            commandType \u003d CommandType.valueOf(cmd);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new UnrecognizedCommandException();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        switch(commandType) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return ExitCommand.execute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return ListCommand.execute(taskList);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return HelpCommand.execute();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        // Assertion testing"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assert commandType !\u003d CommandType.BYE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assert commandType !\u003d CommandType.LIST;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assert commandType !\u003d CommandType.HELP;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String commandDetails \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            commandDetails \u003d inputArr[1].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new MissingDetailsException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return AddDeadlineCommand.execute(commandDetails, taskList, storage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case DELETE: case REMOVE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return DeleteCommand.execute(commandDetails, taskList, storage);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return DoneCommand.execute(commandDetails, taskList, storage);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return AddEventCommand.execute(commandDetails, taskList, storage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return FindCommand.execute(commandDetails, taskList);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case SCHEDULE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return ScheduleCommand.execute(commandDetails, taskList);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return AddTodoCommand.execute(commandDetails, taskList, storage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new UnrecognizedCommandException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks If user input date is of the correct format"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param inputDate Date input from user"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return LocalDate object of format \"yyyy-MM-dd\" if input is of correct format"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DateTimeParseException If input format is wrong"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static LocalDate parseDate(String inputDate) throws DateTimeParseException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String pattern \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        DateTimeFormatter inputDateFormatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(inputDate, inputDateFormatter);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks If user input time is of the correct format"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param inputTime Time input from user"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return LocalTime object of format \"HHmm\" if input is of correct format"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DateTimeParseException If input format is wrong"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static LocalTime parseTime(String inputTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String inputTimePattern \u003d \"HHmm\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        DateTimeFormatter inputTimeFormatter \u003d DateTimeFormatter.ofPattern(inputTimePattern);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        LocalTime time \u003d LocalTime.parse(inputTime, inputTimeFormatter);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 119
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Handles the loading, storing and saving list of tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Looks for a file of existing list of tasks to be loaded into an ArrayList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a new file if file is not found"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws IOException If file cannot be found and created"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                String currentTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                taskList.add(parseTask(currentTask));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Task parseTask(String taskDetail) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String[] taskDetails \u003d taskDetail.split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Character taskType \u003d taskDetails[0].charAt(0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        boolean taskIsDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String description \u003d taskDetails[2];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                LocalDate deadlineDate \u003d LocalDate.parse(taskDetails[3], Parser.outputDateFormatter);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                task \u003d new Deadline(description, deadlineDate);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                String[] dateTimeString \u003d taskDetails[3].split(\"-\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(dateTimeString[0], Parser.outputDateFormatter);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                LocalTime eventTime \u003d LocalTime.parse(dateTimeString[1], Parser.outputTimeFormatter);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                task \u003d new Event(description, eventDate, eventTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task !\u003d null \u0026\u0026 taskIsDone) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Appends the current task to existing list of tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param task Task to be added to list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void saveTask(Task task) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String toAdd \u003d formatTaskForSaving(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.write(toAdd);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            System.out.println(\"Error in saving tasks to storage\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Updates existing task list when there is a completion or deletion"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param saveList Existing ArrayList of tasks"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void saveAllTasks(ArrayList\u003cTask\u003e saveList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            for (Task task : saveList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                String toAdd \u003d formatTaskForSaving(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                fw.write(toAdd);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            System.out.println(\"Error in saving tasks to storage\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private String formatTaskForSaving(Task task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int isDone \u003d 0;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task.isDone()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            isDone \u003d 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"T | \" + isDone + \" | \" + task.getDescription());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Deadline deadlineTask \u003d (Deadline) task;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"D | \" + isDone + \" | \" + deadlineTask.getDescription() + \" | \" + deadlineTask.getDateString());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Event eventTask \u003d (Event) task;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"E | \" + isDone + \" | \" + eventTask.getDescription() + \" | \" + eventTask.getDateString()"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    + \"-\" + eventTask.getTimeString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 140
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Deadline task that specifies a task that has to be done by a certain date"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskTitle Title of task to be completed"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param deadlineDate Deadline of task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Deadline(String taskTitle, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(taskTitle, deadlineDate, null);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of a Deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of a Deadline task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + Parser.outputDateFormatter.format(deadlineDate) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 33
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Event task that specifies an upcoming task on a certain date and time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalTime eventTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates an Event task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskTitle Title of upcoming task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param eventDate Date of upcoming task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param eventTime Time of upcoming task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Event(String taskTitle, LocalDate eventDate, LocalTime eventTime) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(taskTitle, eventDate, eventTime);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation an Event task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation an Event task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + Parser.outputDateFormatter.format(eventDate) + \"-\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + Parser.outputTimeFormatter.format(eventTime) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 38
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalTime taskTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Task object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Information about the task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Task(String description, LocalDate taskDate, LocalTime taskTime) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of a tick if task is done, else a cross"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of a tick if task is done, else a cross"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks this task as done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks if this task is done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return true if task is done, else false"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of this task\u0027s description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A a string representation of this task\u0027s description"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public int compareTo(Task other) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (this.taskDate.toString().equals(other.taskDate.toString())) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // Dates are the same"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            if (this.taskTime \u003d\u003d null || other.taskTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return this.taskTime.compareTo(other.taskTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return this.taskDate.compareTo(other.taskDate);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of the date of this task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of the date of this task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getDateString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return Parser.outputDateFormatter.format(taskDate);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of the time of this task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of the time of this task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getTimeString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return Parser.outputTimeFormatter.format(taskTime);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the date attribute of this task"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return The date attribute of this task"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the time attribute of this task"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return The time attribute of this task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 109
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * This serves as a wrapper to store an ArrayList of existing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * This is also able to edit tasks in the ArrayList"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.TreeSet;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.EmptyListException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.MissingKeywordException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.NoTasksScheduledException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.UnknownTaskException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private TreeSet\u003cTask\u003e schedule;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a TaskList object from an existing list of tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.schedule \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                schedule.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a TaskList object with a new list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.schedule \u003d new TreeSet\u003c\u003e();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds a task to the ArrayList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param task Task to be added to ArrayList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void addTask(Storage storage, Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            schedule.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage.saveTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks the number of existing tasks"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Number of existing tasks"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns existing ArrayList of tasks"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints to console the existing list of tasks"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String printTaskList() throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            int taskIdx \u003d 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                output.append(taskIdx + \". \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                output.append(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                taskIdx++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints to console the schedule specified"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String printSchedule(LocalDate date) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (schedule.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new NoTasksScheduledException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            int taskIdx \u003d 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            boolean scheduleContainsTask \u003d false;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            for (Task task : schedule) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                if (task.getDate().toString().equals(date.toString())) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    output.append(taskIdx + \". \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    output.append(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    scheduleContainsTask \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // If no task on this date, taskIdx remains at 1. Schedule is empty"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            if (!scheduleContainsTask) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                throw new NoTasksScheduledException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks a task in the ArrayList as complete"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage To store updated task status in file"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNumber Index of task to mark as completed"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If given index does not exist"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String completeTask(Storage storage, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new UnknownTaskException();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage.saveAllTasks(tasks);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Deletes a task in the ArrayList"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage To store updated task status in file"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNumber Index of task to be deleted"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If given index does not exist"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String deleteTask(Storage storage, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (taskNumber \u003e tasks.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new UnknownTaskException();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (task instanceof Deadline || task instanceof Event) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            schedule.remove(task);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage.saveAllTasks(tasks);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a taskList object with descriptions containing the keyword"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param keyword To be searched against existing task list"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList findKeyWord(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new MissingKeywordException();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 172
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Todo task with a description of task to be done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Todo task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Information of task to be done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(description, null, null);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of task to be done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of task to be done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.DialogBox;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.CommandType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String welcomeMsg \u003d \"Hello Patrick! This is Spongebob!\\n\" + \"What shall we do today?\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static void showMessage(VBox dialogContainer, Image dukeImage, String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                DialogBox.getDukeDialog(msg, dukeImage)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        );"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static void showLoadingError(VBox dialogContainer, Image image) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String errorMsg \u003d \"Data found could not be found or created.\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Please restart Duke and check your file structure.\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        showMessage(dialogContainer, image, errorMsg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String printCommands() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        for (CommandType s : CommandType.values()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(\"    \" + idx + \". \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            output.append(s + \"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            idx++;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 35
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-background-color: #319ef0; -fx-background-radius: 10 10 10 10; -fx-padding: 5 5 5 5;\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"TRANSPARENT\" radius\u003d\"40.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gyant6": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: #9fd6ff\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gyant6": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void createDeadlineTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        LocalDate date \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        date \u003d Parser.parseDate(\"2020-08-30\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder expected \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        expected.append(\"[D]\" + \"[\\u2718] \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        expected.append(\"Assignment 1 (by: Aug 30 2020)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assertEquals(expected.toString(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                new Deadline(\"Assignment 1\", date).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 23
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void createDeadlineTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String expected \u003d \"Patrick, I don\u0027t recognize this command :(\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Type \u0027help\u0027 if you need help!\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assertEquals(expected, duke.getResponse(\"Hello World\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 21
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void parseInputTest() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        TaskList dummyList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Storage dummyStorage \u003d new Storage(\"data/test.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        // Expected output"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder expected \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        expected.append(\"You\u0027ve added this Todo task!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"[T][\\u2718] Borrow book\" + \"\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"Now you have \" + \"1 tasks in the list\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assertEquals(expected.toString(),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                Parser.parse(\"Todo Borrow book\", dummyList, dummyStorage));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Hello! I\u0027m Duke!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter deadline in the following format: YYYY-MM-DD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [D][?] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter deadline in the following format: YYYY-MM-DD HHMM"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This is your list of tasks:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    1.[T][?] readbook"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    2.[D][?] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    3.[E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    4.[T][?] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    5.[T][?] borrow book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is of an incorrect format. Please try again."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is of an incorrect format. Please try again."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is not recognized. Please try again."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task is marked as completed:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task number does not exist."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please indicate a task number to mark as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please indicate a task number to mark for deletion."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Bye! Come back soon!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "gyant6": 80
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline return book /by 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event project meeting /at 2020-08-06 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event meet up"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gyant6": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gyant6": 21
    }
  }
]
