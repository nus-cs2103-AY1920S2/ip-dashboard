[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 21,
      "-": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Main class to run Duke program"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * \u003cp\u003eThis program acts as a scheduler that can add tasks to be done, tasks with a deadline and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * upcoming events \u003c/p\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * @param filePath - File path where schedule is saved. File path is relative to src folder"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                // ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        new Duke(\"duke/data/tasks.txt\").run();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 54,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds task to TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        //System.out.println(\"execute add command\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.contains(\"todo\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // add Todo task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            t \u003d createTodo(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (command.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // add Deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            t \u003d createDeadline(command);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (command.contains(\"event\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            // add Event task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            t \u003d createEvent(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (t !\u003d null) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            tasks.addTask(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            storage.saveTask(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(\"This task has been added successfully:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(t.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(\"Now you have \" + tasks.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates an Event task to be added to list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param command Details about the event"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Event task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Task createEvent(String command) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter more details.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String taskDescription \u003d command.substring(6); // removes event word"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int slashIdx \u003d taskDescription.indexOf(\"/\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (slashIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Wrong event format. Please try again.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String taskTitle \u003d taskDescription.substring(0, slashIdx).trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String dateTime \u003d taskDescription.substring(slashIdx + 4).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new Event(taskTitle, Event.parseDateTime(dateTime));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter deadline in the following format: YYYY-MM-DD HHMM\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Deadline task to be added to list"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param command Details about the deadline"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Deadline task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Task createDeadline(String command) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter more details.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String taskDescription \u003d command.substring((9)); // removes deadline word"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int slashIdx \u003d taskDescription.indexOf(\"/\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (slashIdx \u003d\u003d -1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Wrong deadline format. Please try again.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String taskTitle \u003d taskDescription.substring(0, slashIdx).trim();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String deadline \u003d taskDescription.substring(slashIdx + 4).trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new Deadline(taskTitle, Deadline.parseDate(deadline));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter deadline in the following format: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Todo task to be added to list"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param command Details about task to be done"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Todo task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Task createTodo(String command) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter something to do.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String taskDescription \u003d command.substring(5); // removes todo word"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return new Todo(taskDescription);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 115
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Object type of Command is determined by user input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Command (String command) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            isExit \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Rejects input by user as it is not on recognized list of input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (!isExit()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(\"Your entry is not recognized. Please try again.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Changes instance variable to true if input command equals \"bye\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return isExit if input command equals \"bye\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 44
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Deletes a task from list of current tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter a task number for deletion.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.deleteTask(ui, storage, taskNumber);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks a particular task as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter a task number for completion.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int taskNumber \u003d Integer.parseInt(command.split(\" \")[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.completeTask(ui, storage, taskNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Exits the program upon user input of \"bye\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong. Not used here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.print(\"See you again!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Searches through existing list for matching keyword"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If keyword is not in list of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Please enter a keyword to search for.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String keyword \u003d command.split(\" \")[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        TaskList matchingTasks \u003d tasks.findKeyWord(ui, keyword);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        matchingTasks.printTaskList(ui);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gyant6": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints out the current list of tasks to terminal"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param tasks List of current tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface used to reply user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage For storing of tasks into file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If input format is wrong. Not used here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        tasks.printTaskList(ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 25
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Exception in thrown when user input is not recognized or of a wrong format"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private static final String HOR_LINE \u003d \"___________________________\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            \"_________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public DukeException(String e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(e);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.description \u003d e;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Filters user input to determine type of command to be used"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the command corresponding to user input"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param fullCommand Input received from user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Command requested by user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String cmdType \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (cmdType.equalsIgnoreCase(\"todo\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                || cmdType.equalsIgnoreCase(\"deadline\")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                || cmdType.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new AddCommand(fullCommand.toLowerCase().trim());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (cmdType.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new ListCommand(fullCommand.toLowerCase().trim());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (cmdType.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new DoneCommand(fullCommand.toLowerCase().trim());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (cmdType.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new DeleteCommand(fullCommand.toLowerCase().trim());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (cmdType.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new FindCommand(fullCommand.toLowerCase().trim());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (cmdType.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new ExitCommand(\"bye\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            return new Command(\"Unrecognized\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 37
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Handles the loading, storing and saving list of tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Looks for a file of existing list of tasks to be loaded into an ArrayList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a new file if file is not found"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return ArrayList of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If file cannot be found"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    String currentTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    taskList.add(parseTask(currentTask));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                System.out.println(\"File not found exception\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                System.out.println(\"create new file error\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"Task list not found!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private Task parseTask(String task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String[] taskDetails \u003d task.split(\" \\\\| \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Character taskType \u003d taskDetails[0].charAt(0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        boolean taskIsDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027T\u0027:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                t \u003d new Todo(taskDetails[2]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027D\u0027:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    Date date \u003d Deadline.simpleDateFormat.parse(taskDetails[3]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    t \u003d new Deadline(taskDetails[2], date);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                } catch (ParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                    System.out.println(\"Error reading deadline date from file\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            case \u0027E\u0027:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                LocalDateTime localDateTime \u003d LocalDateTime.parse(taskDetails[3], Event.dateTimeFormatter);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                t \u003d new Event(taskDetails[2], localDateTime);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (t !\u003d null \u0026\u0026 taskIsDone) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Appends the current task to existing list of tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param t Task to be added to list"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void saveTask(Task t) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String toAdd \u003d formatTaskForSaving(t);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.write(toAdd);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            System.out.println(\"Error in saveTask\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Updates existing task list when there is a completion or deletion"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskList Existing task list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void updateTasks(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath, false);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                String toAdd \u003d formatTaskForSaving(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                fw.write(toAdd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            System.out.println(\"Error in updateTasks\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private String formatTaskForSaving(Task t) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        int isDone \u003d 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (t.isDone()) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            isDone \u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (t instanceof Todo) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"T | \" + isDone + \" | \" + t.getDescription());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"D | \" + isDone + \" | \" + d.getDescription() + \" | \" + d.getDeadline());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else if (t instanceof Event) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            sb.append(\"E | \" + isDone + \" | \" + e.getDescription() + \" | \" + e.getDateTime());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        sb.append(\"\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 149
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Deadline task that specifies a task that has to be done by a certain date"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static String datePattern \u003d \"MMM d yyyy\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(Deadline.datePattern);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected Date date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static Date parseDate(String inputDate) throws ParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String pattern \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        SimpleDateFormat inputDateFormat \u003d new SimpleDateFormat(pattern);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return inputDateFormat.parse(inputDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Deadline task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskTitle Title of task to be completed"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param date Deadline of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Deadline(String taskTitle, Date date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(taskTitle);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of a Deadline task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of a Deadline task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + simpleDateFormat.format(date) + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of this task\u0027s deadline"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of this task\u0027s deadline"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 48
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Event task that specifies a upcoming task that on a certain date and time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected static String dateTimePattern \u003d \"MMM d yyyy HH:mm\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(Event.dateTimePattern);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks If user input date and time is of the correct format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param inputDateTime Date and time input from user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return LocalDateTime object of format \"yyyy-MM-dd HHmm\" if input is of correct format"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DateTimeParseException If input format is wrong"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public static LocalDateTime parseDateTime(String inputDateTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String inputDateTimePattern \u003d \"yyyy-MM-dd HHmm\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(inputDateTimePattern);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(inputDateTime, dateTimeFormatter);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return localDateTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates an Event task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskTitle Title of upcoming task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param dateTime Date and time of upcoming task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Event(String taskTitle, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(taskTitle);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation an Event task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation an Event task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTimeFormatter.format(dateTime) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of the date and time of this task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of the date and time of this task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return dateTimeFormatter.format(dateTime);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Task object"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Information about the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of a tick if task is done, else a cross"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of a tick if task is done, else a cross"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns the description of the task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks this task as done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks if this task is done"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return true if task is done, else false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public boolean isDone() { return isDone; }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of this task\u0027s description"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A a string representation of this task\u0027s description"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * This serves as a wrapper to store an ArrayList of existing tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * This is also able to edit tasks in the ArrayList"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a TaskList object from an existing list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a TaskList object with a new list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Adds a task to the ArrayList"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param t Task to be added to ArrayList"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Checks the number of existing tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return Number of existing tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Prints to console the existing list of tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface to reply user"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void printTaskList(Ui ui) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(\"Your list of tasks is currently empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            ui.print(\"This is your list of tasks:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                ui.print(t.toString());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Marks a task in the ArrayList as complete"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface to reply user"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage To store updated task status in file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNumber Index of task to mark as completed"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If given index does not exist"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void completeTask(Ui ui, Storage storage, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"This task number does not exist.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.print(\"This task is marked as completed:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.print(t.toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Deletes a task in the ArrayList"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface to reply user"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param storage To store updated task status in file"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param taskNumber Index of task to be deleted"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @throws DukeException If given index does not exist"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void deleteTask(Ui ui, Storage storage, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        if (taskNumber \u003e taskList.size() || taskNumber \u003c 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            throw new DukeException(\"This task number does not exist.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Task t \u003d taskList.get(taskNumber - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.print(\"This task has been deleted:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ui.print(t.toString());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        storage.updateTasks(taskList);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a taskList object with descriptions containing the keyword"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param ui User interface to reply user"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param keyword To be searched against existing task list"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public TaskList findKeyWord(Ui ui, String keyword) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            if (description.contains(keyword)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return new TaskList(matchingTasks);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 114
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " * Todo task with a description of task to be done"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Creates a Todo task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @param description Information of task to be done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * Returns a string representation of task to be done"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     * @return A string representation of task to be done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 24
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    private static final String HOR_LINE \u003d \"___________________________\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "            \"_________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + \"Loading error\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + HOR_LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + \"Hello! I\u0027m Duke!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + \"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + HOR_LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void print(String s) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        System.out.println(INDENT + s);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 50
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gyant6": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Hello! I\u0027m Duke!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] read book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 1 tasks in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter deadline in the following format: YYYY-MM-DD"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [D][?] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter deadline in the following format: YYYY-MM-DD HHMM"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] join sports club"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 4 tasks in the list"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task has been added successfully:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [T][?] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Now you have 5 tasks in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This is your list of tasks:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    1.[T][?] readbook"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    2.[D][?] return book (by: Jun 6 2020)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    3.[E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    4.[T][?] join sports club"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    5.[T][?] borrow book"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please enter more details for this task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is of an incorrect format. Please try again."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is of an incorrect format. Please try again."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Your entry is not recognized. Please try again."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task is marked as completed:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gyant6"
        },
        "content": "      [E][?] project meeting (at: Aug 6 2020 14:00)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    This task number does not exist."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please indicate a task number to mark as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Please indicate a task number to mark for deletion."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    Bye! Come back soon!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "gyant6": 80
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline return book /by 2020-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event project meeting /at 2020-08-06 1400"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "event meet up"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "hello"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gyant6": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gyant6"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gyant6"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gyant6"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gyant6"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gyant6"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gyant6"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gyant6"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gyant6"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gyant6"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gyant6"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gyant6"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gyant6": 21
    }
  }
]
