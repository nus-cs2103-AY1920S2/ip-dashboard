[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 36,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][N] eat (by: Feb 1 2019)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][N] eat (by: idk)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 4
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[T][N] borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][N] return book (by: 2019-10-15)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[E][Y] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[E][N] cry in bed (at: Anytime)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[T][N] drink"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 10
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        displayPicture.setClip(new Circle("
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                displayPicture.getFitWidth() / 2,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                displayPicture.getFitHeight() / 2,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                50.0));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Creates a new right-justified dialog box."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param text The text to place in the label."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param img The image to place in the box."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The new dialog box."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Creates a new left-justified dialog box."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param text The text to place in the label."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param img The image to place in the box."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The new dialog box."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 78
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Duke class uses Storage to load and unload data from and to files, TaskList to contain and operate on"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * the lit of tasks, Ui to interact with the user, and Parser to decipher the user command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Constructor of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Attempts to load tasks from file, if fail start with empty list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param filePath The path to the file to load tasks from."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Empty constructor for JavaFx GUI to run."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this(java.nio.file.Paths.get(System.getProperty(\"user.home\"),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                \"IdeaProjects\", \"duke\", \"data\", \"tasks.txt\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Executes the user command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command The user command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The output message to the user."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getResponse(String command) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String outputMsg \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showBye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            outputMsg \u003d parser.executeCommand(tasks, command, ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            outputMsg \u003d ui.showError(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            storage.updateFile(tasks, tasks.getLength());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return outputMsg;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 59,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * The main entry point into the gui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param stage The stage to add our parent node."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 34
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import javafx.stage.WindowEvent;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * A UI Controller class. For UI-related code."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaHomer.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaParkSeoJun.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Bind the dialog container to the button of the scroll pane, and greet the user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Links the Duke instance and greets the user."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param d The duke instance to link."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        // Greet the user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showHello(), dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Listens to the input field and button and carries out the main of Duke."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        // Exit application programmatically if necessary"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (response.equals(byeMessage)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            // Hacky way to get the stage"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            stage.fireEvent(new WindowEvent(stage, WindowEvent.WINDOW_CLOSE_REQUEST));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            // We can do this since we (1) Defined userInput in MainWindow.fxml (2) gave userInput the @FXML tag"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 76
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeMissingDescriptionException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeUnknownInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets the type of command aka what the user wants like add or delete tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command The user command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The type of the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String getCommandType(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String[] splitted \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return splitted[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets the task number from the user command to be marked done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The task number to be marked done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException When there is no task number given."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @thows DukeUnknownInputException When what user gives is not a number."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static int markDoneNum(String command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Task number missing.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String num \u003d command.substring(5);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return Integer.valueOf(num);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeUnknownInputException(\"Need task NUMBER.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets the description for the To Do task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The description of the To Do task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException If there is no description given."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String todoDescription(String command) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Todo description missing.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return command.substring(5);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gives the description and deadline of the Deadline task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return A String[] where 0 index contains the description and 1 index contains the deadline."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException When no description of deadline is given by user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeUnknownInputException When /by is missing in command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String[] deadlineParams(String command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Deadline description and time missing.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String[] splitted \u003d command.substring(9).split(\" /by \", 2);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (splitted.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeUnknownInputException(\"Need give/format deadline \u003cdescription\u003e /by \u003ctime\u003e.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        // Check if date is parsable"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String byWhen \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(splitted[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            byWhen \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            byWhen \u003d splitted[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String[] descriptionAndBy \u003d {splitted[0], byWhen};"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return descriptionAndBy;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gives the description and time of the Event task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return A String[] where 0 index contains the description and 1 index contains the time of event."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException When no description of event is given by user."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeUnknownInputException When /at is missing in command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String[] eventParams(String command) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Event description and time missing.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String[] splitted \u003d command.substring(6).split(\" /at \", 2);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (splitted.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeUnknownInputException(\"Need format event \u003cdescription\u003e /at \u003ctime\u003e.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return splitted;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets the task number of the task to be deleted from user command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User Command."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return An integer that is the task number to be deleted."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException When no number is given."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeUnknownInputException When what user give is not a number."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static int deleteNum(String command) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Task number missing.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String num \u003d command.substring(7);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return Integer.valueOf(num);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeUnknownInputException(\"Need task NUMBER.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets the word to find from user command."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User Command."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return Word to find in String format."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeMissingDescriptionException When nothing is given to find by user."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String findWord(String command) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeMissingDescriptionException(\"Word to find missing.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return command.substring(5);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Executes the command given by the user."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param tasks TaskList object to be edited based on the command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param command User Command."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param ui Ui to handle the output depending on command type."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return Output message to the user."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeUnknownInputException When the command type is not recognized."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static String executeCommand(TaskList tasks, String command, Ui ui)  throws DukeUnknownInputException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String commandType \u003d getCommandType(command);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showList(tasks);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String description \u003d todoDescription(command);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showAdded(tasks.addTodo(description), tasks.getLength());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String[] descByWhen \u003d deadlineParams(command);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showAdded(tasks.addDeadline(descByWhen[0], descByWhen[1]), tasks.getLength());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String[] descAtWhen \u003d eventParams(command);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showAdded(tasks.addEvent(descAtWhen[0], descAtWhen[1]), tasks.getLength());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            int doneNum \u003d markDoneNum(command);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showMarkedDone(tasks.markDone(doneNum));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            int deleteNum \u003d deleteNum(command);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showDeleted(tasks.delete(deleteNum), tasks.getLength());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String findWord \u003d findWord(command);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return ui.showFound(tasks.find(findWord));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeUnknownInputException(\"Sorry but I do not recognise your command.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 174
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeIoException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    static Path filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Constructor for Storage class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param filePath The file path to the file to load the tasks in from."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Reads line by line the tasks in the file, constructs the Task Object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Returns an ArrayList of the Task objects constructed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return ArrayList of the tasks read."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeIoException If the file path cannot be read."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeException If there is a task that does not make sense."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() throws DukeException, DukeIoException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Scanner sc \u003d new Scanner(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                if (line.equals(\"\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                String code \u003d line.substring(1, 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                boolean isDone \u003d line.substring(4, 5).equals(\"Y\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                String taskArgs \u003d line.substring(7);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                Task task \u003d buildTask(code, taskArgs, isDone);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                listOfTasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return listOfTasks;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeIoException(\"File does not exist in file path, load from file failed.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeException(\"Do not understand task(s) in file, load from file failed\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Updates the file in the path with the current tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param tasks TaskList object containing all the tasks to use to update file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param numOfTasks Number of tasks in the TaskList currently."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeIoException If path cannot be read e.g. due to missing file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static void updateFile(TaskList tasks, int numOfTasks) throws DukeIoException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        ArrayList\u003cString\u003e tasksForFile \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        for (int i \u003d 0; i \u003c numOfTasks; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            tasksForFile.add(tasks.getTask(i) + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Files.write(filePath, tasksForFile);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeIoException(\"File does not exist in file path, file update failed.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Constructs the task after line has been read from file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param code The first letter in the task to tell the type of task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param args String where it\u0027s everything after the initial [X][X]."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param isDone The second letter in the task to tell if the task has been completed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return Task constructed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeIoException If the code does not match T, D or E."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public static Task buildTask(String code, String args, boolean isDone) throws DukeIoException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (code.equals(\"T\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            // args lik \"borrow book\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Todo todo \u003d new Todo(args, isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } else if (code.equals(\"D\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            // deadlineArgs like \"homework (by: 22/12/2019 1800)\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String[] deadlineArgs \u003d args.split(\"[ ][//(][b][y][//:][ ]\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String description \u003d deadlineArgs[0];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String byWhen \u003d deadlineArgs[1].substring(0, deadlineArgs[1].length() - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, byWhen, isDone);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } else if (code.equals(\"E\")) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            // eventArgs like {\"attend festival\", \"2pm-4pm\"}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String[] eventArgs \u003d args.split(\"[ ][//(][a][t][//:][ ]\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String description \u003d eventArgs[0];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            String atWhen \u003d eventArgs[1].substring(0, eventArgs[1].length() - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Event event \u003d new Event(description, atWhen, isDone);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeIoException(\"Do not understand task(s) in file, load from file failed\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 112
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Contains the task list, which is an ArrayList of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " *  It has operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks \u003d listOfTasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Marks a task in the list as done."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param taskNum The task number on the list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The task after being marks as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @throws DukeException If taskNum is bigger than size of list or \u003c 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task markDone(int taskNum) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        if (taskNum \u003e tasks.size() || taskNum \u003c 0) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            throw new DukeException(\"Task for this number doesn\u0027t exist.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        int index \u003d taskNum - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Task currTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        currTask.setDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks.set(index, currTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return currTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Adds a ToDo task into the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param todo The description of the ToDo task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The To Do task constructed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task addTodo(String todo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Task todoTask \u003d new Todo(todo);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks.add(todoTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return todoTask;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Adds a Deadline task into the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param deadline The description of the deadline task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param byWhen When the task is due by."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The Deadline task constructed."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task addDeadline(String deadline, String byWhen) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Task deadlineTask \u003d new Deadline(deadline, byWhen);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return deadlineTask;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Adds an Event task into the list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param event The description of the event task."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param atWhen When the task is at."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The Event task constructed."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task addEvent(String event, String atWhen) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Task eventTask \u003d new Event(event, atWhen);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks.add(eventTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return eventTask;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Deletes a task in the list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param taskNum The task number in the list to be deleted."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return The task that was deleted from the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task delete(int taskNum) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        int index \u003d taskNum - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        Task deletedTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Gets a list of tasks that contains the word user is finding."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @param word The word user wants to find."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * @return List of tasks that contains ward."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String word) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            Task currTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            if (currTask.toString().contains(word)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                tasksFound.add(currTask);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 118
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Methods with System.out.print for every possible messages user will see."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    String divider \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showList(TaskList tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String listMsg \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getLength(); i++) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            listMsg +\u003d i + 1 + \".\" + tasks.getTask(i) + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return listMsg;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showBye() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String byeMessage \u003d \"Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return byeMessage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showHello() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String helloMessage \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return helloMessage;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showMarkedDone(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String doneMsg \u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                + task + \"\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return doneMsg;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showAdded(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String addedMsg \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                + \"Now you have \" + numOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return addedMsg;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showDeleted(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String deletedMsg \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                + task + \"\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                + \"Now you have \" + numOfTasks + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return deletedMsg;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showError(DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String errorMsg \u003d e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String showFound(ArrayList\u003cTask\u003e tasksFound) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String foundMsg \u003d \"Here are the tasks found with keyword in your list:\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksFound.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            foundMsg +\u003d i + 1 + \".\" + tasksFound.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return foundMsg;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 70
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 14
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public DukeIoException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 7
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeMissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class DukeMissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public DukeMissingDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 7
    }
  },
  {
    "path": "src/main/java/dukeexception/DukeUnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class DukeUnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public DukeUnknownInputException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 7
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 24
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 24
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " * Task contains a String description and boolean of whether it is done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 36
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 16
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                \u003cCircle centerX\u003d\"50.0\" centerY\u003d\"50.0\" radius\u003d\"50.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeUnknownInputException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeMissingDescriptionException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    void todoDescriptionCorrectIn() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String in \u003d \"todo drink\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        assertEquals(\"drink\", Parser.todoDescription(in));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    void deadlineParamsWrongIn() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String in \u003d \"deadline buy chocolate by 9pm\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        assertThrows(DukeUnknownInputException.class, () -\u003e Parser.deadlineParams(in));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    void eventParamsMissingDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String in \u003d \"event \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        assertThrows(DukeMissingDescriptionException.class, () -\u003e Parser.eventParams(in));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 27
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "import dukeexception.DukeIoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * Tests if DukeIOException is thrown when unknown code/type of task is given, and the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     * is trying to be constructed using it. Random code \"F\" is used to attempt to construct the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    void buildTaskEventWrongCode() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        String args \u003d \"do CS2103 project (at: FOREVER IT NEVER STOPS)\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "        assertThrows(DukeIoException.class, () -\u003e Storage.buildTask(\"F\", args, true));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 17
    }
  },
  {
    "path": "test-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[T][N] borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "OOPS!!! The description cannot be empty."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][N] return book (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[E][N] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[E][N] cry in bed (at: Anytime)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "1.[T][N] borrow book"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "2.[D][N] return book (by: Sunday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "3.[E][N] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "4.[E][N] cry in bed (at: Anytime)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[T][Y] borrow book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][Y] return book (by: Sunday)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "OOPS!!! The description cannot be empty."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "1.[T][Y] borrow book"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "2.[D][Y] return book (by: Sunday)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "3.[E][N] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "4.[E][N] cry in bed (at: Anytime)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :\u003c"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[D][Y] return book (by: Sunday)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "[E][N] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "1.[T][Y] borrow book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "2.[E][N] cry in bed (at: Anytime)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 73
    }
  },
  {
    "path": "test-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "event cry in bed /at Anytime"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 15
    }
  },
  {
    "path": "test-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chlalstjr"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chlalstjr": 21
    }
  }
]
