[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    private static void writeToFile(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./\" + \"data/duke.txt\",true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    private static void fileUpdate(File dataFile, ArrayList \u003cTask\u003e arr) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            dataFile.delete();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            for (int i \u003d 0; i \u003c arr.size(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                writeToFile(arr.get(i).getIcon() + \" | \" + arr.get(i).getStatusBinary() + \" | \" + arr.get(i).getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        String userInput \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        ArrayList \u003cTask\u003e arr \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        File dataFile \u003d new File(\"./\" + \"data/duke.txt\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            // LIST"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            if (userInput.equals(\"list\")) {                                                  //Lists out the tasks"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(\"Here are the tasks in your list: \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d arr.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    System.out.println(i + \".\" + arr.get(i - 1).getIcon() + arr.get(i - 1).status + \" \" + arr.get(i - 1).getDescription());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            // DONE"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else if (userInput.split(\"\\\\s\")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                int doneTask \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                arr.get(doneTask - 1).setDone();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(arr.get(doneTask - 1).status + \" \" + arr.get(doneTask - 1).getDescription());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                fileUpdate(dataFile, arr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            // TO DO"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else if (userInput.split(\"\\\\s\")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                if (userInput.split(\"\\\\s\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String[] taskRequest \u003d Arrays.copyOfRange(userInput.split(\"\\\\s\"), 1, userInput.split(\"\\\\s\").length);    // e.g. [return, book]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskRequest.length; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescription +\u003d taskRequest[i];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescription +\u003d \" \" + taskRequest[i];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    Task curr \u003d new Task(\"todo\", taskDescription);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    arr.add(curr);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    fileUpdate(dataFile, arr);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    if (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(curr.getIcon() + curr.status + \" \" + curr.getDescription());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            // DEADLINE"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else if (userInput.split(\"\\\\s\")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                if (userInput.split(\"\\\\s\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String[] taskRequest \u003d Arrays.copyOfRange(userInput.split(\"\\\\s\"), 1, userInput.split(\"\\\\s\").length);    // e.g. [return, book]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String taskDescriptionDate \u003d \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskRequest.length; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescriptionDate +\u003d taskRequest[i];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescriptionDate +\u003d \" \" + taskRequest[i];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String taskDescription \u003d taskDescriptionDate.split(\"/\")[0];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    Task curr \u003d new Task(\"deadline\", taskDescription);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    curr.addDate(taskDescriptionDate.split(\"/\")[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    arr.add(curr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    fileUpdate(dataFile, arr);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    if (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(curr.getIcon() + curr.status + \" \" + curr.getDescription());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            // EVENT"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else if (userInput.split(\"\\\\s\")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                if (userInput.split(\"\\\\s\").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    System.out.println(\"â˜¹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String[] taskRequest \u003d Arrays.copyOfRange(userInput.split(\"\\\\s\"), 1, userInput.split(\"\\\\s\").length);    // e.g. [return, book]"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String taskDescriptionDate \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    for (int i \u003d 0; i \u003c taskRequest.length; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescriptionDate +\u003d taskRequest[i];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                            taskDescriptionDate +\u003d \" \" + taskRequest[i];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    String taskDescription \u003d taskDescriptionDate.split(\"/\")[0];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    Task curr \u003d new Task(\"event\", taskDescription);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    curr.addDate(taskDescriptionDate.split(\"/\")[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    arr.add(curr);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    fileUpdate(dataFile, arr);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    if (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(curr.getIcon() + curr.status + \" \" + curr.getDescription());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                        System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            //DELETE"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else if (userInput.split(\"\\\\s\")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                int removedTask \u003d Integer.parseInt(userInput.split(\"\\\\s\")[1]);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(arr.get(removedTask - 1).getIcon() + arr.get(removedTask - 1).status + \" \" + arr.get(removedTask - 1).getDescription());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                arr.remove(removedTask - 1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(\"Now you have \" + arr.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                fileUpdate(dataFile, arr);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        } while (!userInput.equals(\"bye\"));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "PangKimJin": 148
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String status;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public LocalDate processedDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public Task(String type, String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.status \u003d \"[âœ—]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.status \u003d \"[âœ“]\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public int getStatusBinary() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        if (this.status \u003d\u003d \"[âœ“]\") {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String getIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        if (this.type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return \"[T]\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        else if (this.type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return \"[D]\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        else {                  // event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return \"[E]\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String getProcessedDate() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        String dateFormatted \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.date.split(\"\\\\s\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        for (int i \u003d 1; i \u003c this.date.split(\"\\\\s\").length; i++) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                dateFormatted +\u003d this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                dateFormatted +\u003d \" \" + this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(dateFormatted);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.processedDate \u003d ld;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        return ld.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        if (this.type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return this.name;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        else if (this.type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            String dateFormatted \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            this.date.split(\"\\\\s\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            for (int i \u003d 1; i \u003c this.date.split(\"\\\\s\").length; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                    dateFormatted +\u003d this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                    dateFormatted +\u003d \" \" + this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            dateFormatted \u003d \"(by: \" + dateFormatted + \")\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "//            return this.name + dateFormatted;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return this.name + \"(by: \" + this.getProcessedDate() + \")\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        else {                  // event"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            String dateFormatted \u003d \"\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            this.date.split(\"\\\\s\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            for (int i \u003d 1; i \u003c this.date.split(\"\\\\s\").length; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    dateFormatted +\u003d this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                    dateFormatted +\u003d \" \" + this.date.split(\"\\\\s\")[i];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            dateFormatted \u003d \"(at: \" + dateFormatted + \")\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "            return this.name + dateFormatted;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    public void addDate(String date) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "PangKimJin": 98
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "[T][âœ—] return book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "Now you have 1 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "PangKimJin": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "todo return book"
      }
    ],
    "authorContributionMap": {
      "PangKimJin": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "PangKimJin"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "PangKimJin": 21
    }
  }
]
