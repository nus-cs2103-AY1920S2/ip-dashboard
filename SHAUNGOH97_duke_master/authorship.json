[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    sourceSets \u003d []"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    exclude \u0027META-INF/*.SF\u0027, \u0027META-INF/*.DSA\u0027, \u0027META-INF/*.RSA\u0027, \u0027META-INF/*.MF\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        attributes \u0027Main-Class\u0027: \u0027duke.Launcher\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                \u0027Class-Path\u0027: configurations.runtime.files.collect { \"build/libs/$it.name\" }.join(\u0027 \u0027)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation \u0027com.sun.xml.ws:jaxws-ri:2.3.2\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    implementation \u0027com.sun.xml.bind:jaxb-impl:2.4.0-b180830.0438\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 48,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents a Deadline task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Date the deadline is due by"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Deadline object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param description What type of task is due by the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @@param date when the task is due by"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Deadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Formats the deadline task before it is saved into hard disk"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a string that is formatted to be saved into hard disk"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String saveFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (this.status.equals(\"Done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"D|1||\" + this.description + \"|||\" + this.date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"D|0||\" + this.description + \"|||\" + this.date;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Converts deadline object into string format to describe the task"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string that describes the task, what type of task and when it is due"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 49
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents Duke, the task tracking smart bot"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * @author Goh Boon Hee Shaun"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Command input formats:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * done\u003c/space\u003e\u003c/taskNumber\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * delete\u003c/space\u003e\u003c/taskNumber\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * find\u003c/space\u003e\u003c/taskNumber\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * todo\u003c/space\u003e\u003c/name of task\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * deadline\u003c/space\u003e\u003c/name of task\u003e\u003c/backslash\u003e\u003c/Date in yyyy-mm-dd format\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * event\u003c/space\u003e\u003c/name of task\u003e\u003c/backslash\u003e\u003c/Date in yyyy-mm-dd format\u003e\u003cT\u003e\u003c/Time in mm:ss-mm:ss format\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * bye"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * To take in user input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public static Scanner sc \u003d new Scanner (System.in);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Keeps of track of saved files"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * A list to store tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * In charge of the interface the user sees"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Button exitButton;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Image user \u003d new Image (this.getClass().getResourceAsStream (\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Image duke \u003d new Image (this.getClass().getResourceAsStream (\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Duke bot"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param filePath where to save and load files when Duke closes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Duke (String filePath) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        storage \u003d new Storage (filePath);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            tasks \u003d new TaskList (storage.loadFiles());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            tasks \u003d new TaskList (new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Empty Duke Constructor"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public static void main (String[] args) throws Exception {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        new Duke ().run();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Runs the Duke bot\u0027s processes"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @throws IOException if buffer reads a NULL input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ui.printOpeningScreen();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Parser parser \u003d new Parser (tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        while (! (input \u003d sc.nextLine()).equals (\"bye\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            ui.printBreak();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            parser.parse (input);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            ui.printBreak();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        storage.saveFiles (tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ui.closeScreen();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Starts up the duke application"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param stage Stage layout of duke application"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void start (Stage stage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setContent (dialogContainer);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        exitButton \u003d new Button(\"exit\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        mainLayout.getChildren().addAll (scrollPane, userInput, sendButton,exitButton);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scene \u003d new Scene (mainLayout);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.setScene (scene);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.setTitle (\"Duke\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.setResizable (false);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.setMinHeight (600.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        stage.setMinWidth (400.0);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        mainLayout.setPrefSize (400.0, 600.0);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setPrefSize (385, 535);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setHbarPolicy (ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setVbarPolicy (ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setVvalue (1.0);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.setFitToWidth (true);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialogContainer.setPrefHeight (Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        userInput.setPrefWidth (325.0);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        sendButton.setPrefWidth (55.0);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane.setTopAnchor (scrollPane, 1.0);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane.setBottomAnchor (sendButton, 1.0);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane.setRightAnchor (sendButton, 1.0);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane.setLeftAnchor (userInput, 1.0);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        AnchorPane.setBottomAnchor (userInput, 1.0);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        sendButton.setOnMouseClicked ( (event) -\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel (userInput.getText()));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        userInput.setOnAction ( (event) -\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            dialogContainer.getChildren().add (getDialogLabel (userInput.getText()));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialogContainer.heightProperty().addListener ( (observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Label getDialogLabel (String text) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Label textToAdd \u003d new Label (text);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        textToAdd.setWrapText (true);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String dukeText \u003d getResponse (userInput.getText());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialogContainer.getChildren().addAll ("
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                DialogBox.getUserDialog (userText, user),"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                DialogBox.getUserDialog (dukeText, duke)"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String getResponse (String input) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"Duke replies: \" + input;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void save() throws IOException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        storage.saveFiles (tasks);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void load() throws IOException {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        tasks \u003d new TaskList (storage.loadFiles());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 226,
      "-": 2
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class DukeExceptions extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public DukeExceptions (String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents a Deadline task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * On what date the event is held on"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * What time the event starts"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected LocalTime start;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * What time the event ends"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected LocalTime end;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates an Event Task object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param description What the event is"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param date        What day the event is on"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param start       When time the event starts"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param end         What time the event ends"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Event (String description, LocalDate date, LocalTime start, LocalTime end) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Formats the Event object so it can be saved on the hard disk"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a formatted string that can be saved onto hard disk"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String saveFile() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (this.status.equals (\"Done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"E|1||\" + this.description + \"|||\" + this.date + \" \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    + this.start + \"-\" + this.end;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"E|0||\" + this.description + \"|||\" + this.date + \" \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    + this.start + \"-\" + this.end;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Converts Event object into string format to describe the event"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string that describes the event,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * what type of event, and schedule of event"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + this.date.format(DateTimeFormatter.ofPattern (\"MMM d yyyy, \"))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + this.start.format(DateTimeFormatter.ofPattern (\"hh:mm a\")) + \" - \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + this.end.format(DateTimeFormatter.ofPattern (\"hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 68
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Duke instance"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Starts up the duke application"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param stage Stage layout of duke application"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void start (Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader (Main.class.getResource (\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 37
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Button exitButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Duke duke \u003d new Duke (\"src/main/java/data/duke.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void initialize() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        duke.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private void handleUserInput() throws Exception {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Parser parser \u003d new Parser (duke.getTaskList());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String response \u003d parser.parse (input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private void exitAndSave() throws Exception {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        duke.save();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 60
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Processes user input"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * A list of Task objects to keep track of task changes"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Parser object that is able to process user input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param taskList A list of task objects to keep track of task changes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Recognises command prompts and does the appropriate task handling"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param input A command prompt by the user to Duke"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a string to be printed out on the duke application GUI"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String parse(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return taskList.list();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (input.length() \u003e\u003d 6) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    assert taskNum \u003c\u003d taskList.size() : \"Task number cannot be larger than list size\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    return taskList.done(taskNum);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    return \"Please state a proper task number:(\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return \"Please state a task number:(\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            //Delete task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (input.length() \u003e\u003d 8) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    assert taskNum \u003c\u003d taskList.size() : \"Task number cannot be larger than list size\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    return taskList.delete(taskNum);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    return \"PLease state a proper task number to delete:(\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return \"Please state a task number to delete:(\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (input.length() \u003e\u003d 6) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                String keyWord \u003d input.substring(5);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return taskList.find(keyWord);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return \"Where is your keyword:(\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (input.contains (\"clear list\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return taskList.clearList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (input.equals (\"bye\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"Cya soon:)\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            //Create task using key words: \"todo\", \"deadline\", \"event\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                //if there are no task, no need to check for duplicates"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                if (taskList.size() \u003e 0 \u0026\u0026 taskList.containsDup(input)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    return \"This task has already been added before!\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        return taskList.addTask(\"T\", input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        return taskList.addTask(\"D\", input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        return taskList.addTask(\"E\", input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                //invalid task format"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return \"Back at you!\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 87
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Saves and loads files when Duke starts and closes"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Location of saved files"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Storage object that can save and load tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param filePath Location of saved files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Storage (String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Loads previously saved files into Duke when Duke starts up"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return An Arraylist of task that contains saved files"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @throws IOException when reader takes in NULL input"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFiles() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        FileReader in \u003d new FileReader (filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        BufferedReader br \u003d new BufferedReader (in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String loadTask \u003d null;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            while ((loadTask \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                String type \u003d loadTask.substring (0, 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                assert type.equals (\"T\") || type.equals (\"E\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        || type.equals (\"D\") : \"Has to be a certain type of task\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                int indexOfDescription \u003d loadTask.indexOf (\"||\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                if (type.equals (\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    String descriptionOfLoadedTask \u003d loadTask.substring(indexOfDescription + 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    Todo loadedT \u003d new Todo(descriptionOfLoadedTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    if (loadTask.substring(2, 3).equals(\"1\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        loadedT.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    lst.add(loadedT);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                } else if (type.equals (\"D\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    int timeIndex \u003d loadTask.indexOf(\"|||\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    String loadedDescription \u003d loadTask.substring(indexOfDescription + 2, timeIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    LocalDate loadedDDate \u003d LocalDate.parse (loadTask.substring(timeIndex + 3));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    Deadline loadedD \u003d new Deadline (loadedDescription, loadedDDate);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    if (loadTask.substring (2, 3).equals (\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        loadedD.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    lst.add(loadedD);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        int timeIndex \u003d loadTask.indexOf(\"|||\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        String loadedDescription \u003d loadTask.substring(indexOfDescription + 2, timeIndex);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        LocalDate loadedEDate \u003d LocalDate.parse (loadTask.substring (timeIndex + 3, timeIndex + 13));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        LocalTime loadedStart \u003d LocalTime.parse (loadTask.substring (timeIndex + 14, timeIndex + 19));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        LocalTime loadedEnd \u003d LocalTime.parse (loadTask.substring (timeIndex + 20));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        Event loadedE \u003d new Event (loadedDescription, loadedEDate, loadedStart, loadedEnd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        if (loadTask.substring (2, 3).equals (\"1\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                            loadedE.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        lst.add (loadedE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            System.out.println (\"No files man\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Saves current task in Duke when Duke closes"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param taskList List of task to be saved"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @throws IOException when reader reads NULL input"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void saveFiles (TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        ArrayList\u003cTask\u003e lst \u003d taskList.getList();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        File file \u003d new File (filePath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        FileWriter fr;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            fr \u003d new FileWriter (file, false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fr);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                Task savedTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                bw.write (savedTask.saveFile() + \"\\n\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                bw.flush();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                fr.flush();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"duke.txt\"));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            for (int i \u003d 0; i \u003c lst.size(); i++) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                Task savedTask \u003d lst.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                bw.write (savedTask.saveFile() + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                bw.flush();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 118
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents a Task object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Parent class of Todo, Event and Deadline classes"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Describes the task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Whether the task is done or not"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    protected String status \u003d \"Not Done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a task object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param description describes the task being created"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Changes the status of the task as \"Done\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints out a message to user that task is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.status \u003d \"Done\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Lets user know whether task is done or not"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return whether the task is \"Done\" or \"Not Done\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        assert this.status \u003d\u003d \"Done\" || this.status \u003d\u003d \"Not Done\" : \"Only 2 types of status\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Formats the Task object into a string so it can be saved into hard disk"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a formatted string representing the task object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String saveFile() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (this.status.equals(\"Done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"1|\" + this.description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"0|\" + this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Converts the task object into a string that describes the task"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return a string that describes the task and whether is has been done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"[\" + this.status + \"] \" + this.description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 69
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents a list of Task object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * An list to store the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    private int pendingTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a TaskList object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param taskList List of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Task taskToBeAdded \u003d taskList.get(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            this.taskList.add(taskToBeAdded);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (taskToBeAdded.getStatus().equals (\"Not Done\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                this.pendingTask++;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints out all task in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A String of elements in the tasklist"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        //List out task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        int num \u003d taskList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        for (int i \u003d 0; i \u003c num; i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            output +\u003d (i + 1) + \". \" + this.taskList.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            output +\u003d \"\\n You have no task!\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            output +\u003d \"\\n You have \" + this.pendingTask + \" pending task!\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Marks the task that has been completed"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param taskNum The task that has been done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string to be printed on duke application GUI to indicated status of done task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String done(int taskNum) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Task completedTask \u003d this.taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (completedTask.getStatus().equals(\"Done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                output+\u003d \"You have already completed this task!\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                completedTask.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                this.pendingTask--;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                output+\u003d \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                        + \"[\" + completedTask.getStatus() + \"] \" + completedTask.getDescription();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (this.pendingTask \u003d\u003d 0) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                output+\u003d \"\\nYay! You have no more task remaining!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                output +\u003d \"\\nYou have \" + this.pendingTask + \" tasks remaining!\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"Sorry, there is no such task!\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Removes task from the list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param taskNum Task to be removed"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string to be printed on duke application GUI to indicate status of deleted task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String delete(int taskNum) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Task deletedTask \u003d this.taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            String status \u003d deletedTask.getStatus();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            assert status.equals(\"Done\") || status.equals(\"Not Done\") : \"Only Done or Not Done\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (status.equals(\"Not Done\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                //Pending task count drops only if deleted task not completed"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                this.pendingTask--;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            output +\u003d \"Noted. I\u0027ve removed this task:\\n\" + deletedTask"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    + \"\\nNow you have \" + this.pendingTask + \" tasks in the list.\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            this.taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"Sorry, there is no such task!\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Adds a new task into the list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param type  Whether it is a todo,event of deadline task"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param input Describes the task to be added to the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string to be printed out on duke application GUI on the status of the added task"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String addTask(String type, String input) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Task task \u003d taskConvertor(type, input);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            this.taskList.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            this.pendingTask++;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"Got it. I\u0027ve added the following task:\\n\" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                    task + \"\\nYou now have \" + this.pendingTask + \" task in the list\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"Invalid task request:(\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Task taskConvertor (String type, String input) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            String task1 \u003d input.substring(5);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Todo todo \u003d new Todo(task1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return todo;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            int taskIndex \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            int byIndex \u003d taskIndex + 1;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(input.substring(byIndex));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Deadline deadline \u003d new Deadline(input.substring(9, taskIndex), date);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            int taskIndex \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            int atIndex \u003d taskIndex + 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            int timeIndex \u003d atIndex + 11;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(input.substring(atIndex, timeIndex - 1));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            LocalTime start \u003d LocalTime.parse(input.substring(timeIndex, timeIndex + 5));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            LocalTime end \u003d LocalTime.parse(input.substring(timeIndex + 6));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            Event event \u003d new Event(input.substring(6, taskIndex), date, start, end);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return event;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints out all task that contain a particular keyword"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param keyWord keyword in task that you are looking for"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string to be printed on duke application GUI to indicate the task that matches the keyword"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String find(String keyWord) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        output +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        int j \u003d 0;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            String description \u003d this.taskList.get(i).toString();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (description.contains(keyWord)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                output+\u003d (i + 1) + \".\" + description + \"\\n\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                j++;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (j \u003d\u003d 0) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            output +\u003d \"No task with such keyword:(\";"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public boolean containsDup (String taskName) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            String description \u003d this.taskList.get(i).toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            String task;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (taskName.contains(\"todo\")) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                 task \u003d taskConvertor(\"T\", taskName).toString();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else if (taskName.contains (\"deadline\")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                 task \u003d taskConvertor (\"D\",taskName).toString();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                 task \u003d taskConvertor (\"E\",taskName).toString();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            if (description.equals(task)) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String clearList() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            taskList.remove(0);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        this.pendingTask \u003d 0;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"Done! You have no more task!\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Gives the arraylist storing all the task"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return An arraylist of Task"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Replaces .size() of arrayList to work around private access issues"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return size of tasklist"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 218
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Represents a Todo Task object"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Creates a Todo object"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @param description Describes the Todo object to be created"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Formats the Todo object into a string that can be saved into hard disk"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string that is formatted to be saved into hard disk"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String saveFile() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        if (this.status.equals(\"Done\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"T|1||\" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "            return \"T|0||\" + this.description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Converts Todo object into string format to describe the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * @return A string that describes the task and what type of task it is"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 38
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " * Displays images and text in user interface"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints the Duke logo and welcomes user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void printOpeningScreen() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String line \u003d \"__________________________\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        System.out.println(line + \"\\nWhat can i do for you?\\n\" + line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints a line to separate command prompts"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void printBreak() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String line \u003d \"____________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        System.out.println(line + \"\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     * Prints a closing message to the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void closeScreen() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        String wave \u003d \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        System.out.println(wave + \"\\nCya soon:)\\n\" + wave);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 35
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "T|0||basketball"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 1
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.control.ToolBar?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "      \u003cToolBar prefHeight\u003d\"40.0\" prefWidth\u003d\"200.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003citems\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "          \u003cButton fx:id\u003d\"exitButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#exitAndSave\" text\u003d\"Exit\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003c/items\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "      \u003c/ToolBar\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"40.0\" prefHeight\u003d\"518.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"518.0\" prefWidth\u003d\"389.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 25
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void getStatusTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        assertEquals(\"Not Done\", new Task(\"Play basketball\").getStatus());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void stringConversionTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        assertEquals(\"[Not Done] Practice music\", new Task(\"Practice music\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 17
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void saveFileTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        assertEquals(\"T|0||Play basketball\", new Todo(\"Play basketball\").saveFile());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    public void stringConversionTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "        assertEquals(\"[T][Not Done] Finish Homework\", new Todo(\"Finish Homework\").toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "SHAUNGOH97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "SHAUNGOH97": 17
    }
  }
]
