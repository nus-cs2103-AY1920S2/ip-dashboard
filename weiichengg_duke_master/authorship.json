[
  {
    "path": "Data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Event No homework 1997-01-30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Event Yes school 2020-02-29"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Todo pokemon No"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Todo homework No"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 4
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    archiveVersion \u003d \"v0.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    runtimeOnly \u0027org.openjfx:javafx-graphics:$javafx.version:mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "test {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    mainClassName \u003d \"Launcher\" //seedu."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 43,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "![](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "-todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "-deadlines"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "-events"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "-list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "-sort"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Duke would store the description of the task into a list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### `todo` - Describe action"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Example of usage: todo Homework tonight"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`Got it. I have added this task:`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### deadlines"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Duke would store the description of the deadline into a list which contains the due date of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### `deadlines` - Describe action"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Example of usage: deadline Homework 2020/02/26"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`Got it. I have added this deadline:`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### events"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Duke would store the description of the event into a list which contains the due date and the location of the event."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### `events` - Describe action"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Example of usage: event tuition  2020/02/26 Sembawang"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`Got it. I have added this events`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Duke would list out all the tasks, deadlines and events."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### `list` - Describe action"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Describe action and its outcome."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Example of usage: event tuition  2020/02/26 Sembawang"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`keyword (optional arguments)`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "`todo Homework`"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "### sort"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Duke would sort the task and print out all the tasks, deadlines and events."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiichengg": 58,
      "-": 28
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Circle circle \u003d new Circle(35, 40, 35);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.setStyle(\"-fx-background-color:DARKGRAY\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Create dialog box for duke and initiate the flip method."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param text the response given by duke"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param img the image of duke"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return the a dialog box for duke"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 71
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Events;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Deadlines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import exception.ExceptionGenerator;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * The class for the ChatBot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke  {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor to create an instance of Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param filePath the String representation of the file location"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * To run the conversation with the user based on the different commands of the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Exception will be thrown when the user give an invalid input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String[] userInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Parser parser \u003d new Parser(userInput);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            ExceptionGenerator.checkInputLength(userInput);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            ExceptionGenerator.checkInputAction(userInput);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                int taskNo \u003d Integer.parseInt(parser.getDescription());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.tasks.getTask(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Integer numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return (\"Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + this.tasks.getTask(taskNo - 1).toString()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                taskNo \u003d Integer.parseInt(userInput[1]) - 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                final Task removedTask \u003d this.tasks.getTask(taskNo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.tasks.removeTask(taskNo);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return (\"Noted. I\u0027ve removed this task:\\n\" + removedTask.toString()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return this.printText() + (\"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                String description \u003d parser.getDescription();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ExceptionGenerator.checkDescription(description);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Task task \u003d new Task(description);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.tasks.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return (\"Got it. I\u0027ve added this task:\\n\" + task.toString()"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \"\\nNow you have \" + numbOfTask + \" tasks in the list.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                //break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                String[] tokens \u003d parser.getDescription().split(\" /by \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ExceptionGenerator.checkDeadlinesInput(tokens);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ExceptionGenerator.checkDescription(tokens[0]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Deadlines deadlines \u003d new Deadlines(tokens[0], tokens[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.tasks.add(deadlines);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return (\"Got it. I\u0027ve added this task:\\n\" + (deadlines.getDate()).toString()"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                tokens \u003d parser.getDescription().split(\" /at \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ExceptionGenerator.checkEventInput(tokens);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ExceptionGenerator.checkDescription(tokens[0]);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Events event \u003d new Events(tokens[0], tokens[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.tasks.add(event);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return (\"Got it. I\u0027ve added this task:\\n\" + event.toString()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"sort\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Collections.sort(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                numbOfTask \u003d this.tasks.taskStorage.size();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                this.updateData(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return this.printText() + (\"\\nNow you have \" + numbOfTask.toString() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                String keyWord \u003d parser.getDescription();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.taskStorage.size(); i++) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    task \u003d tasks.taskStorage.get(i);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    if ((task.getDescription()).contains(keyWord)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        matchingTasks.add(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    return (\"There is no matching task in your list\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    StringBuilder taskInformation \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    for (Task t : matchingTasks) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        taskInformation.append(t.toString());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    return taskInformation.toString();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                return Ui.initiateFareWell();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private void updateData(ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        storage.saveToDisk(this.tasks.taskStorage);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * To print out all the task in the"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * TaskStorage."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String printText() {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        for (Task task : this.tasks.taskStorage) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            text.append(Integer.valueOf(counter).toString() + \".\" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return text.toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiichengg": 175,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Launcher class is used to start the program."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Duke duke \u003d new Duke(\"Data/Duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * To start the GUI for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            Scene scene \u003d new Scene(ap, Color.DARKTURQUOISE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 36
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Duke duke \u003d new Duke(\"Data/Duke.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private String getResponse(String input) { // temp change to public"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return \" 연인 \u003c3: \\n\" + input;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assert input.length() \u003e 0 : \"The user\u0027s input is not valid.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Parser parser \u003d new Parser(input.split(\" \"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String command \u003d parser.getCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String response \u003d this.getResponse(this.duke.run(input));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.dialogContainer.setStyle(\"-fx-background-color:#ffb508\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.isGoodbye(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check the user input to verify if duke should bid goodbye to user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private void isGoodbye(String userInput) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 78
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Parser class is to decipher and break down the user\u0027s input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    String description \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * constructor for the Parser class."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param userInput string representation of the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Parser(String[] userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.command \u003d userInput[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (userInput.length \u003e 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            this.description \u003d userInput[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * To obtain the command of the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return command given by user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * To obtain the description of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return description of the user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiichengg": 42
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Events;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Deadlines;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Storage is used to store and load the file from the database."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param storageLocation the String representation of the location of the text file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Storage(String storageLocation) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.path \u003d storageLocation;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Save the changes made to the current list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param taskStorage current list of task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void saveToDisk(ArrayList\u003cTask\u003e taskStorage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String name \u003d this.path;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assert name.length() \u003e 0 : \"The given path to store the list of Tasks is not valid.\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.path);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            int counter \u003d 0;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            for (Task task : taskStorage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                Task t \u003d taskStorage.get(counter++);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                if (t instanceof Events) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.write(\"Event \" + t.checkDone() + \" \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            + t.getDescription() + \" \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            + (((Events) t).getDate()).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.newLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                } else if (t instanceof Deadlines) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.write(\"Deadlines \" + t.checkDone() + \" \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            + t.getDescription() + \" \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            + (((Deadlines) t).getDate()).toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.newLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.write(\"Todo \" + t.getDescription() + \" \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            + t.checkDone());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    bw.newLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * load all the existing task from the txt file."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return ArrayList of Task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        ArrayList\u003cTask\u003e destination \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            FileReader fr \u003d new FileReader(this.path);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(fr);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            String line \u003d br.readLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                String[] tempArray \u003d line.split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                String action \u003d tempArray[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                if (action.equals(\"Todo\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    destination.add(new Task(tempArray[1],tempArray[2]));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                } else if (action.equals(\"Deadlines\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    destination.add(new Deadlines(tempArray[2], tempArray[3],tempArray[1]));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                } else if (action.equals(\"Event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    destination.add(new Events(tempArray[2], tempArray[3],tempArray[1]));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                line \u003d br.readLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            br.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return destination;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiichengg": 109
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * TaskList contains all the current task in an ArrayList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public ArrayList\u003cTask\u003e taskStorage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the TaskList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ts) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        taskStorage \u003d ts;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the TaskList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        taskStorage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * add the task to the TaskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param task an instance of the Task Class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a new TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public TaskList add(Task task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        taskStorage.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * search and return a particular task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param numb index of the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return the task called by the user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Task getTask(int numb) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return taskStorage.get(numb);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * remove a particular task based on the index."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param numb index of the task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a new TaskList."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public TaskList removeTask(int numb) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        taskStorage.remove(numb);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 60
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * UI handles all the interaction with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Greet the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void initiateGreetings() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + \"     What can I do for you?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Tell the user that the programme has finished loading."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void loadingCompleted() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        System.out.println(\"FINISH loading data\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Print out the message from Duke to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param message message from Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void transmitMessage(String message) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Output all the error messages."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param err Exceptions being thrown."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void showLoadingError(DukeException err) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        err.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static String initiateFareWell() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return (\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 57
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * DukeException represents all the potential exceptions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param message Error message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * String representation of the error."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 26
    }
  },
  {
    "path": "src/main/java/exception/ExceptionGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * ExceptionGenerator checks for all the potential exceptions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class ExceptionGenerator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check if the user inputs has the correct length."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param input array of Strings."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @throws DukeException incorrect user\u0027s input length."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkInputLength(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (input.length \u003d\u003d 1 \u0026\u0026 input[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else if (input.length \u003d\u003d 1 \u0026\u0026 input[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else if (input.length \u003d\u003d 1 \u0026\u0026 input[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check if the dscription is only 1 word."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param description the user\u0027s input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkDescription(String description) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String[] tokkens \u003d description.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (tokkens.length \u003e 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"Please keep your description to one word. ^.^\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check if the user input is valid."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param input array of String."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @throws DukeException user input invalid."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkInputAction(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (!input[0].equals(\"todo\") \u0026\u0026 !input[0].equals(\"list\")"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                \u0026\u0026 !input[0].equals(\"delete\") \u0026\u0026 !input[0].equals(\"event\")"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    \u0026\u0026 !input[0].equals(\"deadline\") \u0026\u0026 !input[0].equals(\"done\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        \u0026\u0026 !input[0].equals(\"find\") \u0026\u0026 !input[0].equals(\"bye\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                            \u0026\u0026 !input[0].equals(\"sort\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * A static method to check for the validity of the user\u0027s date."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param date refers to the dateline of the task for event and deadlines."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @throws DukeException invalid date entered."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkDateFormat(String date) throws DukeException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String[] dateArray \u003d date.split(\"-\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (dateArray.length \u003c 3) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"The input of date is in the wrong order. \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    + \"Please input it in the format of Year-Month-Date \u003c3\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + \" for example, 2020-02-20\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else if (dateArray[0].length() !\u003d 4) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"You have entered an invalid year :(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else if (dateArray[1].length() !\u003d 2 || dateArray[2].length() !\u003d 2) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"Please make sure your inputs are of the following for the month and day\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    + \"For example, 2020-02-20\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        int monthValue \u003d Integer.parseInt(dateArray[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (monthValue \u003e 12 || monthValue \u003c 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"Please ensure the month falls within the range of 1-12\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        int dayValue \u003d Integer.parseInt(dateArray[2]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (dayValue \u003e\u003d 31 || dayValue \u003c 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException((\"Please ensure the date falls within the range of 1-31\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check the input for the deadline task is of the correct format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param input user input stored in a string array."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @throws DukeException that the format for deadline is wrong."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkDeadlinesInput(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"Wrong format for deadline! Please ensure the format is of the following;)\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    + \"E.g deadline homework /by 2020-02-20\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Check the input for the event task is of the correct order."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param input user input in a string array"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @throws DukeException the format for event is wrong."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public static void checkEventInput(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (input.length \u003c 2) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            throw new DukeException(\"Wrong format for event! Please ensure the format is of the following;)\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    + \"E.g event homework /at 2020-02-20\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 103
    }
  },
  {
    "path": "src/main/java/sampletest/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package sampletest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import exception.ExceptionGenerator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Deadlines is a subclass of task which takes an additional variable time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the Deadlines by taking in a description and time."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDescripton description of deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDate time of the deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Deadlines(String newDescripton, String newDate) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        super(newDescripton);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        ExceptionGenerator.checkDateFormat(newDate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.date \u003d LocalDate.parse(newDate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor that is used when we are loading the data from the saved file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDescripton description of deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newTime time of the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param status status of the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Deadlines(String newDescripton, String newTime, String status) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        super(newDescripton, status);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.date \u003d LocalDate.parse(newTime);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * return a String representation of the date."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return Integer.valueOf(this.date.getDayOfMonth()).toString() + \" \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + this.date.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + Integer.valueOf(this.date.getYear()).toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Give a particular instance deadline priority over other tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return boolean variable"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public boolean isUrgent() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * get the completion date in the integer format of"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * 30012020 for 30-jan-2020."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return an integer value of the date"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public int getCompletionDate() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return date.getDayOfMonth() * 1000000 + date.getMonthValue()  * 10000 + date.getYear();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * return the date in the LocalDate representation."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return LocalDate."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Return a String representation of the Event objects."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return \" [D][\" + super.getStatusIcon() + \"]\" + super.description + \" \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + Integer.valueOf(this.date.getDayOfMonth()).toString()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + \"-\"  + this.date.getMonth().toString() + \"-\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                        + Integer.valueOf(this.date.getYear()).toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 89
    }
  },
  {
    "path": "src/main/java/sampletest/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package sampletest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import exception.ExceptionGenerator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Event is a subclass of task which takes an additional variable time."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the Events by taking in a description and time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDescripton Description of events."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDate time of event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Events(String newDescripton, String newDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        super(newDescripton);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        ExceptionGenerator.checkDateFormat(newDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.date \u003d LocalDate.parse(newDate);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor that is used when we are loading the data from the saved file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newDescripton Description of events."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param newTime time of event."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param status status of event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Events(String newDescripton, String newTime, String status) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        super(newDescripton, status);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.date \u003d LocalDate.parse(newTime);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * obtain the date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return string representation of the date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return Integer.valueOf(this.date.getDayOfMonth()).toString() + \" \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + this.date.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                + Integer.valueOf(this.date.getYear()).toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public boolean isUrgent() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public int getCompletionDate() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return date.getDayOfMonth() * 1000000 + date.getMonthValue() * 10000 + date.getYear();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * LocalDate representation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return localDate representation of the file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * The toString method."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return String representation of event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return \" [E][\" + super.getStatusIcon() + \"]\" + super.description + \" \""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "               + Integer.valueOf(this.date.getDayOfMonth()).toString() + \" \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                 + this.date.getMonth().toString() + \" \""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                    + Integer.valueOf(this.date.getYear()).toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 80
    }
  },
  {
    "path": "src/main/java/sampletest/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package sampletest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * Task correspond to the actions depending on the command given by the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the Task class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Constructor for the Task class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * when we are loading from the saved file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @param status status of the Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Task(String description, String status) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.isDone \u003d status.equals(\"Yes\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * obtain the icon corresponding to the status of the Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return an icon of tick when done or cross when it is not done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return (isDone ? \"Done:)\" : \"Not Done:(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * change an undone task to a completed task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a new instance of Task by changing the status to Done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * obtain a string representation of yes or no."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a String representation of Yes or No depending on the Status of the project."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String checkDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return (isDone ? \"Yes\" : \"No\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Get the description of the string."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return a String representation of the description of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public boolean isUrgent() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public int getCompletionDate() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return Integer.parseInt(null);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public int compareTo(Task task) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        if (task.isUrgent() \u0026\u0026 this.isUrgent()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            return task.getCompletionDate() -  this.getCompletionDate();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else if (task.isUrgent() \u0026\u0026 !this.isUrgent()) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     *  The toString method."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * @return String."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assert this.description.length() \u003e 0 : \"The description of the Task is not valid\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        return \" [T][\" + this.getStatusIcon() + \"]\" + this.description;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 104
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"215.0\" prefWidth\u003d\"445.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"TOP\" mouseTransparent\u003d\"true\" pickOnBounds\u003d\"false\" prefHeight\u003d\"165.0\" prefWidth\u003d\"246.0\" style\u003d\"-fx-border-color: purple; -fx-background-color: lightblue; -fx-border-width: 1px; -fx-border-radius: 20;\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"139.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.Menu?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.MenuBar?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.MenuItem?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.ScrollBar?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "      \u003cBorderPane prefHeight\u003d\"752.0\" prefWidth\u003d\"598.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "         \u003cright\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003cScrollBar orientation\u003d\"VERTICAL\" visibleAmount\u003d\"50.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "         \u003c/right\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-border-color: red;\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"76.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: lightgrey;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"250.0\" prefWidth\u003d\"480.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "      \u003cMenuBar prefHeight\u003d\"29.0\" prefWidth\u003d\"400.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003cmenus\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003citems\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Close\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003c/items\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Edit\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003citems\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"Delete\" /\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003c/items\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003citems\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "              \u003cMenuItem mnemonicParsing\u003d\"false\" text\u003d\"About\" /\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "            \u003c/items\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "          \u003c/Menu\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        \u003c/menus\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "      \u003c/MenuBar\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 48
    }
  },
  {
    "path": "src/test/java/test/JunitTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "package test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import sampletest.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * CS2103 Individual Project."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * JunitTest is responsible for testing the Task, Events and Deadlines classes."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " * @author Wei Cheng"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "public class JunitTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Test the Task class.o"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void initiateTaskTest() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Task sample \u003d new Task(\"Code java\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String expectedDescription \u003d \"Code java\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String actualDescription \u003d sample.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String expectedStatus \u003d \"No\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String actualStatus \u003d sample.checkDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assertEquals(actualDescription, expectedDescription);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assertEquals(actualStatus, expectedStatus);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Test the Event class."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void initiateEventTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Events sample \u003d new Events(\"Java for Life\",\"2020-01-29\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String expectedDate \u003d \"29 JANUARY 2020\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String actualDate \u003d sample.getTime();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assertEquals(expectedDate,actualDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     * Test the Deadlines class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    public void initiateDeadlinesTest() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        Deadlines sample \u003d new Deadlines(\"Java for Life\",\"2020-01-30\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String expectedDate \u003d \"30 JANUARY 2020\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        String actualDate \u003d sample.getTime();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "        assertEquals(expectedDate,actualDate);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 55
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " [T][?]borrow money"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "1. [T][?]borrow money"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " [D][?]return money (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": " [E][?]project conference (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "  [D][?]return money (by: Sunday)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "1. [T][?]borrow money"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "2. [D][?]return money (by: Sunday)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "3. [E][?]project conference (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "todo borrow money"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "deadline return money /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "event project conference /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "weiichengg": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "if ! javac  -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "weiichengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "weiichengg"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "weiichengg": 34
    }
  }
]
