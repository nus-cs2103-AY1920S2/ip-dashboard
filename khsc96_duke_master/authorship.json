[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "khsc96": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    archiveVersion \u003d \"v0.1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "khsc96": 42
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "T | 0 | run"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "E | 1 | project meeting | Feb 03 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D | 0 | submission | Mar 05 2020"
      }
    ],
    "authorContributionMap": {
      "khsc96": 3
    }
  },
  {
    "path": "gradle/wrapper/gradle-wrapper.properties",
    "fileType": "properties",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "#Mon Jan 20 22:23:17 SGT 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-5.5.1-all.zip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "distributionBase\u003dGRADLE_USER_HOME"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "distributionPath\u003dwrapper/dists"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "zipStorePath\u003dwrapper/dists"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "zipStoreBase\u003dGRADLE_USER_HOME"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "khsc96": 3
    }
  },
  {
    "path": "gradlew",
    "fileType": "gradlew",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env sh"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "##  Gradle start up script for UN*X"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "##"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "##############################################################################"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# Attempt to set APP_HOME"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# Resolve links: $0 may be a link"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "PRG\u003d\"$0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "# Need this for relative symlinks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "while [ -h \"$PRG\" ] ; do"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    ls\u003d`ls -ld \"$PRG\"`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    link\u003d`expr \"$ls\" : \u0027.*-\u003e \\(.*\\)$\u0027`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    if expr \"$link\" : \u0027/.*\u0027 \u003e /dev/null; then"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        PRG\u003d\"$link\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        PRG\u003d`dirname \"$PRG\"`\"/$link\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "SAVED\u003d\"`pwd`\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"`dirname \\\"$PRG\\\"`/\" \u003e/dev/null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "APP_HOME\u003d\"`pwd -P`\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "cd \"$SAVED\" \u003e/dev/null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "APP_NAME\u003d\"Gradle\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "APP_BASE_NAME\u003d`basename \"$0\"`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "# duke.command.Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "DEFAULT_JVM_OPTS\u003d\u0027\"-Xmx64m\"\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# Use the maximum available, or set MAX_FD !\u003d -1 to use that value."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "MAX_FD\u003d\"maximum\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "warn () {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "die () {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"$*\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "# OS specific support (must be \u0027true\u0027 or \u0027false\u0027)."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "cygwin\u003dfalse"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "msys\u003dfalse"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "darwin\u003dfalse"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "nonstop\u003dfalse"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "case \"`uname`\" in"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  CYGWIN* )"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    cygwin\u003dtrue"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  Darwin* )"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    darwin\u003dtrue"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  MINGW* )"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    msys\u003dtrue"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  NONSTOP* )"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    nonstop\u003dtrue"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    ;;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "esac"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "CLASSPATH\u003d$APP_HOME/gradle/wrapper/gradle-wrapper.jar"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "# Determine the Java command to use to start the JVM."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -n \"$JAVA_HOME\" ] ; then"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        # IBM\u0027s JDK on AIX uses strange locations for the executables"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/jre/sh/java\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        JAVACMD\u003d\"$JAVA_HOME/bin/java\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ ! -x \"$JAVACMD\" ] ; then"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d\"java\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    which java \u003e/dev/null 2\u003e\u00261 || die \"ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "location of your Java installation.\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "# Increase the maximum file descriptors if we can."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$cygwin\" \u003d \"false\" -a \"$darwin\" \u003d \"false\" -a \"$nonstop\" \u003d \"false\" ] ; then"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    MAX_FD_LIMIT\u003d`ulimit -H -n`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ $? -eq 0 ] ; then"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ \"$MAX_FD\" \u003d \"maximum\" -o \"$MAX_FD\" \u003d \"max\" ] ; then"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            MAX_FD\u003d\"$MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ulimit -n $MAX_FD"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ $? -ne 0 ] ; then"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            warn \"Could not set maximum file descriptor limit: $MAX_FD\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    else"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "# For Darwin, add options to specify how the application appears in the dock"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "if $darwin; then"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    GRADLE_OPTS\u003d\"$GRADLE_OPTS \\\"-Xdock:name\u003d$APP_NAME\\\" \\\"-Xdock:icon\u003d$APP_HOME/media/gradle.icns\\\"\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "# For Cygwin, switch paths to Windows format before running java"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "if $cygwin ; then"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    APP_HOME\u003d`cygpath --path --mixed \"$APP_HOME\"`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    CLASSPATH\u003d`cygpath --path --mixed \"$CLASSPATH\"`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    JAVACMD\u003d`cygpath --unix \"$JAVACMD\"`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    # We build the pattern for arguments to be converted via cygpath"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    ROOTDIRSRAW\u003d`find -L / -maxdepth 1 -mindepth 1 -type d 2\u003e/dev/null`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    SEP\u003d\"\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    for dir in $ROOTDIRSRAW ; do"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        ROOTDIRS\u003d\"$ROOTDIRS$SEP$dir\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        SEP\u003d\"|\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    done"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    OURCYGPATTERN\u003d\"(^($ROOTDIRS))\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    # duke.command.Add a user-defined pattern to the cygpath arguments"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    if [ \"$GRADLE_CYGPATTERN\" !\u003d \"\" ] ; then"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        OURCYGPATTERN\u003d\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    fi"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    # Now convert the arguments - kludge to limit ourselves to /bin/sh"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    i\u003d0"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    for arg in \"$@\" ; do"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        CHECK\u003d`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        CHECK2\u003d`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        if [ $CHECK -ne 0 ] \u0026\u0026 [ $CHECK2 -eq 0 ] ; then                    ### Added a condition"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "            eval `echo args$i`\u003d`cygpath --path --ignore --mixed \"$arg\"`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        else"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            eval `echo args$i`\u003d\"\\\"$arg\\\"\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        fi"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        i\u003d$((i+1))"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    done"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    case $i in"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        (0) set -- ;;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        (1) set -- \"$args0\" ;;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        (2) set -- \"$args0\" \"$args1\" ;;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    esac"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "# Escape application args"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "save () {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    for i do printf %s\\\\n \"$i\" | sed \"s/\u0027/\u0027\\\\\\\\\u0027\u0027/g;1s/^/\u0027/;\\$s/\\$/\u0027 \\\\\\\\/\" ; done"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \" \""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "APP_ARGS\u003d$(save \"$@\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "# Collect all arguments for the java command, following the shell quoting and substitution rules"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname\u003d$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "if [ \"$(uname)\" \u003d \"Darwin\" ] \u0026\u0026 [ \"$HOME\" \u003d \"$PWD\" ]; then"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  cd \"$(dirname \"$0\")\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "exec \"$JAVACMD\" \"$@\""
      }
    ],
    "authorContributionMap": {
      "-": 170,
      "khsc96": 2
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents a Personal Assistant Chatbot named EXE that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * helps a person to keep track of various things."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @since 2020-01-20"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * A constructor to initialise duke.Storage, duke.task.TaskList and duke.Ui class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * which is responsible for loading and saving tasks, containing"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the task list with additional operations and"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * interaction with the user respectively."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param filePath Relative path of the storage text file used."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (IOException io) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            ui.showStorageError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this(\"data\" + System.getProperty(\"file.separator\") + \"duke.txt\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Execute the start-up, message shown, and main functions of the chatbot"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        System.out.println(ui.addBorder(ui.showWelcome()));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                Command currentCommand \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                response \u003d currentCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                isExit \u003d currentCommand.isExit();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } catch (DukeException dukeEx) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                response \u003d ui.showStandardError(dukeEx);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } catch (DateTimeException dateEx) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                response \u003d ui.showDateTimeException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } catch (IndexOutOfBoundsException indexEx) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                response \u003d ui.showIndexOutOfBoundException(tasks.getSize());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                System.out.println(ui.addBorder(response));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Create a duke.Duke object which is used to invoke start-up of Chatbot."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        new Duke(\"data\" + System.getProperty(\"file.separator\") + \"duke.txt\").run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            Command currentCommand \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            response \u003d currentCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (DukeException dukeEx) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            response \u003d ui.showStandardError(dukeEx);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (DateTimeException dateEx) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            response \u003d ui.showDateTimeException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (IndexOutOfBoundsException indexEx) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            response \u003d ui.showIndexOutOfBoundException(tasks.getSize());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "khsc96": 103
    }
  },
  {
    "path": "src/main/java/duke/DukeErrorType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents all the foreseen type of error Chatbot EXE will face."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public enum DukeErrorType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Given command is invalid."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Given command abbreviation is invalid."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    INVALID_ABBREVIATION,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.task.Task do not have an description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    EMPTY_DESCRIPTION,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Given wrong date format."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    EMPTY_TIME,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * User give no input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    EMPTY_COMMAND;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 30
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents most of the exception generated when user give"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * wrong input format or invalid command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected DukeErrorType errorType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected String commandName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Constructor for duke.DukeException class. Used if error message should include command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * name to be printed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param message     String object which represents the message user want to display without using toString method."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param errorType   An Enum class categorising which error type encountered."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param commandName duke.command.Command name of the command given by user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public DukeException(String message, DukeErrorType errorType, String commandName) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Another constructor for duke.DukeException class. Used if error message do not require"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * command name to be printed"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param message   String object which represents the message user want to display without using toString method."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param errorType An Enum class categorising which error type encountered."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public DukeException(String message, DukeErrorType errorType) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.errorType \u003d errorType;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a short description of this throwable."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The result is the concatenation of:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cli\u003e the {@linkplain Class#getName() name} of the class of this object"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cli\u003e \": \" (a colon and a space)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cli\u003e the result of invoking this object\u0027s {@link #getLocalizedMessage}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *      method"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * If {@code getLocalizedMessage} returns {@code null}, then just"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the class name is returned."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return a string representation of this throwable."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(\"      :( Small peepee move, please give valid command!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case EMPTY_DESCRIPTION:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(\"      :( WHOOPS I did it again~\\n\" + \"      \" + commandName"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    + \" description is empty!\\n      Describe it for my smol brain please :)\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case EMPTY_TIME:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(\"      Date and time?\\n\" + \"      \" + commandName"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    + \" time is empty!\\n      Set it for your smol brain please :)\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case INVALID_ABBREVIATION:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(\"      Invalid abbreviation in data document, please check!\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    \"      Only T/D/E abbreviation is allowed.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case EMPTY_COMMAND:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(\"      Please give me something to exe :D\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 77
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Add;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Delete;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.Exit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represent how the Chatbot is able to understand user\u0027s command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Date format of user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public final static DateTimeFormatter USER_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Return a duke.command.Command object with respect to user input."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * If user input consist of keyword todo, event or deadline"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * a duke.command.Add object will be returned."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * If user input consist of keyword delete, a duke.command.Delete object"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * will be returned."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * If user input consist of keyword done, a duke.command.Done object will be returned."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * If user input consist of keyword list, a duke.command.List object will be returned."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * IF user input consist of keyword bye, a duke.command.Exit object will be returned."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * else a duke.DukeException will be thrown with invalid command tagged to it."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param fullCommand String object of input given by user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.command.Command object that represents the command of the user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws DukeException             if user input is empty, invalid or duke.command.Command description is empty."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws DateTimeException         if Date format is not in yyyy-mm-dd."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws IndexOutOfBoundsException if index accessing is more than amount of duke.task.Task exist or negative index."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException, DateTimeException, IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String[] inputArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String command \u003d inputArr[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (fullCommand.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            throw new DukeException(\"Type something\", DukeErrorType.EMPTY_COMMAND);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        CommandList commandValue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            commandValue \u003d CommandList.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (IllegalArgumentException exception) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            throw new DukeException(\"Invalid command\", DukeErrorType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        switch (commandValue) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String[] todoArr \u003d fullCommand.split(\"todo\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (todoArr.length \u003d\u003d 0 || todoArr[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                throw new DukeException(\"Empty duke.task.ToDo description\", DukeErrorType.EMPTY_DESCRIPTION, command);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                String todoDescription \u003d todoArr[1].trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                return new Add(new ToDo(todoDescription));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String[] eventDetails \u003d fullCommand.split(\"/at\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (eventDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                throw new DukeException(\"Empty duke.task.Event time\", DukeErrorType.EMPTY_TIME, command);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String eventTime \u003d eventDetails[1].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String[] descriptionArr \u003d eventDetails[0].split(\"event\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String eventDescription \u003d descriptionArr[1].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (descriptionArr.length \u003d\u003d 0 || eventDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                throw new DukeException(\"Empty duke.task.Event description\", DukeErrorType.EMPTY_DESCRIPTION, command);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                return new Add(new Event(eventDescription, LocalDate.parse(eventTime, USER_FORMAT)));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String[] deadlineDetails \u003d fullCommand.split(\"/by\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (deadlineDetails.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                throw new DukeException(\"Empty duke.task.Deadline time\", DukeErrorType.EMPTY_TIME, command);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String deadlineTime \u003d deadlineDetails[1].trim();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String deadlineDescription \u003d \"\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            String[] descriptionArrDeadLine \u003d deadlineDetails[0].split(\"deadline\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            deadlineDescription \u003d descriptionArrDeadLine[1].trim();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (descriptionArrDeadLine.length \u003d\u003d 0 || deadlineDescription.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                throw new DukeException(\"Empty duke.task.Deadline description\", DukeErrorType.EMPTY_DESCRIPTION, command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                return new Add(new Deadline(deadlineDescription, LocalDate.parse(deadlineTime, USER_FORMAT)));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            int deleteTaskNumber \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return new Delete(deleteTaskNumber);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return new Done(taskNumber);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return new List();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return new Exit();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            throw new DukeException(\"Invalid command\", DukeErrorType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khsc96": 110
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.command.CommandList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents a storage with the functionality of loading"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * tasks and saving tasks from and into a text file located"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * in the relative file path given."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * System separator used to standardise across OS platforms"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public final static String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private final static String DONE \u003d \"1\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private final static String ABSOLUTE_PATH \u003d Paths.get(\"\").toAbsolutePath().toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private File pathFile;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private String absoluteStorageFilePath;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * A constructor to create the File object reference to the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * absolute file path of the storage text file."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * It also creates the directory named \u0027data\u0027 under root directory"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * and the storage text file named \u0027duke.txt\u0027 if it does not exist"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * in project folder."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param filePath Relative path of the storage text file used."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws IOException if directory or text file is unable to be created."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String path \u003d Paths.get(ABSOLUTE_PATH + System.getProperty(\"file.separator\") + filePath).toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        File file \u003d new File(path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.absoluteStorageFilePath \u003d path;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.pathFile \u003d file;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            createDataPath(ABSOLUTE_PATH);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Create storage text file named \u0027duke\u0027 and directory named \u0027data\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * if it does not exist."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param rootDirectory Root directory of project."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws IOException if directory or text file is unable to be created."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void createDataPath(String rootDirectory) throws IOException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String fileSeparator \u003d System.getProperty(\"file.separator\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        File dataDirectory \u003d new File(rootDirectory + fileSeparator + \"data\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (!dataDirectory.exists()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            dataDirectory.mkdir();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        pathFile.createNewFile();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Reads from storage text file for any saved tasks recorded"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * previously by user and populate it into an ArrayList for"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * further processing."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return ArrayList of tasks stored in storage text file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws DukeException if abbreviation of duke.task.Task read from storage does not match T, D or E."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            Scanner scanner \u003d new Scanner(pathFile);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                String nextLine \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                String[] taskArr \u003d nextLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                CommandList taskAbbreviation \u003d CommandList.get(taskArr[0]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                switch (taskAbbreviation) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    ToDo storeTask \u003d new ToDo(taskArr[2]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    if (taskArr[1].equals(DONE)) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        storeTask.markAsDone();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    tasks.add(storeTask);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    Event storeEvent \u003d new Event(taskArr[2], LocalDate.parse(taskArr[3], inputFormat));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    if (taskArr[1].equals(DONE)) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        storeEvent.markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    tasks.add(storeEvent);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    Deadline storeDeadline \u003d new Deadline(taskArr[2], LocalDate.parse(taskArr[3], inputFormat));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    if (taskArr[1].equals(DONE)) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        storeDeadline.markAsDone();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    tasks.add(storeDeadline);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    throw new DukeException(\"Invalid abbreviation!\", DukeErrorType.INVALID_ABBREVIATION);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (FileNotFoundException fileException) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                createDataPath(ABSOLUTE_PATH);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                System.out.println(\"Unable to create storage file/directory\\n\" +"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        \"Please create a data directory and duke.Duke.txt in it\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Write back to storage text file for any changes made by user such as"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * adding new duke.task.Task, deleting existing duke.task.Task and updating duke.task.Task status."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param updatedList Updated list of tasks after certain user command."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void save(TaskList updatedList) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (pathFile.canWrite()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                FileWriter fileWriter \u003d new FileWriter(absoluteStorageFilePath);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                String toBeWritten \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                for (Task eachTask : updatedList.getListOfTasks()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    if (eachTask instanceof ToDo) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        toBeWritten +\u003d \"T | \" + eachTask.getStatusNumber() + \" | \" + eachTask.getDescription() + NEWLINE;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    } else if (eachTask instanceof Event) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        toBeWritten +\u003d \"E | \" + eachTask.getStatusNumber() + \" | \" + eachTask.getDescription() + \" | \""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                                + ((Event) eachTask).getTime() + NEWLINE;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    } else if (eachTask instanceof Deadline) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        toBeWritten +\u003d \"D | \" + eachTask.getStatusNumber() + \" | \" + eachTask.getDescription() + \" | \""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                                + ((Deadline) eachTask).getBy() + NEWLINE;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        throw new IOException(\"Problem encountered while saving/writing to data file\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                fileWriter.write(toBeWritten);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                fileWriter.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                System.out.println(\"Problem encountered while saving/writing to data file\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            System.out.println(\"Please check write permission on \" + absoluteStorageFilePath);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 166
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents the interaction between the User and"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * the Personal Assistant Chatbot EXE."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Common Strings used for enhancing UI with user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public final static String NEWLINE \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public final static String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public final static String BORDER \u003d INDENT + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print welcome message upon boot up."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String logo \u003d INDENT + \"  _____  __    __  _____\" + NEWLINE"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + INDENT + \" |  ___||  \\\\  /  ||  ___|\" + NEWLINE"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + INDENT + \" | |__   \\\\  \\\\/  / | |__\" + NEWLINE"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + INDENT + \" |  __|   |    |  |  __|\" + NEWLINE"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + INDENT + \" | |___  /  /\\\\  \\\\ | |___\" + NEWLINE"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + INDENT + \" |_____||__/  \\\\__\\\\|_____|\" + NEWLINE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(logo);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \"  Hello! I\u0027m EXE, I\u0027ll execute anything on your command! :)\" + NEWLINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \"  What do you want to exe?\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showGuiWelcome() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\"Hello! I\u0027m EXE, I\u0027ll execute anything on your command! :)\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                + NEWLINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\"What do you want to exe?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print error message whenever storage text file or directory cannot be"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * automatically generated."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Error message prompts user to create respective directory and file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void showStorageError() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        System.out.println(addBorder(\"Unable to create storage file/directory\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                \"Please create a data directory and duke.Duke.txt in it.\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print loading error if an error occurs upon booting up Chatbot."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param e duke.DukeException class used to handle various specific Chatbot error."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        System.out.println(addBorder(e.toString()));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print error message when user give wrong Date Time format."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Error message states the correct format user supposed to give."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showDateTimeException() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (INDENT + \"Please type date in this format yyyy-MM-dd,\" + \" including dashes\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print error message whenever use give a non-existence task number."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Error message states size of user tasks list to aid user in"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * typing in range task number."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param listSize Size of actual user tasks list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showIndexOutOfBoundException(int listSize) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (INDENT + \"duke.command.List only have \" + listSize + \" of tasks, please choose within range.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print error message whenever user key in unsupported command."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Error message describes the problem with input and prompts user"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * to input in correct format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param dukeEx duke.DukeException targetted at specific error faced using Chatbot."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showStandardError(DukeException dukeEx) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (dukeEx.toString());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print message notifying user of task deleted from existing list of tasks."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param deletedTask duke.task.Task object of the task removed from existing list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param listSize    Total number of remaining task left in the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showDeleteMessage(Task deletedTask, int listSize) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\"      Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \"   \" + deletedTask.toString() + \"\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(String.format(\"      Now you have %d task(s) in the list.\", listSize));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (stringBuilder.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * A wrapper method to read user input from terminal."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return user input in the form of String object."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a message with top and bottom border appended to it."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Enhancing UI."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param message Message in String object to be appended with border."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return String object of the final message to be printed."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String addBorder(String message) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return BORDER + NEWLINE + message + NEWLINE + BORDER;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print all the duke.task.Task objects in the duke.command.List and numbering them according"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * to the order of task being added into the list. First in first out"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * format."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param listOfTask duke.task.TaskList object of user existing tasks."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showListMessage(TaskList listOfTask) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \"  Here are the tasks in your list:\" + NEWLINE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task currentTask;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTask.getSize(); i++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            currentTask \u003d listOfTask.getTask(i);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(INDENT + \"  \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stringBuilder.append(String.format(\" %d. %s\" + NEWLINE, i + 1, currentTask.toString()));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                .append(String.format(\"%s  In case you can\u0027t count! you have %d task(s) in your list\","
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                        INDENT, listOfTask.getSize()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (stringBuilder.toString());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print a customised message whenever user adds a duke.task.Task into the"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * list of user tasks."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param message String of duke.task.Task describing it."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param size    Number of tasks in the list after adding the current task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showCustomiseMessage(String message, int size) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \" \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\" Got it. I\u0027ve added this task:\" + NEWLINE);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \" \");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\"  \" + message + NEWLINE);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT + \" \");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(String.format(\" Now you have %d tasks in list.\", size));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (stringBuilder.toString());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print a message notifying user the task that have been mark as done."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param markedIcon String representing duke.task.Task have been done."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param task       duke.task.Task object that have been marked as done."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showDoneMessage(String markedIcon, Task task) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(\"  Very productive! I\u0027ve slayed this task:\" + NEWLINE);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder.append(INDENT);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        stringBuilder"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                .append(String.format(\"   [%s] %s\", markedIcon, task.getDescription() + \" \" + task.getTime()));"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Print a Good bye message when user exiting Chatbot."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String showGoodByeMessage() {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (INDENT + \"  Goodbye and have a beautiful time!\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 199
    }
  },
  {
    "path": "src/main/java/duke/command/Add.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Add extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Add(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        tasks.addTask(super.getTask());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return ui.showCustomiseMessage(super.getTask().toString(), tasks.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents as an outline what a command carried about by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Chatbot should be able to do."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Any class that extends this class must implement method"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * execute and isExit."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Only inherits from this class according to what Chatbot can"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * understand as a command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Command(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.task \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Getter method to retrieve duke.task.Task object if command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * requires a duke.task.Task object to be created."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.task.Task object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Provide the ability any command to:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * 1) call respective duke.task.TaskList method if command requires"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * any form of functionality provided by duke.task.TaskList class."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * 2) call respective duke.Ui method if command requires any"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * form of interaction with user."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * 3) call respective duke.Storage method if command requires"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * any form of functionality provided by duke.Storage class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param tasks   duke.task.TaskList object providing command the ability to call duke.task.TaskList methods."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param ui      duke.Ui object providing command the ability to call duke.Ui methods."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param storage duke.Storage object providing command the ability to call duke.Storage methods."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Should set boolean to true if command is an exit command otherwise"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * set boolean to false."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return Boolean value representing command is an exit command."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khsc96": 65
    }
  },
  {
    "path": "src/main/java/duke/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents the available command Chatbot EXE recognise with"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * an abbreviation tag to command that will generate a duke.task.Task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public enum CommandList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.task.Deadline command with D as abbreviation."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    DEADLINE(\"D\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.command.Delete command with no abbreviation."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    DELETE(\"\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.command.Done command with no abbreviation."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    DONE(\"\"),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.task.Event command with E as abbreviation."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    EVENT(\"E\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * duke.command.List command with no abbreviation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    LIST(\"\"),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Todo command with T as abbreviation."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Bye command with no abbreviation."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    BYE(\"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private String abbreviation;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private static final Map\u003cString, CommandList\u003e lookup \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    CommandList(String abbreviation) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.abbreviation \u003d abbreviation;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns the abbreviation of command as a String."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return An abbreviation String object representing the command."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getAbbreviation() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return abbreviation;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        for (CommandList cl : CommandList.values()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            lookup.put(cl.getAbbreviation(), cl);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns duke.command.CommandList object by passing it\u0027s corresponding abbreviation."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param abbreviation Abbreviation in the form of string representing the command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.command.CommandList object correspond to the abbreviation passed in as param."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static CommandList get(String abbreviation) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return lookup.get(abbreviation);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 73
    }
  },
  {
    "path": "src/main/java/duke/command/Delete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Delete extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Delete(int taskNumber) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task deletedTask \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return ui.showDeleteMessage(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Done.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Done extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Done(int taskNumber) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        tasks.getTask(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return ui.showDoneMessage(tasks.getTask(taskNumber).getStatusIcon(), tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Exit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Exit extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Exit(Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Exit() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return ui.showGoodByeMessage();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 26
    }
  },
  {
    "path": "src/main/java/duke/command/List.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class List extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public List() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return ui.showListMessage(tasks);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 21
    }
  },
  {
    "path": "src/main/java/duke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 61
    }
  },
  {
    "path": "src/main/java/duke/gui/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Application.launch(duke.gui.Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 12
    }
  },
  {
    "path": "src/main/java/duke/gui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stage.setTitle(\"EXE ChatBot (\\\"\\\\(\u0027^-^\u0027)/\\\")\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * This method is called when the application should stop, and provides a"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * convenient place to prepare for application exit and destroy resources."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The implementation of this method provided by the Application class does nothing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * NOTE: This method is called on the JavaFX Application Thread."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws Exception if something goes wrong"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void stop() throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        TimeUnit.MILLISECONDS.sleep(800);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 53
    }
  },
  {
    "path": "src/main/java/duke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Controller for duke.gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private boolean isStartUp \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        loadStartUp(d.getUi());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void loadStartUp(Ui ui) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String welcome \u003d ui.showGuiWelcome();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                DialogBox.getDukeDialog(welcome, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (response.equals(duke.getUi().showGoodByeMessage())) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents a task which is a user\u0027s duke.task.Deadline task given by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected final String deadlineLogo \u003d \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Constructor of DeadLine class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param description Description describing the duke.task.Deadline task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param by          LocalDate object of when the deadline is."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Return a String object of the task deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return Date of task deadline in the format of MMM-dd-YYYY."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return by.format(outputFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a string representation of the object. In general, the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * {@code toString} method returns a string that"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \"textually represents\" this object. The result should"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * be a concise but informative representation that is easy for a"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * person to read."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * It is recommended that all subclasses override this method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The {@code toString} method for class {@code Object}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * returns a string consisting of the name of the class of which the"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object is an instance, the at-sign character `{@code @}\u0027, and"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the unsigned hexadecimal representation of the hash code of the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object. In other words, this method returns a string equal to the"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * value of:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cblockquote\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cpre\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/pre\u003e\u003c/blockquote\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String formattedDate \u003d by.format((outputFormat));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return String.format(\"[%s]%s (by: %s)\", deadlineLogo, super.toString(), formattedDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represent a task which is a user\u0027s duke.task.Event task given by user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected final String eventLogo \u003d \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Constructor for duke.task.Event class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param at          LocalDate object of when event is happening."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.time \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Return a String object of when the event is happening."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return Date of when the event is happening in the format of MMM-dd-YYYY."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return time.format(outputFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a string representation of the object. In general, the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * {@code toString} method returns a string that"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \"textually represents\" this object. The result should"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * be a concise but informative representation that is easy for a"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * person to read."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * It is recommended that all subclasses override this method."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The {@code toString} method for class {@code Object}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * returns a string consisting of the name of the class of which the"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object is an instance, the at-sign character `{@code @}\u0027, and"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the unsigned hexadecimal representation of the hash code of the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object. In other words, this method returns a string equal to the"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * value of:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cblockquote\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cpre\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/pre\u003e\u003c/blockquote\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String formattedDate \u003d time.format(outputFormat);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return String.format(\"[%s]%s (by: %s)\", eventLogo, super.toString(), formattedDate);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 63
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.time \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        description \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        // return tick or cross symbols respectively."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return (isDone ? \":)\" : \":(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getStatusNumber() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return \"1\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            return \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a string representation of the object. In general, the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * {@code toString} method returns a string that"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \"textually represents\" this object. The result should"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * be a concise but informative representation that is easy for a"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * person to read."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * It is recommended that all subclasses override this method."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The {@code toString} method for class {@code Object}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * returns a string consisting of the name of the class of which the"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object is an instance, the at-sign character `{@code @}\u0027, and"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the unsigned hexadecimal representation of the hash code of the"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object. In other words, this method returns a string equal to the"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * value of:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cblockquote\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cpre\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/pre\u003e\u003c/blockquote\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 69
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents the existing list of tasks user have stored including"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * the functionality of adding new tasks, deleting existing tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * and basic getters to allow retrieval of information on list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * of users task such as size of list, the list itself and specific"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected List\u003cTask\u003e userTasksList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * A constructor used to wrap the ArrayList of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param listOfTask duke.command.List of user tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public TaskList(List\u003cTask\u003e listOfTask) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.userTasksList \u003d listOfTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * A Overload empty constructor"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        this.userTasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns the exact amount of existing user tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return int representing size of list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return userTasksList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns the duke.task.Task object which is located at the index given."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param taskNumber Index of which task is located in the duke.command.List."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.task.Task located at the list of the index given."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return userTasksList.get(taskNumber);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns the exact copy of existing user list of tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.command.List of duke.task.Task objects"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public List\u003cTask\u003e getListOfTasks() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return userTasksList;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Adds duke.task.Task object given in the existing a duke.task.Task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param task duke.task.Task object to be added into the user list of tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        userTasksList.add(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Deletes duke.task.Task object given in the existing duke.task.Task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param taskNumber Index of duke.task.Task object in the list of duke.task.Task object(s)."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return duke.task.Task object that have been removed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @throws IndexOutOfBoundsException if given parameter taskNumber is out of bound."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public Task deleteTask(int taskNumber) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return userTasksList.remove(taskNumber);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param keyword"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public List\u003cTask\u003e findTask(String keyword) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ArrayList\u003cTask\u003e listOfTasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        for (Task task : userTasksList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                listOfTasksFound.add(task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return listOfTasksFound;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 97
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * Represents a task which is a user todo task with description of it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * tagged."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": " * @author Kenny Ho"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    protected final String toDoLogo \u003d \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Constructor that stores the description of todo task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @param description description of task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * An empty constructor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public ToDo() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        super(\"\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * Returns a string representation of the object. In general, the"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * {@code toString} method returns a string that"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \"textually represents\" this object. The result should"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * be a concise but informative representation that is easy for a"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * person to read."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * It is recommended that all subclasses override this method."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * The {@code toString} method for class {@code Object}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * returns a string consisting of the name of the class of which the"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object is an instance, the at-sign character `{@code @}\u0027, and"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * the unsigned hexadecimal representation of the hash code of the"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * object. In other words, this method returns a string equal to the"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * value of:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cblockquote\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003cpre\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * getClass().getName() + \u0027@\u0027 + Integer.toHexString(hashCode())"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * \u003c/pre\u003e\u003c/blockquote\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     * @return a string representation of the object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        return String.format(\"[%s]%s\", toDoLogo, super.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 54
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "khsc96": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"558.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "khsc96": 16
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getByTest_invalidDateFormat_DateTimeExceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertThrows(DateTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            new Event(\"abcd\", LocalDate.parse(\"05-05-1995\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getByTest_validDateFormat_dateInMmmDdYyyyFormat() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"Submit report\", LocalDate.parse(\"2020-05-05\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d deadlineTest.getBy();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"May 05 2020\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void testToStringTest_correctInput_stringDescribingDeadlineObject() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Deadline deadlineTest \u003d new Deadline(\"Submit report\", LocalDate.parse(\"2020-05-05\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d deadlineTest.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"[D][:(] Submit report (by: May 05 2020)\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 35
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getTimeTest_invalidDateFormat_dateTimeExceptionThrown() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertThrows(DateTimeException.class, () -\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "            new Event(\"Project Meeting\", LocalDate.parse(\"05-05-1995\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        });"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getTimeTest_validDateFormat_dateInMmmDdYyyyFormat() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Event eventTest \u003d new Event(\"Project Meeting\", LocalDate.parse(\"2020-05-05\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d eventTest.getTime();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"May 05 2020\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void testToStringTest_correctInput_stringDescribingEventObject() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Event eventTest \u003d new Event(\"Project Meeting\", LocalDate.parse(\"2020-05-05\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d eventTest.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"[E][:(] Project Meeting (by: May 05 2020)\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 34
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void findTaskTest_keywordBook_listOfTaskWithBookInDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        List\u003cTask\u003e listOfTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        List\u003cTask\u003e expectedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-01-30\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Event event \u003d new Event(\"abcdef\", LocalDate.parse(\"2020-01-29\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        listOfTasks.add(toDo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        listOfTasks.add(deadline);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        listOfTasks.add(event);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        expectedList.add(toDo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        expectedList.add(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        TaskList taskListTest \u003d new TaskList(listOfTasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        List\u003cTask\u003e actualResult \u003d taskListTest.findTask(\"book\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertArrayEquals(expectedList.toArray(), actualResult.toArray());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 32
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getStatusIconTest_defaultTask_notDoneMarkShown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.getStatusIcon();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \":(\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getStatusNumberTest_defaultTask_stringZeroReturned() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.getStatusNumber();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"0\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void markAsDoneTest_doneTask_doneMarkShown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        taskTest.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.getStatusIcon();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \":)\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getStatusNumberTest_doneTask_stringOneReturned() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        taskTest.markAsDone();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.getStatusNumber();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"1\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void getDescriptionTest_runAsDescription_stringRunReturned() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.getDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"Run\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void testToStringTest_correctInput_stringDescribingTaskObject() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        Task taskTest \u003d new Task(\"Run\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d taskTest.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"[:(] Run\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 58
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    void toStringTest_correctInput_stringDescribingToDoObject() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        ToDo toDoTest \u003d new ToDo(\"Read book\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String expectedResult \u003d \"[T][:(] Read book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        String actualResult \u003d toDoTest.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "        assertEquals(expectedResult, actualResult);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khsc96": 15
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      _____  __    __  _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |  ___||  \\  /  ||  ___|"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     | |__   \\  \\/  / | |__"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |  __|   |    |  |  __|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     | |___  /  /\\  \\ | |___"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |_____||__/  \\__\\|_____|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Hello! I\u0027m EXE, I\u0027ll execute anything on your command! :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      What do you want to exe?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [T][:(] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 1 tasks in list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [D][:(] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 2 tasks in list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [E][:(] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 3 tasks in list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [D][:(] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 4 tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       1.[T][:(] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       2.[D][:(] return book (by: Sunday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       3.[E][:(] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       4.[D][:(] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      In case you can\u0027t count! you have 4 task(s) in your list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Very productive! I\u0027ve slayed this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [:)]return book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      :( Small peepee move, please give valid command!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      :( WHOOPS I did it again~"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      todo description is empty!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Describe it for my smol brain please :)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Goodbye and have a beautiful time!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "khsc96": 54
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      _____  __    __  _____"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |  ___||  \\  /  ||  ___|"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     | |__   \\  \\/  / | |__"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |  __|   |    |  |  __|"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     | |___  /  /\\  \\ | |___"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "     |_____||__/  \\__\\|_____|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Hello! I\u0027m EXE, I\u0027ll execute anything on your command! :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      What do you want to exe?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [T][:(] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 1 tasks in list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [D][:(] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 2 tasks in list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [E][:(] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 3 tasks in list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [D][:(] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Now you have 4 tasks in list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       1.[T][:(] borrow book"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       2.[D][:(] return book (by: Sunday)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       3.[E][:(] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       4.[D][:(] do homework (by: no idea :-p)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      In case you can\u0027t count! you have 4 task(s) in your list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Very productive! I\u0027ve slayed this task:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khsc96"
        },
        "content": "       [:)]return book"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      :( Small peepee move, please give valid command!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      :( WHOOPS I did it again~"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      todo description is empty!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Describe it for my smol brain please :)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khsc96"
        },
        "content": "      Goodbye and have a beautiful time!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "khsc96": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khsc96": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khsc96"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khsc96"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khsc96"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khsc96"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khsc96"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khsc96"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khsc96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khsc96"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khsc96"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "khsc96": 22
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.command.CommandList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.task.Deadline.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.DukeErrorType.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.DukeException.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.task.Event.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.task.Task.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khsc96"
        },
        "content": "D:\\duke\\src\\main\\java\\duke.task.ToDo.java"
      }
    ],
    "authorContributionMap": {
      "khsc96": 8
    }
  }
]
