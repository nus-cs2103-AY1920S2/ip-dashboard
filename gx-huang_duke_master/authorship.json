[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.gradle.api.plugins.internal.DefaultJavaApplication"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.gradle.internal.jvm.Jvm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "final def application \u003d application {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "application"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "gx-huang": 43
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "E/dividetrue/dividethis/dividethat"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 1
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Deadlines extends Task{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Deadlines(String description, Boolean isDone, String by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String simpleMonth \u003d date.getMonth().toString().substring(0,3);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String formattedDate \u003d simpleMonth + \" \" + date.getDayOfMonth() + \" \" + date.getYear();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (By: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private DukeStorage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private UserText tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private DukeParser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String filePath \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        storage \u003d new DukeStorage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks \u003d storage.readText();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        parser \u003d new DukeParser(this.tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DukeUI.showWelcomeMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.tasks \u003d parser.parseCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Label helloWorld \u003d new Label(\"LIBERTY PRIME IS ONLINE\"); // Creating a new Label control"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "gx-huang": 31
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/DukeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    UserText tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeParser(UserText tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UserText parseCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String command \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String[] command_broken \u003d command.split(\" \",2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String action \u003d command_broken[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (action.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showByeMsg();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.printTasks();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showDoneMsg();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String context \u003d command_broken[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(context);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.markDone(taskNo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showDeleteMsg();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String context \u003d command_broken[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    int taskNo \u003d Integer.parseInt(context);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.removeTask(taskNo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase((\"deadline\"))) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showCreationMsg();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String context \u003d command_broken[1];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String[] context_broken \u003d context.split(\" /by \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.addInput(new Deadlines(context_broken[0], false ,context_broken[1]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase((\"todo\"))) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showCreationMsg();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    if (command_broken.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        throw new DukeException(\"THE DESCRIPTION OF TODO CANNOT BE EMPTY\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.addInput(new ToDos(command_broken[1], false));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase((\"event\"))) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showCreationMsg();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String context \u003d command_broken[1];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    String[] context_broken \u003d context.split(\" /at \", 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    tasks.addInput(new Events(context_broken[0], false, context_broken[1]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (action.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    DukeUI.showFindMsg();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    int count \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    for (Task t: tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        if (t.containsSubstring(command_broken[1])) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                            System.out.println(count + \".\" + t);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                            count++;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new DukeException(\"UNABLE TO COMPREHEND\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } catch (DukeException exception) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 81
    }
  },
  {
    "path": "src/main/java/DukeStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeStorage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeStorage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void saveTasks(UserText tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e allTasks \u003d tasks.getAllTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task: allTasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (task instanceof ToDos) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"T\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"D\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"E\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                writer.write(\"/divide\" + task.isDone() + \"/divide\" + task.getDescription());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"/divide\" + ((Deadlines) task).getDeadline());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"/divide\" + ((Events) task).getVenue());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(ioException.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UserText readText() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        UserText tasks \u003d new UserText();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            BufferedReader bufferedreader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            while ((s \u003d bufferedreader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String[] taskParams \u003d s.split(\"/divide\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Task task \u003d Task.createStartingTask(taskParams);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(ioException.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 54
    }
  },
  {
    "path": "src/main/java/DukeUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeUI {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeUI() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showWelcomeMessage () {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String logo \u003d \" _     ___________ ___________ _______   __ ____________ ________  ___ _____\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"| |   |_   _| ___ \\\\  ___| ___ \\\\_   _\\\\ \\\\ / / | ___ \\\\ ___ \\\\_   _|  \\\\/  ||  ___|\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"| |     | | | |_/ / |__ | |_/ / | |  \\\\ V /  | |_/ / |_/ / | | | .  . || |__  \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"| |     | | | ___ \\\\  __||    /  | |   \\\\ /   |  __/|    /  | | | |\\\\/| ||  __|\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"| |_____| |_| |_/ / |___| |\\\\ \\\\  | |   | |   | |   | |\\\\ \\\\ _| |_| |  | || |___\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"\\\\_____/\\\\___/\\\\____/\\\\____/\\\\_| \\\\_| \\\\_/   \\\\_/   \\\\_|   \\\\_| \\\\_|\\\\___/\\\\_|  |_/\\\\____/\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"DEMOCRACY IS NON NEGOTIABLE\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showByeMsg() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"DEATH IS A PREFERABLE ALTERNATIVE TO COMMUNISM\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showLoadingError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"USERTEXT DATA IS NOT FOUND\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showDoneMsg() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"TASK COMPLETED. DEMOCRACY IS NON-NEGOTIABLE\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showCreationMsg() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"UNDERSTOOD. CHANCE OF FAILURE: 0%\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showDeleteMsg() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"OBSTRUCTION ELIMINATED\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showFindMsg() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"TARGET FOUND\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void showCurrentListSize(int size) {System.out.println(\"NOW YOU HAVE \" + size + \" TARGETS TO ELIMINATE\");}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 42
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Events extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Events(String description, Boolean isDone, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (At: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 18
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task createStartingTask(String[] taskParams) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String type \u003d taskParams[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        boolean isDone \u003d taskParams[1].equals(\"true\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String description \u003d taskParams[2];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new ToDos(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String by \u003d taskParams[3];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new Deadlines(description, isDone, by);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String at \u003d taskParams[3];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new Events(description, isDone, at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean containsSubstring(String search) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return description.contains(search);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    //returns \"O\" if done, \"X\" if not"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return (isDone ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 57
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ToDos(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 12
    }
  },
  {
    "path": "src/main/java/UserText.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "//Wrapper class for the list of tasks"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class UserText {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private List\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public UserText() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void addInput(Task s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.allTasks.add(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DukeUI.showCurrentListSize(allTasks.size());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\"HERE IS YOUR LIST\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task s : allTasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(count + \". \" + s);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task getTask(int n) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.allTasks.get(n-1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.allTasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.allTasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void markDone(int taskNo) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        allTasks.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void removeTask(int taskNo) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task tempTask \u003d allTasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(\" \" + tempTask);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        DukeUI.showCurrentListSize(allTasks.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 47
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testStringConvert() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[D][X] read book (By: JAN 1 2020)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\",false, \"2020-01-01\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[D][O] read book (By: JAN 1 2020)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\", true, \"2020-01-01\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testGetDeadline() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"2020-01-01\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\", true, \"2020-01-01\").getDeadline());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 20
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testStringConvert() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[T][X] read book\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new ToDos(\"read book\", false).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[T][O] read book\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new ToDos(\"read book\", true).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 14
    }
  }
]
