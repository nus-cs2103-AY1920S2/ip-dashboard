[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "final def application \u003d application {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "application"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    compile files(\"${System.properties[\u0027JAVA_HOME\u0027]}/../lib/tools.jar\")"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 17,
      "gx-huang": 45
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "E/dividetrue/dividethis/dividethat"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "![](Ui.png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "## DUKE"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "_**HATES LEFTOVER TASKS**_"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Add Todo, Event and Deadline: `todo` `event` `deadline`"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* todo `\u003cdescription\u003e`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * todo this"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003e [T][O] this"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* event `\u003cdescription\u003e` /at `\u003cplace\u003e` "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * event fly kite /at sentosa"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003e [E][O] fly kite at sentosa"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* deadline `\u003cdescription\u003e` /by `\u003cyyyy-mm-dd format\u003e`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * deadline do ip /by 2020-03-01"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003e [D][O]do ip by MAR 01 2020"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Mark tasks as done: `done`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* done `\u003cindex\u003e`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * done 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003e [T][X] this"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Delete task: `delete`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* delete `\u003cindex\u003e`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * delete 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### List all tasks: `list`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003e 1. [E][O] fly kite at sentosa"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003e 2. [D][O] do ip by MAR 01 2020"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Find a task: `find`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* find `\u003cdesciption\u003e`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * find todo"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    `OR`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    * find kite"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Archive: `archive`, `showarchived`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* archive 1"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* showarchived"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "### Exit duke: `bye`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "Example: "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "* bye"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "**DUKE SAVES ALL YOUR TASKS BEFORE LEAVING**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "##GET YOUR FREE COPY OF DUKE FOR ONLY $19.99!"
      }
    ],
    "authorContributionMap": {
      "-": 12,
      "gx-huang": 53
    }
  },
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.Format;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Class for Deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Deadline constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param description description of deadlines"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param isDone if task is done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param by deadline date in format yyyy-mm-dd"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Deadlines(String description, Boolean isDone, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * returns date of deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return date task is due"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * changes format of date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return String value after modifying the date from yyyy-mm-dd to MMM DD YYYY"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String simpleMonth \u003d date.getMonth().toString().substring(0,3);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String formattedDate \u003d simpleMonth + \" \" + date.getDayOfMonth() + \" \" + date.getYear();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (By: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dialog.setPadding(new Insets(5, 30, 5, 30));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        final Circle clip \u003d new Circle(50,50,50);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * returns flipped dialogbox."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param text text in dialogbox"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param img image of duke"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return returns a flipped dialogbox"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 76
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private DukeParser parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private DukeStorage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Duke constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String filePath \u003d \"tasks.txt\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        storage \u003d new DukeStorage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        tasks \u003d storage.readText();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        parser \u003d new DukeParser(tasks);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void saveData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return parser.parseCommand(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "gx-huang": 22
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 5
    }
  },
  {
    "path": "src/main/java/DukeParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    Scanner scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeParser(TaskList tasks) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * parses user input as commands and generates a response."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param command user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return Bot response after processing user\u0027s command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String parseCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String[] commandBroken \u003d command.split(\" \",2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String action \u003d commandBroken[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            if (action.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showByeMsg();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return tasks.printTasks();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String context \u003d commandBroken[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                int taskNo \u003d Integer.parseInt(context);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showDoneMsg(tasks.markDone(taskNo));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String context \u003d commandBroken[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                int taskNo \u003d Integer.parseInt(context);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return tasks.removeTask(taskNo);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase((\"deadline\"))) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String context \u003d commandBroken[1];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String[] contextBroken \u003d context.split(\" /by \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Task tempTask \u003d tasks.addTask(new Deadlines(contextBroken[0], false, contextBroken[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showCreationMsg(tempTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase((\"todo\"))) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (commandBroken.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    throw new DukeException(\"THE DESCRIPTION OF TODO CANNOT BE EMPTY\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Task tempTask \u003d tasks.addTask(new ToDos(commandBroken[1], false));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showCreationMsg(tempTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase((\"event\"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String context \u003d commandBroken[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String[] contextBroken \u003d context.split(\" /at \", 2);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Task tempTask \u003d tasks.addTask(new Events(contextBroken[0], false, contextBroken[1]));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showCreationMsg(tempTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                for (Task t : tasks.getAllTasks()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    if (t.containsSubstring(commandBroken[1])) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        System.out.println(count + \".\" + t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                        count++;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return DukeUI.showFindMsg();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"archive\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String context \u003d commandBroken[1];"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                int taskNo \u003d Integer.parseInt(context);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return tasks.archiveTask(taskNo);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"archiveall\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return tasks.archiveAll();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else if (action.equalsIgnoreCase(\"showarchive\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return tasks.showArchived();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                return \"UNABLE TO COMPREHEND\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 98
    }
  },
  {
    "path": "src/main/java/DukeStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Handles all storage in duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeStorage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeStorage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Saves tasks to a .txt file in the same directory"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param tasks saves tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void saveTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        List\u003cTask\u003e allTasks \u003d tasks.getAllTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try (FileWriter writer \u003d new FileWriter(filePath)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            for (Task task: allTasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (task instanceof ToDos) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"T\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"D\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"E\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                writer.write(\"/divide\" + task.isDone() + \"/divide\" + task.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"/divide\" + ((Deadlines) task).getDeadline());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                } else if (task instanceof Events) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                    writer.write(\"/divide\" + ((Events) task).getVenue());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                writer.write(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(ioException.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Reads .txt file from same directory"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskList readText() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            BufferedReader bufferedreader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String s;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            while ((s \u003d bufferedreader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                String[] taskParams \u003d s.split(\"/divide\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                Task task \u003d Task.createStartingTask(taskParams);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException ioException) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            System.out.println(ioException.getMessage());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 64
    }
  },
  {
    "path": "src/main/java/DukeUI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * User interface class for Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DukeUI {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public DukeUI() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * welcome message for duke."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * ToDo: use ascii art"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return welcome message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showWelcomeMessage() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        sb.append(\"DEMOCRACY IS NON NEGOTIABLE\\n\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        sb.append(\"HI I\u0027M:\\n\\n LIBERTY PRIME\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showByeMsg() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"DEATH IS A PREFERABLE ALTERNATIVE TO COMMUNISM\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showLoadingError() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"USERTEXT DATA IS NOT FOUND\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showDoneMsg(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"TASK COMPLETED:\\n\\n        \" + task.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showCreationMsg(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"UNDERSTOOD \\n\\n        \" + task.toString() + \"\\nADDED\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showDeleteMsg() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"TASK DELETED\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showFindMsg() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"TARGET FOUND\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showCurrentListSize(int size) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"NOW YOU HAVE \" + size + \" TASKS\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static String showArchivedMsg(Task task) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return task.toString() + \"\\n\\n        IS NOW ARCHIVED\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 54
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Represents an Event object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Event constructor."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param isDone checks if event is done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param at more description of event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Events(String description, Boolean isDone, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getVenue() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (At: \" + at + \")\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 27
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 13
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            MainWindow userInterface \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            userInterface.setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            stage.setTitle(\"DUKE\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            userInterface.dukeGreet();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 33
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (userInput.getText().equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            duke.saveData();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * greets user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void dukeGreet() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                DialogBox.getDukeDialog(DukeUI.showWelcomeMessage(), dukeImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                DialogBox.getDukeDialog(duke.getResponse(\"list\"), dukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 67
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Represents a Task object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Creates a task using the .txt file at the start of the programme"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param taskParams list of tasks as string of params"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return New task added to Task List"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @throws RuntimeException esception"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public static Task createStartingTask(String[] taskParams) throws RuntimeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String type \u003d taskParams[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        boolean isDone \u003d taskParams[1].equals(\"true\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String description \u003d taskParams[2];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new ToDos(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String by \u003d taskParams[3];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new Deadlines(description, isDone, by);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else if (type.equals(\"E\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            String at \u003d taskParams[3];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return new Events(description, isDone, at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean containsSubstring(String search) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return description.contains(search);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return (isDone ? \"X\" : \"O\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 68
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Wrapper class for the list of Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private List\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private List\u003cTask\u003e archivedTasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task addTask(Task s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.allTasks.add(s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Prints current Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return List of Current Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return getString(allTasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public List\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return this.allTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        this.allTasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public Task markDone(int taskNo) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return allTasks.get(taskNo - 1).markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * removes task from list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param taskNo task number"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return returns confirmation message"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String removeTask(int taskNo) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task tempTask \u003d allTasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return DukeUI.showDeleteMsg()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + \"\\n\" + \" \" + tempTask + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                + DukeUI.showCurrentListSize(allTasks.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * stores task in seperate list as archive."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @param taskNo task number"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return confirmation message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String archiveTask(int taskNo) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        Task tempTask \u003d allTasks.remove(taskNo - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        archivedTasks.add(tempTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return DukeUI.showArchivedMsg(tempTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * archives all tasks."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return list of all archived tasks"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String archiveAll() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        String archiveMessage \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d allTasks.size(); i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            archiveMessage +\u003d this.archiveTask(i);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return archiveMessage;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * Prints archived task."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     * @return List of archived task"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String showArchived() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return getString(archivedTasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    private String getString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        sb.append(\"HERE IS YOUR LIST\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        for (Task s : tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            sb.append(count).append(\". \").append(s).append(\"\\n\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            count++;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 95
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " * Represents a to do object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public ToDos(String description, Boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        super(description,isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-label-padding: 5, 0, 5, 5; -fx-background-color: FFFFFF; -fx-background-radius: 10; -fx-border-color: ABCDEF; -fx-border-radius: 10;\" text\u003d\"Label\" textFill\u003d\"#1c3144\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gx-huang": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testStringConvert() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[D][O] read book (By: JAN 1 2020)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\",false, \"2020-01-01\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[D][X] read book (By: JAN 1 2020)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\", true, \"2020-01-01\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testGetDeadline() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"2020-01-01\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new Deadlines(\"read book\", true, \"2020-01-01\").getDeadline());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 20
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gx-huang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    public void testStringConvert() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[T][O] read book\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new ToDos(\"read book\", false).toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "        assertEquals(\"[T][X] read book\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "                new ToDos(\"read book\", true).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gx-huang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gx-huang": 14
    }
  }
]
