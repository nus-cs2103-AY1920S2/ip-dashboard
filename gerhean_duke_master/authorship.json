[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "#Acknowledgements"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "**Resources**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "* Background: https://wallpapersafari.com/w/SQfFKk"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "* Duke Images: https://liah0227.itch.io/female-student-1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "* User Image: https://www.uihere.com/free-cliparts/koyomi-araragi-counter-strike-nexon-zombies-monogatari-series-anime-others-6828824"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "* Duke Voice: https://cicifyre.itch.io/free-voice-clips-pack-bright-female"
      }
    ],
    "authorContributionMap": {
      "gerhean": 9,
      "-": 39
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "buildscript {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    repositories {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        jcenter()"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    dependencies {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        classpath(group: \"com.github.jengelman.gradle.plugins\","
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                name:\"shadow\", version:\"1.2.1\")"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    testCompile \"org.mockito:mockito-core:2.+\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    testCompile \u0027org.powermock:powermock-module-junit4:2.0.2\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    testCompile \u0027org.powermock:powermock-api-mockito2:2.0.2\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    project.ext.checkstyleVersion \u003d \u00278.28\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    configFile \u003d file(\"${rootDir}/config/checkstyle/checkstyle.xml\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    jcenter()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.media\u0027 ]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "mainClassName \u003d \"dukebot.Launcher\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "artifacts {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    shadowJar"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "assemble.dependsOn(shadowJar)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    mainClassName \u003d \"dukebot.Launcher\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "test {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 49,
      "-": 22
    }
  },
  {
    "path": "src/main/java/dukebot/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.command.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Main logic."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private AppStorage appStorage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Initialises Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param hasGui Whether GUI mode is used."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Duke(boolean hasGui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui \u003d new Ui(hasGui);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // Load Aliases"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Parser parserTemp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            parserTemp \u003d new Parser(storage.loadAlias());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Can ignore the exception message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // As alias map is not always generated by previous uses of application."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            parserTemp \u003d new Parser();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        parser \u003d parserTemp;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // Load Contacts"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactList contactList;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            contactList \u003d new ContactList(storage.loadContactArrayList());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Can ignore the exception message"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // As contact list is not always generated by previous uses of application."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            contactList \u003d new ContactList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList tasks \u003d loadTaskList(ui, storage, hasGui);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        appStorage \u003d new AppStorage(tasks, contactList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Loads the task list from storage."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private TaskList loadTaskList(Ui ui, Storage storage, Boolean hasGui) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList tasks;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ArrayList\u003cTask\u003e taskArrayList \u003d storage.loadTaskArrayList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            tasks \u003d new TaskList(taskArrayList);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (hasGui) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                ui.showWelcomeGui();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                ui.getDukeVoice().playVoice();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                ui.showWelcome();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            tasks \u003d new TaskList(taskArrayList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                // TaskList saved in drive as a mark as to whether application has ever been used."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                storage.saveTaskList(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } catch (DukeException g) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                ui.sayLine(g.getErrorLineName());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the current UI for text output."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The Ui being used."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates Response for GUI."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param input The input string to parse."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return String to say."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.resetGuiOutput();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        c.execute(appStorage, ui, storage);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (c.isExit()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Hack to delay program close."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    Thread.sleep(1500);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                } catch (InterruptedException ie) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.getDukeVoice().playVoice();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return ui.getGuiOutput();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Runs duke without GUI."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Command c \u003d parser.parse(fullCommand);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            c.execute(appStorage, ui, storage);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 135
    }
  },
  {
    "path": "src/main/java/dukebot/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Launches the GUI."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (args.length \u003e\u003d 1 \u0026\u0026 args[0].equals(\"text\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Duke duke \u003d new Duke(false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            duke.run();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 21
    }
  },
  {
    "path": "src/main/java/dukebot/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.gui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Duke duke \u003d new Duke(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            stage.setTitle(\"Waifu Simulator (Duke)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/duke_happy.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().printCurrentMessage();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 37
    }
  },
  {
    "path": "src/main/java/dukebot/command/AddContactCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactDetail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithContact;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.MiscUtils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class AddContactCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr  The input entered by user split by space"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public AddContactCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactList contactList \u003d appStorage.getContactList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.ADD_CONTACT_EMPTY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!MiscUtils.isInteger(inpArr[2])) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String name \u003d inpArr[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int phoneNumber \u003d Integer.parseInt(inpArr[2]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactDetail contactDetail \u003d new ContactDetail(name, phoneNumber);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        contactList.add(contactDetail);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithContact(LineNameWithContact.ADD_CONTACT_SUCCESS, contactDetail);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveContactList(contactList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 50
    }
  },
  {
    "path": "src/main/java/dukebot/command/AliasCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Changes phrase mapping of command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class AliasCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final HashMap\u003cString, CommandList\u003e aliasMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr  The input entered by user split by space"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public AliasCommand(String[] inpArr, HashMap\u003cString, CommandList\u003e aliasMap) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert aliasMap !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.aliasMap \u003d aliasMap;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003c 3) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.ALIAS_COMMAND_FAIL);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String currentAlias \u003d inpArr[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String newAlias \u003d inpArr[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!aliasMap.containsKey(currentAlias)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.ALIAS_DOES_NOT_EXIST);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (aliasMap.containsKey(newAlias)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.ALIAS_ALREADY_EXISTS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        CommandList command \u003d aliasMap.get(currentAlias);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        aliasMap.remove(currentAlias);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        aliasMap.put(newAlias, command);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveAlias(aliasMap);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.aliasSuccess(currentAlias, newAlias);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 56
    }
  },
  {
    "path": "src/main/java/dukebot/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command abstract class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param appStorage AppStorage to accept."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param ui Ui to accept."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param storage Storage to accept."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public abstract void execute(AppStorage appStorage, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Asserts that the parameters are not null."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param appStorage AppStorage to accept."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param ui Ui to accept."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param storage Storage to accept."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void assertExecuteNotNull(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert appStorage !\u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert ui !\u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert storage !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Returns true if command is ExitCommand, false otherwise."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Whether this is an ExitCommand command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 41
    }
  },
  {
    "path": "src/main/java/dukebot/command/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * List of commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum CommandList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ADD_CONTACT(\"add_contact\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ALIAS(\"alias\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    CONTACTS(\"contacts\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE_CONTACT(\"delete_contact\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    HELP(\"help\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESCHEDULE(\"reschedule\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESET(\"reset\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    TODO(\"todo\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String defaultCommand;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    CommandList(String defaultCommand) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.defaultCommand \u003d defaultCommand;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the default command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The default string which refers to the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getDefaultCommand() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return defaultCommand;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 37
    }
  },
  {
    "path": "src/main/java/dukebot/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.MiscUtils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to delete a task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr The input entered by user split by space"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DeleteCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DELETE_EMPTY);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!MiscUtils.isInteger(inpArr[1])) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int taskInd \u003d Integer.parseInt(inpArr[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task task \u003d taskList.deleteTask(taskInd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DELETE_OUT_OF_INDEX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithTask(LineNameWithTask.DELETE_SUCCESS, task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 59
    }
  },
  {
    "path": "src/main/java/dukebot/command/DeleteContactCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactDetail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithContact;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.MiscUtils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DeleteContactCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr The input entered by user split by space"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DeleteContactCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactList contactList \u003d appStorage.getContactList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DELETE_EMPTY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!MiscUtils.isInteger(inpArr[1])) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int taskInd \u003d Integer.parseInt(inpArr[1]) - 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactDetail contactDetail \u003d contactList.deleteTask(taskInd);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (contactDetail \u003d\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DELETE_OUT_OF_INDEX);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithContact(LineNameWithContact.DELETE_CONTACT_SUCCESS, contactDetail);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveContactList(contactList);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 56
    }
  },
  {
    "path": "src/main/java/dukebot/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.MiscUtils;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to set task as done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr The input entered by user split by space"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DoneCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DONE_EMPTY);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!MiscUtils.isInteger(inpArr[1])) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int taskInd \u003d Integer.parseInt(inpArr[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task doneTask \u003d taskList.getTask(taskInd);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (doneTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DEFAULT_OUT_OF_INDEX);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (doneTask.getDone()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DONE_ALREADY);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithTask(LineNameWithTask.DONE_SUCCESS, doneTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        doneTask.setDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 66
    }
  },
  {
    "path": "src/main/java/dukebot/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to exit the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(LineName.EXIT);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 23
    }
  },
  {
    "path": "src/main/java/dukebot/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to find a substring in a task\u0027s description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr  The input entered by user split by space"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public FindCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String toFind \u003d String.join(\" \", Arrays.copyOfRange(inpArr, 1, inpArr.length));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (toFind.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.FIND_EMPTY);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d taskList.findAll(toFind);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (tasksFound.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.FIND_FAIL);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(LineName.FIND_SUCCESS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayTasks(tasksFound);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 46
    }
  },
  {
    "path": "src/main/java/dukebot/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to list all tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.LIST_EMPTY);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(LineName.LIST_EXISTS);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayTasks(taskList.getTaskList());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 25
    }
  },
  {
    "path": "src/main/java/dukebot/command/ListContactCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ListContactCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ContactList contactList \u003d appStorage.getContactList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (contactList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.CONTACT_LIST_EMPTY);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(LineName.CONTACT_LIST_EXIST);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayContacts(contactList.getContactList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 21
    }
  },
  {
    "path": "src/main/java/dukebot/command/NewDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.DateTimeParse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to create a deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class NewDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr The input entered by user split by space"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public NewDeadlineCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int byInd \u003d Arrays.asList(inpArr).indexOf(\"/by\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (byInd \u003d\u003d inpArr.length - 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DEADLINE_EMPTY);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (byInd \u003c\u003d 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DEADLINE_EMPTY);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inpArr, 1, byInd));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String time \u003d String.join(\" \", Arrays.copyOfRange(inpArr, byInd + 1, inpArr.length));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime.now();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime parsedDate \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            parsedDate \u003d DateTimeParse.parseDate(time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DATE_TIME_PARSE_FAIL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task deadline \u003d new Deadline(description, parsedDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithTask(LineNameWithTask.NEW_TASK_SUCCESS, deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 66
    }
  },
  {
    "path": "src/main/java/dukebot/command/NewEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.DateTimeParse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to create a new event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class NewEventCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr  The input entered by user split by space"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public NewEventCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int atInd \u003d Arrays.asList(inpArr).indexOf(\"/at\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (atInd \u003d\u003d inpArr.length - 1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.EVENT_EMPTY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (atInd \u003c\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.EVENT_AT_MISSING);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inpArr, 1, atInd));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String time \u003d String.join(\" \", Arrays.copyOfRange(inpArr, atInd + 1, inpArr.length));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime parsedDate \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            parsedDate \u003d DateTimeParse.parseDate(time);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DATE_TIME_PARSE_FAIL);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task event \u003d new Event(description, parsedDate);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithTask(LineNameWithTask.NEW_TASK_SUCCESS, event);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 65
    }
  },
  {
    "path": "src/main/java/dukebot/command/NewTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to create a new todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class NewTodoCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String[] inpArr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr  The input entered by user split by space"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public NewTodoCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert inpArr !\u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(inpArr, 1, inpArr.length));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.TODO_EMPTY);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLineWithTask(LineNameWithTask.NEW_TASK_SUCCESS, task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 50
    }
  },
  {
    "path": "src/main/java/dukebot/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Class which contains the input parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private enum ParserState {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        NORMAL,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        CONFIRM_RESET_STORAGE;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final HashMap\u003cString, CommandList\u003e aliasMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private ParserState parserState \u003d ParserState.NORMAL;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Use default commands for parser."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        aliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (CommandList command: CommandList.values()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            aliasMap.put(command.getDefaultCommand(), command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Use saved aliases for parser."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param loadedAliasMap  Key is the default command, value is alias."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Parser(HashMap\u003cString, String\u003e loadedAliasMap) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert loadedAliasMap !\u003d null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        aliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (CommandList command: CommandList.values()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            String defaultValue \u003d command.getDefaultCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (loadedAliasMap.containsKey(defaultValue)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                aliasMap.put(loadedAliasMap.get(defaultValue), command);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                aliasMap.put(command.getDefaultCommand(), command);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Returns command object based on parser state."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param input  Command to parse."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Command to execute."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Command parse(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        switch (parserState) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case CONFIRM_RESET_STORAGE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return parseConfirmation(input, new ResetStorageCommand(), new UiOnlyCommand(LineName.RESET_STORAGE_FAIL));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case NORMAL:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // fallthrough"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Should never be default but just in case"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return parseNormal(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Get confirmation state."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param input  Command to parse."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Command to execute."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Command parseConfirmation(String input, Command commandToConfirm, Command commandIfFail) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        parserState \u003d ParserState.NORMAL;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (input.toLowerCase().equals(\"yes\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return commandToConfirm;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return commandIfFail;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Parser in NORMAL state."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param input  Command to parse."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Command to execute."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Command parseNormal(String input) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String[] inpArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String command \u003d inpArr[0].toLowerCase();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (aliasMap.containsKey(command)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            switch (aliasMap.get(command)) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case ADD_CONTACT:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new AddContactCommand(inpArr);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case CONTACTS:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new ListContactCommand();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case ALIAS:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new AliasCommand(inpArr, aliasMap);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new NewDeadlineCommand(inpArr);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new DeleteCommand(inpArr);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case DELETE_CONTACT:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new DeleteContactCommand(inpArr);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new DoneCommand(inpArr);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new NewEventCommand(inpArr);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new FindCommand(inpArr);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case HELP:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new UiOnlyCommand(LineName.HELP);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case RESCHEDULE:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new RescheduleCommand(inpArr);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case RESET:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                parserState \u003d ParserState.CONFIRM_RESET_STORAGE;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new UiOnlyCommand(LineName.RESET_STORAGE_INIT);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new NewTodoCommand(inpArr);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                // Should never happen as everything in aliasMap should be handled"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                assert false;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case \"\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new UiOnlyCommand(LineName.NO_INPUT);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case \"Duke\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case \"duke\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case \"Master\":"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            case \"master\":"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new UiOnlyCommand(LineName.SAY_DUKE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return new UiOnlyCommand(LineName.INVALID_COMMAND);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 142
    }
  },
  {
    "path": "src/main/java/dukebot/command/RescheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.DateTimeParse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.MiscUtils;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to reschedule a task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class RescheduleCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private String[] inpArr;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param inpArr The input entered by user split by space"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public RescheduleCommand(String[] inpArr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.inpArr \u003d inpArr;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d appStorage.getTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (inpArr.length \u003c\u003d 2) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.RESCHEDULE_EMPTY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!MiscUtils.isInteger(inpArr[1])) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.NOT_A_NUMBER);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int taskInd \u003d Integer.parseInt(inpArr[1]) - 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task task \u003d taskList.getTask(taskInd);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DEFAULT_OUT_OF_INDEX);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (task.getDateTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLineWithTask(LineNameWithTask.RESCHEDULE_BAD_TASK, task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String time \u003d String.join(\" \", Arrays.copyOfRange(inpArr, 2, inpArr.length));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            LocalDateTime parsedDate \u003d DateTimeParse.parseDate(time);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            task.setDateTime(parsedDate);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLineWithTask(LineNameWithTask.RESCHEDULE_SUCCESS, task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(LineName.DATE_TIME_PARSE_FAIL);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ui.sayLine(e.getErrorLineName());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 69
    }
  },
  {
    "path": "src/main/java/dukebot/command/ResetStorageCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command to reset storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ResetStorageCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertExecuteNotNull(appStorage, ui, storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        storage.clearStorage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(LineName.RESET_STORAGE_SUCCESS);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 23
    }
  },
  {
    "path": "src/main/java/dukebot/command/UiOnlyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Command output a line."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class UiOnlyCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private LineName toSay;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param toSay  The LineName to say."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public UiOnlyCommand(LineName toSay) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.toSay \u003d toSay;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void execute(AppStorage appStorage, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ui.sayLine(toSay);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 27
    }
  },
  {
    "path": "src/main/java/dukebot/contactlist/ContactDetail.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.contactlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ContactDetail implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private int phoneNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates a contact."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param name  Name of contact to add."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param phoneNumber Phone number of the contact."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ContactDetail(String name, int phoneNumber) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.phoneNumber \u003d phoneNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the contact\u0027s name."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Name of contact"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the contact\u0027s number."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Phone number of contact"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public int getPhoneNumber() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return phoneNumber;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 38
    }
  },
  {
    "path": "src/main/java/dukebot/contactlist/ContactList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.contactlist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class ContactList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private ArrayList\u003cContactDetail\u003e contactList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Creates a contact list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactList The contact list to use."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ContactList(ArrayList\u003cContactDetail\u003e contactList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The stored contact list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ArrayList\u003cContactDetail\u003e getContactList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.contactList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Adds ContactDetails to end of ContactList."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactDetail ContactDetails to add."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void add(ContactDetail contactDetail) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        contactList.add(contactDetail);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Returns size of ContactList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Size of ContactList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.contactList.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Deletes task at specified index."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactInd Index of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ContactDetail deleteTask(int contactInd) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (contactInd \u003e\u003d size() || contactInd \u003c 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ContactDetail contactDetail \u003d this.contactList.get(contactInd);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            this.contactList.remove(contactInd);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return contactDetail;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 58
    }
  },
  {
    "path": "src/main/java/dukebot/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Generic exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DukeException extends Throwable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final LineName errorLineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Error with LineName."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param errorLineName The LineName of the line with the error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DukeException(LineName errorLineName) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        super(\"Duke Error\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.errorLineName \u003d errorLineName;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the LineName passed to the Exception."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The LineName stored in this exception."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public LineName getErrorLineName() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return errorLineName;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 29
    }
  },
  {
    "path": "src/main/java/dukebot/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.setMinHeight(dialog.USE_PREF_SIZE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Creates DialogBox for user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param text Input line by user."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param img The user\u0027s image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The DialogBox."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Creates DialogBox for Duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param text output line."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param img The duke\u0027s image."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The DialogBox."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 76
    }
  },
  {
    "path": "src/main/java/dukebot/gui/DukeExpression.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum DukeExpression {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    HAPPY(\"duke_happy.png\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    BLUSH(\"duke_blush.png\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    SAD(\"duke_sad.png\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    SURPRISED(\"duke_surprised.png\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final Image dukeImage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DukeExpression(String fileName) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/\" + fileName));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the Image corresponding to the expression."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return An image representing Duke;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Image getDukeImage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return dukeImage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 25
    }
  },
  {
    "path": "src/main/java/dukebot/gui/DukeVoice.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.media.Media;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.media.MediaException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.media.MediaPlayer;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.net.URISyntaxException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Class to manage voice acting."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum DukeVoice {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ACTUALLY(\"02-actually\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    GOODBYE(\"02-goodbye\"),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    HELLO(\"02-hello\"),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    HEY(\"02-hey\"),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    WHAT_YOU_LIKE(\"02-is_this_what_you_like\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    LAUGHTER(\"02-laughter\"),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    THING_YOURE_INTO(\"02-oh_is_this_the_kinda_thing_youre_into\"),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    OKAY(\"02-okay\"),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    WHAT(\"02-what\"),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    NO_VOICE();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final Random generator \u003d new Random();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Media dukeSound;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DukeVoice() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSound \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DukeVoice(String fileName) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            String uri \u003d DukeVoice.class.getResource(\"/sound/\" + fileName + \".wav\").toURI().toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSound \u003d new Media(uri);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (URISyntaxException | MediaException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSound \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Randomise voice to play for more excitement."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param hasVoice Returns NO_VOICE if set to false."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dukeVoices Voices to use."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Voice to use."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static DukeVoice randomVoice(boolean hasVoice, DukeVoice... dukeVoices) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (hasVoice) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            int randomIndex \u003d generator.nextInt(dukeVoices.length + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (randomIndex \u003c dukeVoices.length) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return dukeVoices[randomIndex];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return NO_VOICE;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Plays corresponding voice."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void playVoice() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (dukeSound !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            new MediaPlayer(dukeSound).play();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 67
    }
  },
  {
    "path": "src/main/java/dukebot/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.BackgroundImage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.BackgroundPosition;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.BackgroundRepeat;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.BackgroundSize;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Controller for dukebot.gui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/user_default.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private Image backgroundImage \u003d new Image(getClass().getResourceAsStream(\"/images/heart_background.jpg\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Init the GUI."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        scrollPane.widthProperty().addListener((o) -\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Node vp \u003d scrollPane.lookup(\".viewport\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            vp.setStyle(\"-fx-background-color:transparent;\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        scrollPane.setBackground(new Background("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                new BackgroundImage(backgroundImage,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        BackgroundRepeat.REPEAT,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        BackgroundRepeat.REPEAT,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        BackgroundPosition.DEFAULT,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        new BackgroundSize(BackgroundSize.AUTO,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                                BackgroundSize.AUTO,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                                false,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                                false,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                                false,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                                true"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        ))));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Sets the Duke to use."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints message generated by UI."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void printCurrentMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String currentMessage \u003d duke.getUi().getGuiOutput();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                DialogBox.getDukeDialog(currentMessage, duke.getUi().getDukeExpression().getDukeImage())"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                DialogBox.getDukeDialog(response, duke.getUi().getDukeExpression().getDukeImage())"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        );"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 91
    }
  },
  {
    "path": "src/main/java/dukebot/storage/AppStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class AppStorage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private ContactList contactList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the main storage of the app."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param  taskList TaskList to store."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactList ContactList to store."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public AppStorage(TaskList taskList, ContactList contactList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert contactList !\u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.contactList \u003d contactList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets the contact list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The contact list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ContactList getContactList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return contactList;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 40
    }
  },
  {
    "path": "src/main/java/dukebot/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.command.CommandList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactDetail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.OutputStreamWriter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private boolean saveAlreadyFailed \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private String storageDirectory;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final String TASK_LIST_FILEPATH \u003d \"/task-list.data\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final String CONTACT_LIST_FILEPATH \u003d \"/contact-list.data\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final String ALIAS_FILEPATH \u003d \"/alias.data\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the Storage with default directory."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.storageDirectory \u003d \"./user-data\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the Storage with custom directory."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param storageDirectory Path to save file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Storage(String storageDirectory) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.storageDirectory \u003d storageDirectory;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Ensure that storageDirectory exists."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Whether storageDirectory exists."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private boolean mkDataDir() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        File directory \u003d new File(storageDirectory);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return directory.mkdir();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Deletes all data files."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void clearStorage() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (mkDataDir()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            String[] fileNames \u003d new String[]{TASK_LIST_FILEPATH, ALIAS_FILEPATH};"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            for (String fileName : fileNames) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                File file \u003d new File(storageDirectory + fileName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                // Nobody cares if delete fails as file might not exist in the first place."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                file.delete();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Saves data to drive."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param tasks The TaskList to save."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If save fails for the first time."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void saveTaskList(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!mkDataDir() \u0026\u0026 !saveAlreadyFailed) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            saveAlreadyFailed \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            throw new DukeException(LineName.SAVE_FAIL);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            File file \u003d new File(storageDirectory + TASK_LIST_FILEPATH);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Task[] taskArr \u003d taskList.toArray(new Task[0]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.writeObject(taskArr);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (!saveAlreadyFailed) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                saveAlreadyFailed \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                throw new DukeException(LineName.SAVE_FAIL);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Loads data from drive."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The saved TaskList."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If no data is found."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTaskArrayList() throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        File file \u003d new File(storageDirectory + TASK_LIST_FILEPATH);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (file.isFile()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                FileInputStream readData \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                Object obj \u003d readStream.readObject();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                if (obj instanceof Task[]) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    return new ArrayList\u003c\u003e(Arrays.asList((Task[]) obj));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                // e.printStackTrace();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        throw new DukeException(LineName.LOAD_FAIL);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Saves contacts to drive."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactList The ContactList to save."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If save fails for the first time."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void saveContactList(ContactList contactList) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ArrayList\u003cContactDetail\u003e contactDetails \u003d contactList.getContactList();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!mkDataDir() \u0026\u0026 !saveAlreadyFailed) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            saveAlreadyFailed \u003d true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            throw new DukeException(LineName.SAVE_FAIL);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            File file \u003d new File(storageDirectory + CONTACT_LIST_FILEPATH);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ContactDetail[] contactArr \u003d contactDetails.toArray(new ContactDetail[0]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.writeObject(contactArr);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (!saveAlreadyFailed) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                saveAlreadyFailed \u003d true;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                throw new DukeException(LineName.SAVE_FAIL);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Loads contacts from drive."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The saved ContactArrayList."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If no data is found."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ArrayList\u003cContactDetail\u003e loadContactArrayList() throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        File file \u003d new File(storageDirectory + CONTACT_LIST_FILEPATH);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (!file.isFile()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            throw new DukeException(LineName.LOAD_FAIL);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FileInputStream readData \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Object obj \u003d readStream.readObject();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (obj instanceof ContactDetail[]) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return new ArrayList\u003c\u003e(Arrays.asList((ContactDetail[]) obj));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        throw new DukeException(LineName.LOAD_FAIL);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Saves data to drive."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param aliasMap The aliasMap to save."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If save fails for the first time."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void saveAlias(HashMap\u003cString, CommandList\u003e aliasMap) throws DukeException {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            mkDataDir();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            File file \u003d new File(storageDirectory + ALIAS_FILEPATH);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(file);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            OutputStreamWriter writeStream \u003d new OutputStreamWriter(writeData);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            for (String alias : aliasMap.keySet()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                String command \u003d aliasMap.get(alias).getDefaultCommand();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                writeStream.write(command + \" \" + alias + \"\\n\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // e.printStackTrace();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (!saveAlreadyFailed) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                saveAlreadyFailed \u003d true;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                throw new DukeException(LineName.SAVE_FAIL);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Loads aliasMap from drive."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The saved aliasMap with key default command and value alias."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DukeException If no data is found."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public HashMap\u003cString, String\u003e loadAlias() throws DukeException {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        File file \u003d new File(storageDirectory + ALIAS_FILEPATH);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (file.isFile()) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                FileReader fr \u003d new FileReader(file);   //reads the file"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(fr);  //creates a buffering character input stream"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                String line \u003d br.readLine();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                HashMap\u003cString, String\u003e aliasMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                while (line !\u003d null) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    String[] lineArr \u003d line.split(\" \");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    if (lineArr.length \u003e\u003d 2) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        aliasMap.put(lineArr[0], lineArr[1]);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    line \u003d br.readLine();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                fr.close();    //closes the stream and release the resources"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return aliasMap;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        throw new DukeException(LineName.LOAD_FAIL);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 237
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Represents a Deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates a new Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param description  The name of the Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dateTime  Due date of Deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Deadline(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        super(description, TaskType.DEADLINE, dateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return (this.description + \" (by: \" + this.dateTimeToString() + \")\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 24
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Represents an Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates a new Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param description  The name of the Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dateTime  Start time of Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Event(String description, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        super(description, TaskType.Event, dateTime);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return (this.description + \" (at: \" + this.dateTimeToString() + \")\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 24
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Abstract class for tasks to inherit from."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final DateTimeFormatter DEFAULT_FORMAT_NO_TIME \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final DateTimeFormatter DEFAULT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    protected final TaskType taskType;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    protected LocalDateTime dateTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    protected Task(String description, TaskType taskType, LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert description !\u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert !description.equals(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert taskType !\u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Sets dateTime of task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dateTime DateTime to set."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void setDateTime(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (dateTime !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Sets task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Get done status of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Done status of task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets name of task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Get type of task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return String of taskType"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.taskType.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets datetime associated with task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Time of task or null if it does not have a time."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.dateTime;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Formats the internal datetime to display in list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return DateTime string to be displayed."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String dateTimeToString() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // TODO: think of a way to use custom Datetime.now() for better testing."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (dateTime \u003d\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (dateTime.toLocalDate().equals(LocalDateTime.now().toLocalDate())) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return \"Today \" + dateTime.toLocalTime().toString();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (dateTime.compareTo(LocalDateTime.now()) \u003c 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return this.dateTime.format(DEFAULT_FORMAT) + \" [Over]\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else if (dateTime.getHour() \u003d\u003d 0 \u0026\u0026 dateTime.getMinute() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return this.dateTime.format(DEFAULT_FORMAT_NO_TIME);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return this.dateTime.format(DEFAULT_FORMAT);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return (description);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (obj instanceof Task) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Task task \u003d (Task) obj;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return taskType.equals(task.taskType)"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    \u0026\u0026 description.equals(task.description)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    \u0026\u0026 Objects.equals(dateTime, task.dateTime);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 118
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Represents the task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates a new TaskList."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param taskList The task list to use."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert taskList !\u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Returns size of TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Size of TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets task at specified index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param taskInd Index of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Task getTask(int taskInd) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (taskInd \u003e\u003d taskList.size() || taskInd \u003c 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.taskList.get(taskInd);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets TaskList."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The stored task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Adds Task to end of TaskList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param task Task to add."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assert task !\u003d null;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Deletes task at specified index."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param taskInd Index of task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Task deleteTask(int taskInd) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (taskInd \u003e\u003d size() || taskInd \u003c 0) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            Task task \u003d this.taskList.get(taskInd);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            this.taskList.remove(taskInd);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Finds all Tasks whose names contain toFind."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param toFind Task to find."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return ArrayList of tasks found."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public ArrayList\u003cTask\u003e findAll(String toFind) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (task.getDescription().contains(toFind)) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                tasksFound.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return tasksFound;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 92
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The task types used."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    TODO(\"Todo\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DEADLINE(\"Deadline\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    Event(\"Event\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    TaskType(String taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return (this.taskType);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 20
    }
  },
  {
    "path": "src/main/java/dukebot/tasklist/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Represents a Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates a new Todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param description  The name of the Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        super(description, TaskType.TODO,null);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 16
    }
  },
  {
    "path": "src/main/java/dukebot/ui/LineName.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Name of lines to say with Ui.sayLine."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The first words are usually the command in which the command appears in."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The last part is usually the context in which the line is called."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum LineName {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ADD_CONTACT_EMPTY,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ALIAS_ALREADY_EXISTS,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ALIAS_COMMAND_FAIL,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ALIAS_DOES_NOT_EXIST,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    CONTACT_LIST_EMPTY,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    CONTACT_LIST_EXIST,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DATE_TIME_PARSE_FAIL,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DEADLINE_BY_MISSING,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DEADLINE_EMPTY,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DEFAULT_OUT_OF_INDEX,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE_EMPTY,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE_OUT_OF_INDEX,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DONE_ALREADY,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DONE_EMPTY,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ERROR_PLACEHOLDER,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    EVENT_AT_MISSING,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    EVENT_EMPTY,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    FIND_EMPTY,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    FIND_FAIL,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    FIND_SUCCESS,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    HELP,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    LIST_EMPTY,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    LIST_EXISTS,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    LOAD_FAIL,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    NOT_A_NUMBER,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    NO_INPUT,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESCHEDULE_EMPTY,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESET_STORAGE_INIT,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESET_STORAGE_SUCCESS,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESET_STORAGE_FAIL,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    SAVE_FAIL,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    SAY_DUKE,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    TODO_EMPTY;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 44
    }
  },
  {
    "path": "src/main/java/dukebot/ui/LineNameWithContact.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Name of lines to say with Ui.sayLineWithContact."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The first words are usually the command in which the command appears in."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The last part is usually the context in which the line is called."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum LineNameWithContact {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ADD_CONTACT_SUCCESS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ERROR_PLACEHOLDER,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE_CONTACT_SUCCESS;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 12
    }
  },
  {
    "path": "src/main/java/dukebot/ui/LineNameWithTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Name of lines to say, to be used with ui.sayLineWithTask."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The first word is usually the command in which the command appears in."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * The second is usually the context in which the line is called."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public enum LineNameWithTask {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DELETE_SUCCESS,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    DONE_SUCCESS,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    ERROR_PLACEHOLDER,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    NEW_TASK_SUCCESS,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESCHEDULE_BAD_TASK,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    RESCHEDULE_SUCCESS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 15
    }
  },
  {
    "path": "src/main/java/dukebot/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactDetail;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.gui.DukeExpression;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.gui.DukeVoice;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Handles output to use."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static final String LOGO \u003d \" ____, __   _, __  _, ____,\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            + \"(-|  \\\\(-|  |  (-|_/  (-|_, \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            + \" _|__/  |__|_, _| \\\\_, _|__,\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            + \"(             (      (    \\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private final boolean hasGui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private boolean sayFirst \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private StringBuilder guiOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private DukeExpression dukeExpression \u003d DukeExpression.HAPPY;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private boolean hasVoice \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private DukeVoice dukeVoice \u003d DukeVoice.NO_VOICE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the Ui with GUI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Ui(boolean hasGui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        this.hasGui \u003d hasGui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Generates the Ui."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        hasGui \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        System.out.println(\"\\nYahallo! Duke\u0027s name is \\n\" + LOGO);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"Duke\u0027s so glad Master used Duke!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"What will Master do to Duke today?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints welcome message for GUI."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void showWelcomeGui() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeVoice \u003d DukeVoice.HELLO;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"Yahallo! Duke\u0027s name is \\n\" + LOGO);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"Duke\u0027s so glad Master used Duke!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"What will Master do to Duke today?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prompts and reads the input given."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The read input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        sayFirst \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        System.out.println(\"\\nMaster: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        String inp \u003d sc.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return inp;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints lines based on lineName."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param lineName Line to say."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void sayLine(LineName lineName) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeExpression \u003d DukeExpression.HAPPY;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeVoice \u003d DukeVoice.WHAT;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        switch (lineName) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ADD_CONTACT_EMPTY:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY, DukeVoice.ACTUALLY);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t understand the contact which Master wishes to add...\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"To add a new contact, use:\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"add_contact \u003cname\u003e number\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ALIAS_ALREADY_EXISTS:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY, DukeVoice.ACTUALLY);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"That command already exists... Duke can\u0027t replace it...\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ALIAS_COMMAND_FAIL:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.WHAT);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t know what should replace what...\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"The command for new alias is: alias \u003cold\u003e \u003cnew\u003e\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ALIAS_DOES_NOT_EXIST:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY, DukeVoice.WHAT);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Huh? Duke doesn\u0027t know what command Master is talking about...\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case HELP:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY, DukeVoice.WHAT_YOU_LIKE);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master wants to know more about Duke?\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Exposing myself to master... Duke\u0027s so embarrassed...\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"But if it\u0027s for Master... Duke\u0027ll do it!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke\u0027s precious secrets:\\n\\n\""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"alias \u003cold\u003e \u003cnew\u003e\\n-- Changes the name of a command.\\n\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"todo \u003cname\u003e\\n-- Adds a todo to your task list.\\n\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"deadline \u003cname\u003e /by \u003ctime\u003e\\n-- Adds a deadline to your task list.\\n\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"event \u003cname\u003e /at \u003ctime\u003e\\n -- Adds a event to your task list.\\n\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"list\\n-- Displays your task list.\\n\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"find \u003cquery\u003e\\n-- Finds a task which has \u003cquery\u003e as a substring of the task\u0027s name.\\n\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"done \u003ctask index\u003e\\n-- Marks the task as done.\\n\\n\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"delete \u003ctask index\u003e\\n-- Deletes the task.\\n\\n\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"reschedule \u003ctask index\u003e \u003ctime\u003e\\n-- Reschedules the task.\\n\\n\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"add_contact \u003cname\u003e \u003cnumber\u003e\\n-- Adds a new contact.\\n\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"contacts \\n-- Displays your contact list.\\n\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"delete_contact \u003ctask index\u003e\\n-- Deletes the contact.\\n\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"bye\\n-- Exits this application.\\n\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"reset\\n-- The forbidden Command. Please never use it... Duke\u0027ll forget everything.\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            );"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case NO_INPUT:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.WHAT, DukeVoice.HEY);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke can\u0027t hear anything... Is Master all right?\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case SAY_DUKE:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case CONTACT_LIST_EMPTY:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t mind that Master doesn\u0027t have any friends...\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke\u0027ll be with Master forever...\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case CONTACT_LIST_EXIST:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SURPRISED;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.OKAY;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master already has Duke right? Master doesn\u0027t need anyone else!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"But if Master really needs it... Duke cant deny it...\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case LIST_EMPTY:"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Huh there are no tasks! Master is so forgetful...\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case LIST_EXISTS:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SURPRISED;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master already forgotten what Master wanted to do?!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke has no choice but to remind Master then!\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"These are the tasks which Master forgot:\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DEFAULT_OUT_OF_INDEX:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke can\u0027t seem to recall that item...\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DONE_EMPTY:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.WHAT, DukeVoice.HEY);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t think Master has done anything yet...\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DONE_ALREADY:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SURPRISED;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Didn\u0027t Master already do that?\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case NOT_A_NUMBER:"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.WHAT, DukeVoice.THING_YOURE_INTO);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Stop teasing Duke... Even Duke knows that isn\u0027t a number...\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DELETE_EMPTY:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master, please don\u0027t delete Duke...\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DELETE_OUT_OF_INDEX:"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"That item already doesn\u0027t exist in Duke\u0027s memory...\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case TODO_EMPTY:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t see any description of the todo...\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DEADLINE_EMPTY:"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t see any deadline...\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DATE_TIME_PARSE_FAIL:"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.THING_YOURE_INTO, DukeVoice.HEY);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master gave a date that Duke cannot read...\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DEADLINE_BY_MISSING:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master, use \u0027/by\u0027 to indicate deadline, Duke wouldn\u0027t know otherwise...\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case EVENT_EMPTY:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t see any start time...\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case EVENT_AT_MISSING:"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master, use \u0027/at\u0027 to indicate starting time, Duke wouldn\u0027t know otherwise...\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case FIND_EMPTY:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"There\u0027s nothing for Duke to find...\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case FIND_FAIL:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.ACTUALLY, DukeVoice.HEY);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"There isn\u0027t any tasks which matches Master\u0027s queries.\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case FIND_SUCCESS:"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.LAUGHTER, DukeVoice.HEY);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master! Duke found all these tasks!\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.WHAT, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke doesn\u0027t understand Master...\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case EXIT:"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.GOODBYE;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Is Master leaving already?\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Please come back and play with Duke soon...\");"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case SAVE_FAIL:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke feels dizzy...\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"It seems that Duke will forget everything when Master leaves...\");"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case LOAD_FAIL:"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Yahallo! Duke\u0027s name is \\n\" + LOGO);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Is this the first time Master has used Duke?\\nType \u0027help\u0027 for the list of commands.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESCHEDULE_EMPTY:"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.WHAT, DukeVoice.HEY);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"What exactly does Master want Duke to reschedule?\");"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master has to say the magic command:\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Reschedule \u003ctask index\u003e \u003ctime\u003e\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESET_STORAGE_INIT:"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Master wants to wipe Duke\u0027s memories? Please don\u0027t say yes...\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESET_STORAGE_FAIL:"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.LAUGHTER;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke\u0027ll pretend Master didn\u0027t say that.\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESET_STORAGE_SUCCESS:"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.GOODBYE;"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.SAD;"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"It was nice knowing Master... Duke\u0027ll go somewhere far away now...\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ERROR_PLACEHOLDER:"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"There is an unexpected error :(\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints array of tasks."
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param tasks The array of tasks to print."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void sayTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(i + \". \""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \"[\" + task.getType() + \"] \""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + task"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + (task.getDone() ? \" [Done!]\" : \"\")"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            );"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            i +\u003d 1;"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints array of tasks."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contactList The array of contacts to print."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void sayContacts(ArrayList\u003cContactDetail\u003e contactList) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (ContactDetail contact : contactList) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(i + \". \""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + contact.getName()"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    + \" [\" + contact.getPhoneNumber() + \"] \""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            );"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            i +\u003d 1;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints message based on LineName with task information."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param lineName Line to say."
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param task Task to use."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void sayLineWithTask(LineNameWithTask lineName, Task task) {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        switch (lineName) {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DELETE_SUCCESS:"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.THING_YOURE_INTO,"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    DukeVoice.WHAT_YOU_LIKE, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"For Master, Duke can forget anything, even the:\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"[\" + task.getType() + \"] \" + task + (task.getDone() ? \" [Done!]\" : \"\"));"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DONE_SUCCESS:"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.LAUGHTER, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.HAPPY;"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"So Master finally completed \" + task + \"?\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke\u0027s really proud of Master!\");"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case NEW_TASK_SUCCESS:"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.THING_YOURE_INTO,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    DukeVoice.WHAT_YOU_LIKE, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"So Master has \" + task.getType() + \":\\n\" + task + \"...\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESCHEDULE_SUCCESS:"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.LAUGHTER, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.HAPPY;"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke has rescheduled task:\\n\" + task.getDescription());"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"to be at:\\n\" + task.dateTimeToString());"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Try not to forget it Master!\");"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case RESCHEDULE_BAD_TASK:"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.HEY);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Is Master teasing Duke?\");"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"The task: \" + task.getDescription());"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"is a: \" + task.getType());"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"which does not have a scheduled time.\");"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ERROR_PLACEHOLDER:"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"There is an unexpected error :(\");"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints message based on LineName with contact information."
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param lineName Line to say."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param contact Contact to use."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void sayLineWithContact(LineNameWithContact lineName, ContactDetail contact) {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        switch (lineName) {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case DELETE_CONTACT_SUCCESS:"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.THING_YOURE_INTO,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    DukeVoice.WHAT_YOU_LIKE, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"So Master had a falling out with \" + contact.getName() + \"?\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Will Master spend more time with Duke now?\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ADD_CONTACT_SUCCESS:"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.LAUGHTER, DukeVoice.OKAY);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeExpression \u003d DukeExpression.HAPPY;"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"Duke has successfully added:\");"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(contact.getName());"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"with the number:\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(Integer.toString(contact.getPhoneNumber()));"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"into the contact list\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case ERROR_PLACEHOLDER:"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // Purely for testing, should never be called in deployment"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            dukeSays(\"There is an unexpected error :(\");"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Prints task successfully deleted message."
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void aliasSuccess(String oldAlias, String newAlias) {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeVoice \u003d DukeVoice.randomVoice(hasVoice, DukeVoice.THING_YOURE_INTO,"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                DukeVoice.WHAT_YOU_LIKE, DukeVoice.LAUGHTER);"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeExpression \u003d DukeExpression.BLUSH;"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dukeSays(\"Duke has successfully changed the name of \u003c\" + oldAlias + \"\u003e into \u003c\" + newAlias + \"\u003e!\");"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Formats and prints the string input."
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param line Line to print."
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private void dukeSays(String line) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            guiOutput.append(line);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            guiOutput.append(\"\\n\");"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (this.sayFirst) {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                System.out.print(\"Duke: \");"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                this.sayFirst \u003d false;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                System.out.print(\"      \");"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Resets text output."
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public void resetGuiOutput() {"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            guiOutput \u003d new StringBuilder();"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets text output for GUI."
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public String getGuiOutput() {"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (hasGui) {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return guiOutput.toString();"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Gets Duke\u0027s expression."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DukeExpression getDukeExpression() {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return dukeExpression;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Get\u0027s Duke\u0027s voice."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public DukeVoice getDukeVoice() {"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (hasVoice) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return dukeVoice;"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return DukeVoice.NO_VOICE;"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 473
    }
  },
  {
    "path": "src/main/java/dukebot/util/DateTimeParse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeFormatterBuilder;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.temporal.ChronoField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Class containing DateTime parser."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class DateTimeParse {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static String[] dateTimeRegexps \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{4}/\\\\d{1,2}/\\\\d{1,2}$\", // yyyy/M/d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\", // d/M/yyyy"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{1,2}/\\\\d{1,2}$\", // d/M"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4} \\\\d{4}$\", // d/M/yyyy HHmm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{1,2}/\\\\d{1,2} \\\\d{4}$\", // d/M HHmm"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{4}$\", // HHmm"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \"^\\\\d{4}/\\\\d{1,2}/\\\\d{1,2} \\\\d{4}$\" // yyyy/M/d HHmm"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    };"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    private static DateTimeFormatter getDateTimeFormatter(int index, LocalDateTime defaultLocalDateTime) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        switch (index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .appendPattern(\"yyyy/M/d\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .appendPattern(\"d/M/yyyy\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 2:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .appendPattern(\"d/M\")"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.YEAR, defaultLocalDateTime.getYear())"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 3:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 4:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .appendPattern(\"d/M HHmm\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.YEAR, defaultLocalDateTime.getYear())"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 5:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return new DateTimeFormatterBuilder()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .appendPattern(\"HHmm\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.DAY_OF_MONTH, defaultLocalDateTime.getDayOfMonth())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.MONTH_OF_YEAR, defaultLocalDateTime.getMonthValue())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .parseDefaulting(ChronoField.YEAR, defaultLocalDateTime.getYear())"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    .toFormatter();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        case 6:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            // default should never be triggered but just in case."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Parse the input string as a LocalDateTime if possible."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dateTime String to be parsed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param localDateTime Default date to use."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The parsed string as a LocalDateTime."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DateTimeParseException if string unable to be parsed."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static LocalDateTime parseDateWithCustomDateTime(String dateTime, LocalDateTime localDateTime)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            throws DateTimeParseException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dateTime \u003d dateTime.replaceAll(\"[\\\\\\\\/\\\\-]+\", \"/\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        dateTime \u003d dateTime.replaceAll(\":\", \"\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (int i \u003d 0; i \u003c dateTimeRegexps.length; i++) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (dateTime.matches(dateTimeRegexps[i])) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    return LocalDateTime.parse(dateTime, getDateTimeFormatter(i, localDateTime));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    // There\u0027s a chance that it passes regex but is still invalid date."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    // System.out.println(e);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // This throws a DateTimeParseException"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Parse the input string as a LocalDateTime if possible."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param dateTime String to be parsed."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return The parsed string as a LocalDateTime."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @throws DateTimeParseException if string unable to be parsed."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static LocalDateTime parseDate(String dateTime) throws DateTimeParseException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return parseDateWithCustomDateTime(dateTime, LocalDateTime.now());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 105
    }
  },
  {
    "path": "src/main/java/dukebot/util/MiscUtils.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": " * Class containing static misc utilities."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class MiscUtils {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Checks if a string is a valid integer."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * Source:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * stackoverflow.com/questions/237159/whats-the-best-way-to-check-if-a-string-represents-an-integer-in-java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @param str String to check."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     * @return Whether the string can be parsed as integer safely."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    public static boolean isInteger(String str) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (str \u003d\u003d null) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int length \u003d str.length();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (length \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        if (str.charAt(0) \u003d\u003d \u0027-\u0027) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            i \u003d 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        for (; i \u003c length; i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            char c \u003d str.charAt(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            if (c \u003c \u00270\u0027 || c \u003e \u00279\u0027) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 41
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" pickOnBounds\u003d\"false\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: black; -fx-border-width: 0px 0px 1px 0px;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      \u003cVBox\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            \u003cHBox prefWidth\u003d\"271.0\" style\u003d\"-fx-border-radius: 25px; -fx-background-color: white; -fx-padding: 20px;\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                     \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                        \u003cFont size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                     \u003c/font\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                  \u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            \u003c/HBox\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      \u003c/VBox\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"130.0\" fitWidth\u003d\"120.0\" pickOnBounds\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gerhean": 30
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"dukebot.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      \u003cHBox layoutY\u003d\"557.4000244140625\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "         \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "              \u003cTextField fx:id\u003d\"userInput\" maxHeight\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "              \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "         \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      \u003c/HBox\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gerhean": 25
    }
  },
  {
    "path": "src/test/java/dukebot/command/DateTimeParseTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.util.DateTimeParse;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "class DateTimeParseTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void parseDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime testTime \u003d LocalDateTime.of(2020,1,2,0,0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime now \u003d LocalDateTime.now();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // yyyy/M/d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(testTime, DateTimeParse.parseDate(\"2020-01-2\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // d/M/yyyy"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(testTime, DateTimeParse.parseDate(\"02/1/2020\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 22
    }
  },
  {
    "path": "src/test/java/dukebot/command/NewTodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.contactlist.ContactList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.AppStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.LineNameWithTask;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.powermock.api.mockito.PowerMockito;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.mockito.Mockito.mock;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.mockito.Mockito.verify;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.mockito.Mockito.verifyNoMoreInteractions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.mockito.Mockito.verifyZeroInteractions;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "class NewTodoCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void execute_inpArrNoTodoDescription_uiSayLineTodoEmpty() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskListMock \u003d mock(TaskList.class);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        AppStorage appStorage \u003d new AppStorage(taskListMock, mock(ContactList.class));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Ui uiMock \u003d mock(Ui.class);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Storage storageMock \u003d mock(Storage.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        NewTodoCommand newTodoCommand \u003d new NewTodoCommand(new String[]{\"todo\"});"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        newTodoCommand.execute(appStorage, uiMock, storageMock);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verify(uiMock).sayLine(LineName.TODO_EMPTY);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyNoMoreInteractions(uiMock);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyZeroInteractions(taskListMock);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyZeroInteractions(storageMock);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void execute_TodoHasDescription_TodoAddedToTaskListStorageCalledUiCalled() throws Exception, DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskListMock \u003d mock(TaskList.class);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        AppStorage appStorage \u003d new AppStorage(taskListMock, mock(ContactList.class));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Ui uiMock \u003d mock(Ui.class);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Storage storageMock \u003d mock(Storage.class);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Todo testTodo \u003d new Todo(\"test test2\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        NewTodoCommand newTodoCommand \u003d new NewTodoCommand(new String[]{\"todo\", \"test\", \"test2\"});"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        newTodoCommand.execute(appStorage, uiMock, storageMock);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        PowerMockito.whenNew(Todo.class).withArguments(\"test test2\").thenReturn(testTodo);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verify(taskListMock).addTask(testTodo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verify(storageMock).saveTaskList(taskListMock);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verify(uiMock).sayLineWithTask(LineNameWithTask.NEW_TASK_SUCCESS, testTodo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyNoMoreInteractions(uiMock);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyNoMoreInteractions(taskListMock);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        verifyNoMoreInteractions(storageMock);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 60
    }
  },
  {
    "path": "src/test/java/dukebot/storage/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import dukebot.tasklist.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void testListSavedIsListLoaded() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Storage storage \u003d new Storage(\"./testing-data\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime testTime \u003d LocalDateTime.of(2020,1,2,0,0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        ArrayList\u003cTask\u003e taskArrayList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        TaskList taskList \u003d new TaskList(taskArrayList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(new Todo(\"test todo\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(new Deadline(\"test deadline\", testTime));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        taskList.addTask(new Event(\"test event\", testTime));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            storage.saveTaskList(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assertEquals(taskArrayList, storage.loadTaskArrayList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "            assert false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 34
    }
  },
  {
    "path": "src/test/java/dukebot/tasklist/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void testEvent() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // Test if getters and setters are working properly"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        LocalDateTime testTime \u003d LocalDateTime.of(2020,1,2,3,4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task task \u003d new Event(\"test\", testTime);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(\"Event\", task.getType());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // assertEquals(\"\", task.dateTimeToString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(\"test\" + \" (at: \" + task.dateTimeToString() + \")\", task.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertFalse(task.getDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertTrue(task.getDone());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 26
    }
  },
  {
    "path": "src/test/java/dukebot/tasklist/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "package dukebot.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    void testTodo() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        // Test if getters and setters are working properly"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        Task task \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(\"Todo\", task.getType());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(\"\", task.dateTimeToString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertEquals(\"test\", task.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertFalse(task.getDone());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "        assertTrue(task.getDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gerhean": 23
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Hi hi I\u0027m "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "*******   **     ** **   ** ********"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**////** /**    /**/**  ** /**/////"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**    /**/**    /**/** **  /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**    /**/**    /**/****   /*******"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**    /**/**    /**/**/**  /**////"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/**    ** /**    /**/**//** /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "/*******  //******* /** //**/********"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": "///////    ///////  //   // //////// "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: Master! I\u0027m so glad you used me!"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      What will you do today?"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: So Master has Todo: a..."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: So Master has Deadline: b (by: q)..."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: So Master has Event: c (at: w)..."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: Master already forgotten what Master wanted to do?!"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      Duke has no choice but to remind Master then!"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      These are the tasks which Master forgot:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      1. a [Todo]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      2. b (by: q) [Deadline]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      3. c (at: w) [Event]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: So Master finally completed a?"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      Duke\u0027s really proud of Master!"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: So Master finally completed c (at: w)?"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      Duke\u0027s really proud of Master!"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: Master already forgotten what Master wanted to do?!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      Duke has no choice but to remind Master then!"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      These are the tasks which Master forgot:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      1. a [Todo] [Done!]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      2. b (by: q) [Deadline]"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      3. c (at: w) [Event] [Done!]"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Master: "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gerhean"
        },
        "content": "Duke: Are you leaving already?"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gerhean"
        },
        "content": "      Please come back and play with Duke soon..."
      }
    ],
    "authorContributionMap": {
      "gerhean": 58
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "todo a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": "deadline b /by q"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "event c /at w"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gerhean": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gerhean"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM added stuff to compile all"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gerhean"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gerhean"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gerhean"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gerhean"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gerhean"
        },
        "content": ")"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gerhean"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gerhean"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gerhean"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gerhean"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gerhean": 27
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\cs2103\\duke\\Deadline.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\cs2103\\duke\\Event.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\cs2103\\duke\\InvalidTaskException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\cs2103\\duke\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gerhean"
        },
        "content": "C:\\personalStuffs\\schoolStuffs\\2020sem1\\cs2103t\\duke\\src\\main\\java\\cs2103\\duke\\Todo.java"
      }
    ],
    "authorContributionMap": {
      "gerhean": 6
    }
  }
]
