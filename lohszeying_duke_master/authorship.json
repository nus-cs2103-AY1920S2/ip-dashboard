[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "lohszeying": 1,
      "-": 38
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 36,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    DONE, LIST, TODO, DEADLINE, EVENT, DELETE, FIND, DONTUNDERSTAND, ENTERCOMMAND;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String dateAsString \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    LocalDate d;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String statement \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Deadline(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] tmp \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        statement \u003d tmp[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dateAsString \u003d dateAsString + tmp[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            d \u003d LocalDate.parse(dateAsString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"D \" + super.getStatusInNumber() + \" \" + super.description + \" /\" + by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String toString() throws NullPointerException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String str \u003d \"[D]\" + super.toString() + \" (\" + statement + \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            str \u003d str + d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            str \u003d \"[D]\" + super.toString() + \" (\" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 42
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Duke is the main class of the Duke chatbot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private boolean isGoodbye \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            //Load from storage"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String run(String input) throws IOException, DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String fullCommand \u003d input;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String newString \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        int num;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            storage.writeData(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            isGoodbye \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return ui.goodbye();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            Command cmd \u003d parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            newString \u003d \"\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            desc \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            by \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            switch (cmd) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    //return \"The list is empty.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    String tmpList \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.getDukeList().size(); i++) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        tmpList \u003d tmpList + (i + 1) + \".\" + tasks.getDukeList().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    return tmpList;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                num \u003d parser.parseNum(fullCommand, tasks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                assert num \u003c\u003d -3 : \"Unknown error has occurred.\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (num \u003e 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (num \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"unable to mark done\", num);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    tasks.markDone(num);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    return ui.printMarkDone(tasks, num);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"unable to mark done\", num);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    } else if (num \u003d\u003d -1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"done\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"done argument too much\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                num \u003d parser.parseNum(fullCommand, tasks);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                assert num \u003c\u003d -3 : \"Unknown error has occurred.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (num \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (num \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"unable to delete from list\", num);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    Task taskToRemove \u003d tasks.getDukeList().get(num - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    tasks.removeTask(num);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    return ui.printTaskRemoved(taskToRemove, num, tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"unable to delete from list\", num);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    } else if (num \u003d\u003d -1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"delete\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        throw new DukeException(\"delete argument not found\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String tmp \u003d parser.parseDescription(fullCommand);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (tmp.equals(\"-1Error:0b9d4e\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                t \u003d new ToDo(tmp);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return ui.printTaskAdded(tasks, t);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                desc \u003d parser.parseDescOfEventDeadline(fullCommand);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (desc.equals(\"-1Error:21006a\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"event\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                by \u003d parser.parseBy(fullCommand);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (by.equals(\"-2error:21f3ad\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"event\", \"\", \"no slash\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                t \u003d new Event(desc, by);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return ui.printTaskAdded(tasks, t);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                desc \u003d parser.parseDescOfEventDeadline(fullCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (desc.equals(\"-1Error:21006a\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"deadline\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                by \u003d parser.parseBy(fullCommand);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (by.equals(\"-2error:21f3ad\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"deadline\", \"\", \"no slash\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                t \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                tasks.addTask(t);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return ui.printTaskAdded(tasks, t);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String find \u003d parser.parseDescription(fullCommand);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (find.equals(\"-1Error:0b9d4e\")) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    throw new DukeException(\"find\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String taskL \u003d \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    Task cur \u003d tasks.getDukeList().get(i);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (cur.getDescription().contains(find)) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        taskL \u003d taskL + (i+1) + \".\" + tasks.getDukeList().get(i) + \"\\n\";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return ui.printMatchingTask(taskL.trim(), find);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            case ENTERCOMMAND:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                throw new DukeException(\"enter command\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                throw new DukeException(\"Don\u0027t understand\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public boolean toClose() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (isGoodbye) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "lohszeying": 174,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * DukeException class handles the exception specific to Duke chatbot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String tmp \u003d \"\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public int num \u003d 0;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String tmp2 \u003d \"\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String tmp3 \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public DukeException(String tmp) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(tmp);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.tmp \u003d tmp;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public DukeException(String tmp, int num) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(tmp);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.tmp \u003d tmp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.num \u003d num;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public DukeException(String tmp, String tmp2, String tmp3) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(tmp);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.tmp \u003d tmp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.tmp2 \u003d tmp2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.tmp3 \u003d tmp3;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints out the exception."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return String of the exception."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //Argument of delete is not 1 (total of 2)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (tmp.equals(\"delete argument not found\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Please provide a valid number to delete.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp.equals(\"done argument too much\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Please only provide one argument to mark as done.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //If the bot does not understand the command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp.equals(\"Don\u0027t understand\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Sumimasen, I can\u0027t understand what chu talking about. Try again?\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp.equals(\"unable to delete from list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Unable to delete \" + num + \" from the task. Please try again with a valid task number.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp.equals(\"unable to mark done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Unable to mark task #\" + num + \" as done. Please try again with a valid task number.\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp3.equals(\"no slash\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Please provide a valid deadline. For example, 「\" + tmp + \" read book \" + \"/by 2020-09-20」.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            //If exception is command that the bot understands but exception thrown due to invalid arguments"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (tmp.equals(\"enter command\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"Please enter a command.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"The description of 「\" + tmp + \"」 cannot be empty!!\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 55
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String dateAsString \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    LocalDate d;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String statement \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Event(String description, String by) throws DateTimeParseException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] tmp \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        statement \u003d tmp[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dateAsString \u003d dateAsString + tmp[1];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            d \u003d LocalDate.parse(dateAsString);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"E \" + super.getStatusInNumber() + \" \" + super.description + \" /\" + by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String toString() throws NullPointerException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String str \u003d \"[E]\" + super.toString() + \" (\" + statement + \" \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            str \u003d str + d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            str \u003d \"[E]\" + super.toString() + \" (\" + by + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return str;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 42
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 11
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    //private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private boolean isClose \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().initialiseMsg();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 35
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import org.w3c.dom.Text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private TextField dukeWelcome;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private void handleUserInput() throws IOException, DukeException, InterruptedException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (duke.toClose()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void initialiseMsg() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                DialogBox.getDukeDialog(duke.getUi().welcome(), dukeImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private void close(){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 78
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Parser class takes care of the parsing of full commands that the user typed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * This function handles the parsing of command recognised by the bot."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param fullCommand Command that the user typed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return Command from enum."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @throws DukeException Exception is thrown when the user typed other commands that the bot do not understand."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Command parseCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySpace \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (fullCommand.equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.ENTERCOMMAND;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        switch (splitBySpace[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.TODO;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.EVENT;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.DEADLINE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return Command.DONTUNDERSTAND;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * This function will parse the description of todo command."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param fullCommand Command that the user typed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return The description of todo command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String parseDescription(String fullCommand) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySpace \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String newString \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (splitBySpace.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"-1Error:0b9d4e\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        for (int i \u003d 1; i \u003c splitBySpace.length - 1; i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            newString \u003d newString + splitBySpace[i] + \" \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        newString \u003d newString + splitBySpace[splitBySpace.length - 1];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return newString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * This function will parse the description of event and deadline command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param fullCommand Command that the user typed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return Description of event and deadline command."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String parseDescOfEventDeadline(String fullCommand) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySlash;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySpace \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String newString \u003d \"\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (splitBySpace.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"-1Error:21006a\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace2 \u003d splitBySlash[0].split(\" \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        for (int i \u003d 1; i \u003c splitBySpace2.length - 1; i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            newString \u003d newString + splitBySpace2[i] + \" \";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        newString \u003d newString + splitBySpace2[splitBySpace2.length - 1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return newString;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        /*try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            if (splitBySpace.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                throw new DukeException(splitBySpace[0]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            String[] splitBySpace2 \u003d splitBySlash[0].split(\" \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            for (int i \u003d 1; i \u003c splitBySpace2.length - 1; i++) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                newString \u003d newString + splitBySpace2[i] + \" \";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            newString \u003d newString + splitBySpace2[splitBySpace2.length - 1];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return newString;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return null;*/"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * This function will parse the \"deadline\" typed by the user. Function will only be called if the command is"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * event or deadline."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param fullCommand Command that the user typed."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return The description of what the user typed to be deadline."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String parseBy(String fullCommand) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySlash;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySpace \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String newString \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (splitBySlash.length !\u003d 2) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"-2error:21f3ad\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return splitBySlash[1];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        /*try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            splitBySlash \u003d fullCommand.split(\"/\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            if (splitBySlash.length !\u003d 2) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                throw new DukeException(splitBySlash[0], \"\", \"no slash\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return splitBySlash[1];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return null;*/"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * This function will parse the number in the command. Function is for delete and done command."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param fullCommand Command that the user typed."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param tasks List of tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return The parsed number."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @throws DukeException Exception is thrown if the criteria does not fit what delete or done command"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * is looking for."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public int parseNum(String fullCommand, TaskList tasks) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String[] splitBySpace;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        splitBySpace \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (splitBySpace.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            if (splitBySpace[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            } else if (splitBySpace[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return -1;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else if (splitBySpace.length !\u003d 2) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            if (splitBySpace[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return -2;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            } else if (splitBySpace[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                return -2;"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        int num \u003d Integer.parseInt(splitBySpace[1]);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return num;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 182
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Storage class handles loading and saving of tasks into an external file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        file \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            System.err.println(\"Unable to create file\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Loads tasks data from file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return Array list of Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @throws FileNotFoundException If file fails to load."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Task t;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            String[] splitBySpace \u003d line.split(\" \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            String[] splitBySlash;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            if (splitBySpace[0].equals(\"D\") || splitBySpace[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                splitBySlash \u003d line.split(\"/\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                //Splits second time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String[] splitBySpace2 \u003d splitBySlash[0].split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String getDesc \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                for (int i \u003d 2; i \u003c splitBySpace2.length; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    getDesc \u003d getDesc + splitBySpace2[i] + \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (splitBySpace[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    t \u003d new Deadline(getDesc.trim(), splitBySlash[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (splitBySpace[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    dukeList.add(t);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                } else if (splitBySpace[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    t \u003d new Event(getDesc.trim(), splitBySlash[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (splitBySpace[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        t.markAsDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    dukeList.add(t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                String getDesc \u003d \"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                for (int i \u003d 2; i \u003c splitBySpace.length; i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    if (i \u003c splitBySpace.length - 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        getDesc \u003d getDesc + splitBySpace[i] + \" \";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                        getDesc \u003d getDesc + splitBySpace[i];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                t \u003d new ToDo(getDesc);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                if (splitBySpace[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                dukeList.add(t);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return dukeList;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Write list of tasks into file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param tasks Contains list of tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @throws IOException If unable to write file."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void writeData(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String tmpTxt \u003d \"\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (tasks.getSize() \u003e 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize() - 1; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                tmpTxt \u003d tmpTxt + tasks.getDukeList().get(i).format() + \"\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            tmpTxt \u003d tmpTxt + tasks.getDukeList().get(tasks.getSize() - 1).format();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        fw.write(tmpTxt);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 105
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Represents tasks that are added into task list."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Depending on whether the current status is done or not, it will return tick if done, or X is not done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return Tick or X symbol."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Depending on whether the current status of the task is done or not. This function\u0027s purpose"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * is for saving tasks into a file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return 1 if done, or 0 if not done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String getStatusInNumber() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * The purpose of getDescription function is for the usage of finding keywords within"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * each task\u0027s description for level 9 features."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return The description of the task, eg. read book."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * The purpose of format function is to set the format for saving task into a file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return The description of the format, eg. T 0 read."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * To print out the task\u0027s status and description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return String of task status."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 62
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * TaskList stores the Array List of tasks. It also handles methods specific to the array list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    private ArrayList\u003cTask\u003e dukeList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e dukeList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        this.dukeList \u003d dukeList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Get the list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public ArrayList\u003cTask\u003e getDukeList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return dukeList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Add a task into list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param task task to be added into the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dukeList.add(task);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Remove task from list of tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param num Specifies the index-1 to be removed."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void removeTask(int num) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dukeList.remove(num-1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param num Specifies the index-1 to be marked as done."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void markDone(int num) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        dukeList.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Get the size of the tasks in the list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return size of the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return dukeList.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 56
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"T \" + super.getStatusInNumber() + \" \" + super.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " * Ui class handles the bot\u0027s response to the user\u0027s input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Function called when there is error loading the file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.out.println(\"There is an error in loading the file.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Displays welcome message at the start of the program."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String welcome() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        /*String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.out.println(\"Greetings from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.out.println(\"Is that anything that I can do for you?\");*/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String greetings \u003d \"Greetings from\\n\" + logo + \"Is there anything that I can do for you?\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return greetings;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Reads the command that the user input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @return Command that the user typed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints marking task as done."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param t List of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param num Task number."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String printMarkDone(TaskList t, int num) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"Got it. I\u0027ve marked task #\" + num + \": 「\" + t.getDukeList().get(num - 1) + \"」 as done.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"You currently have \" + t.getSize() + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String msg \u003d \"Got it. I\u0027ve marked task #\" + num + \": 「\" + t.getDukeList().get(num - 1) + \"」 as done.\" + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"You currently have \" + t.getSize() + \" task(s) in your list.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints the task that is being added into tasks list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param tList List of tasks."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param t Specific task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String printTaskAdded(TaskList tList, Task t) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"Got it. I\u0027ve added 「\" + t + \"」 to your task(s).\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"You currently have \" + tList.getSize() + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String msg \u003d \"Got it. I\u0027ve added 「\" + t + \"」 to your task(s).\" + \"\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"You currently have \" + tList.getSize() + \" task(s) in your list.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints the task that is being removed from the tasks list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param t List of tasks."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param num Number in the list to be removed."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /*public void printTaskRemoved(TaskList t, int num) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve removed task #\" + num + \": 「\" + t.getDukeList().get(num - 1) + \"」.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        System.out.println(\"You currently have \" + (t.getSize()-1) + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String printTaskRemoved(Task t, int num, TaskList taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        String msg \u003d \"Got it. I\u0027ve removed task #\" + num + \": 「\" + t + \"」.\" + \"\\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                + \"You currently have \" + taskList.getSize() + \" task(s) in your list.\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"Got it. I\u0027ve removed task #\" + num + \": 「\" + t + \"」.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"You currently have \" + taskList.getSize() + \" task(s) in your list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints the task according to the keyword."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param list List of matching tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * @param keyword Keyword entered by the user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String printMatchingTask(String list, String keyword) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        if (list.equals(\"\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return \"We have found nothing related to your search.\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            //System.out.println(\"We have found nothing related to your search.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            String msg \u003d \"Here are some matching tasks in your list: 「\" + keyword + \"」\" + \"\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "                    list;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            //System.out.println(\"Here are some matching tasks in your list: 「\" + keyword + \"」\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            //System.out.println(list);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            return msg;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     * Prints goodbye message to the user."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public String goodbye() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //System.out.println(\"さらbye. Hope to see you again soon! ( ﾟ▽ﾟ)/\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        return \"さらbye. Hope to see you again soon! ( ﾟ▽ﾟ)/\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 116
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "            \u003cInsets left\u003d\"8.0\" right\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"568.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"31.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"566.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 19
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void getStatusInNumber() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Task t \u003d new ToDo(\"read book\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        assertEquals(\"1\", t.getStatusInNumber());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void format() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Task t \u003d new ToDo(\"do project\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        assertEquals(\"T 0 do project\", t.format());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    public void getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        Task t \u003d new ToDo(\"do project\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "        assertEquals(\"\\u2718\", t.getStatusIcon());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 25
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "I have added this task: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "  [T][✘] read that"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "Now you have 1 task(s) in the list."
      }
    ],
    "authorContributionMap": {
      "lohszeying": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "todo read that"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin /Users/szeying/OneDrive\\ -\\ National\\ University\\ of\\ Singapore/Y2-SEM2/CS2103T/W02/duke/src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "lohszeying"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "lohszeying"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "lohszeying": 34
    }
  }
]
