[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "group \u0027Duke.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "tzihiang": 35
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "D /X/shop /May 5 2019 18:00 PM"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Duke is for users who prefer to use a desktop app for keeping track "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "of users\u0027 todos, deadlines and events."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "### Feature 1 - Todos."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Todos are a type of task that contain only an indicator to show if it is down, followed by a description.\\"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Todos are tagged with [T]\\"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "eg. [T][X] Read finish chapter 3. "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "### Feature 2 - Deadlines."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Deadlines are a type of task that contain only an indicator to show if it is down, followed by a description "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "and a date to show its deadline.\\"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Deadlines are tagged with [D]\\"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "eg. [D][X] Quizzes for CS2103T (by: May 5 2019, 18:00 PM). "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "### Feature 3 - Deadlines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Events are a type of task that contain only an indicator to show if it is down, followed by a description "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "and a date to show its deadline.\\"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Deadlines are tagged with [D]\\"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "eg. [E][X] Game farming event (at: May 6 2019, 20:00 PM)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "### Feature 4 - Saving to file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Whenever you make any changes to the database (ie. Adding, removing or marking tasks as done), "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "## General Commands"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`list` - Shows every todo, event and deadline in a list "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`list`\\"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Returns all items printed in a list format.\\"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![list](List.png)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`delete` - Deletes the task from the index"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`delete 2`\\"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Removes the 2nd task from the list in the database.\\"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![delete](Delete.png)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`find` - Finds all tasks related to the keyword"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`find Draw`\\"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Returns all tasks with the keyword \u0027book\u0027.\\"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![find](Draw.png)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "###`done` - Marks the task from index as done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`done 2`\\"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Update the 2nd task from the list in the database as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![done](Done.png)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "## Commands to add tasks (ie. Todos, Events and Deadlines)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "###`todo` - Adds a todo into the list. "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`todo \u003cDescription\u003e`\\"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "A todo has no date involved. `todo` should be followed by a short description\\"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`todo Read Chapter 3`\\"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Adds a todo with the corresponding description to the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![todo](Todo.png)\\"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "###`event` - Adds a event into the list. "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`event \u003cDescription\u003e /at \u003cDate\u003e`\\"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "For Date, please use the following format:\\"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "yyyy-mm-dd hh:mm. Eg. `2020-02-14 18:00`\\"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "An event has a date involved. \\"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`event Job Seminar /at 2020-03-22 12:00`\\"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Adds a event with the corresponding description and date to the list.\\"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![event](Event.png)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "###`deadline` - Adds a deadline into the list. "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`deadline \u003cDescription\u003e /by \u003cDate\u003e`\\"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "For Date, please use the following format:\\"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "yyyy-mm-dd hh:mm. Eg. `2020-02-14 18:00`\\"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "An event has a date involved. \\"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "`deadline Finish CS2103T deliverables /by 2020-02-14 16:00`\\"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "Adds a deadline with the corresponding description and date to the list.\\"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "![deadline](Deadline.png)"
      }
    ],
    "authorContributionMap": {
      "-": 15,
      "tzihiang": 73
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class is the child class of the abstract class Task. It"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * contains a description and a boolean to mark if it has"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * been done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Default Constructor for Deadline Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param date is the date of the deadline for the task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Deadline (String description, String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Constructor for Deadline Class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param done is used when reading from the saved file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param date is the date that was recorded in the saved file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Deadline (String description, boolean done, String date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Converts the Object into the output string to the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @return the string to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + getDescription() + \"(by: \" + this.date + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toParser(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"D /\" + getStatusIcon() + \"/\" + this.description + \"/\" + this.date;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 44
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private static final String BORDER_LINE \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private static final int STARTING_VARIABLE \u003d 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private static final int VARIABLE_ENTRY_ONE \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private static final int SPLIT_BY_TWO \u003d 2;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d run(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static final String FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static Ui ui;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static TaskList tasks;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static Storage storage;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static String taskToParse(TaskList tasks) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        StringBuilder s \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            s.append(tasks.getIndex(i).toParser() + \"\\n\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static String printReply(Task task) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"Got it! I\u0027ve added the task: \\n\" + task.toString() + \"\\nNow you have \" + tasks.getSize() +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                        \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static String stringToTime(String s) throws DukeException {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            // Convert DATE to expected format"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            LocalDate d \u003d LocalDate.parse(s.split(\" \")[STARTING_VARIABLE]);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            SimpleDateFormat sdf \u003d new SimpleDateFormat(\"H:mm\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            Date dateObj \u003d sdf.parse(s.split(\" \")[VARIABLE_ENTRY_ONE]);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + new SimpleDateFormat(\"HH:mm aa\").format(dateObj);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            System.out.println(\"Please give a correct format (ie. yyyy-mm-dd hh:mm)\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            throw new DukeException(s);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static String addTask(String input) throws DukeException, TodoException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        if (input.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d tasks.printList();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else if (input.split(\" \")[STARTING_VARIABLE].equals(\"done\")) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(input.split(\" \")[VARIABLE_ENTRY_ONE]) - 1;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d tasks.markTaskDone(taskNumber);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            storage.saveFile(taskToParse(tasks));"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else if (input.split(\" \")[STARTING_VARIABLE].equals(\"todo\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                throw new TodoException(input);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            Task task \u003d new Todo(input.split(\" \", SPLIT_BY_TWO)[1]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            storage.saveFile(taskToParse(tasks));"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d printReply(task);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else if (input.split(\" \")[STARTING_VARIABLE].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            Task task \u003d new Deadline(input.split(\"/by \", SPLIT_BY_TWO)[STARTING_VARIABLE].split(\" \", SPLIT_BY_TWO)[VARIABLE_ENTRY_ONE], stringToTime(input.split(\"/by \", SPLIT_BY_TWO)[VARIABLE_ENTRY_ONE]));"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            storage.saveFile(taskToParse(tasks));"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d printReply(task);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else if (input.split(\" \")[STARTING_VARIABLE].equals(\"event\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            Task task \u003d new Event(input.split(\"/at\", SPLIT_BY_TWO)[STARTING_VARIABLE].split(\" \", SPLIT_BY_TWO)[VARIABLE_ENTRY_ONE], stringToTime(input.split(\"/at \", SPLIT_BY_TWO)[VARIABLE_ENTRY_ONE]));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            storage.saveFile(taskToParse(tasks));"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d printReply(task);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else if (input.split(\" \")[STARTING_VARIABLE].equals(\"find\")){"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d tasks.search(input.split(\" \", SPLIT_BY_TWO)[VARIABLE_ENTRY_ONE]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            throw new DukeException(input);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    static String deleteTask(String input) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        int pos \u003d Integer.parseInt(input.split(\" \")[VARIABLE_ENTRY_ONE]);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Task task \u003d tasks.removeTask(pos - 1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \" Noted. I\u0027ve removed this task: \\n  \" + task.toString() + \"\\n Now you have \" + tasks.getSize() + \" tasks in the list.\\n\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            if (input.split(\" \")[STARTING_VARIABLE].toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                reply \u003d deleteTask(input);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                storage.saveFile(taskToParse(tasks));"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            } else if (input.equals(\"help\")){"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                reply \u003d Helper.printHelp();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                reply \u003d addTask(input);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (TodoException e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d (e.toString());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply \u003d (e.toString());"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String filePath \u003d FILEPATH;"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        new Duke();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "tzihiang": 265
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class is the general exception that is thrown when"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * Duke is being executed. It is thrown when unexpected input"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * is received from the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Constructor for the customer class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param msg is the error message if any."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public DukeException(String msg){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String fileErrorMessage(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"The file is not found\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 24
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class is the child class of the abstract class Task. It"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * contains a description and a boolean to mark if it has"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * been done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Default Constructor for Deadline Class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param date is the date of the time of the event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Event (String description, String date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Constructor for Event Class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param done is used when reading from the saved file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param date is the date that was recorded in the saved file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Event (String description, boolean done, String date) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + getDescription() + \"(at: \" + this.date + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toParser(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"E /\" + getStatusIcon() + \"/\" + this.description + \"/\" + this.date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 40
    }
  },
  {
    "path": "src/main/java/Helper.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class is used to display help information"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Helper {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Helper(){}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private static final String HELPTEXT \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            \"Hi! Welcome to Duke! \" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"Duke is a task managing assistant that helps\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"manage your tasks, events and deadlines! \\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"To start, here are some basic commands:\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"list: prints the current list in the database\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"help: prints help information\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"done: use \u0027done \u003cindex of item in list\u003e\u0027 to mark the task as done.\\n\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"Now for input entry wise, here are some helpful instructions:\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"To add a TODO, use the following format:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"todo \u003cDescription\u003e\\n\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"To add a DEADLINE, use the following format:\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"deadline \u003cDescription\u003e /by \u003cDate*\u003e\\n\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"To add an EVENT, use the following format:\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"event \u003cDescription\u003e /at \u003cDate*\u003e\\n\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"*Do note that for Date, please use the following format:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    \"yyyy-mm-dd hh:mm (eg. 2020-02-14 18:00)\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public static String printHelp() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return HELPTEXT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 30
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private String s;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Parser(String s){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.s \u003d s;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 9
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * Storage acts to load and save the task list of the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * It contains methods to load upon the start of Duke and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * methods to save after every method call that changes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * the TaskList object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private String FILEPATH;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Default constructor. Takes in a String that is the filepath of the saved file."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param FILEPATH refers to the path of the saved file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Storage (String FILEPATH) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.FILEPATH \u003d FILEPATH;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Returns a File object with the given filepath."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public File load() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        File f \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return f;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Saves the current TextList into the saved file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param text is the text that is to be written into the save file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void saveFile(String text) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            File f \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            FileWriter fw \u003d new FileWriter(f.getAbsoluteFile());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fw.write(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 46
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return (isDone ? \"O\" : \"X\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void markAsDone(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public abstract String toParser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * The TaskList object handles all interaction between the user and the"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * array of tasks. It contains several methods that will adjust the list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * depending on user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * This method prints out the entire list in the given format."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply +\u003d (Integer.toString(i + 1) + \". \" + tasks.get(i).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * This method takes in an index and marks the task in the ArrayList"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * with the corresponding index as \u0027done\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param index Takes in an integer that and marks the corresponding task in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     *              the TaskList as \u0027done\u0027."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String markTaskDone(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d  \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(index).toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Takes in a task and appends it to the TaskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param task adds the task to the back of the list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Returns the size of the list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Returns the Task Object of the corresponding index in the TaskList"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param index is the index of the task in the TaskList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Task getIndex(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Removes a task in the list according to the corresponding index in the TaskList"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param index is the index of the task in the TaskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    // Empty Constructor"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public TaskList() {}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Default Constructor."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param f is a file object with the filepath of the saved data"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     *          and reads it into the tasks array."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public TaskList(File f) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            readFile(f);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        catch (Exception e){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            throw new DukeException(\"No file found\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private void readFile(File f) throws FileNotFoundException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            String input \u003d s.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            char c \u003d input.charAt(0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            if (c \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                String description \u003d input.split(\"/\")[2];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                if (input.split(\"/\")[1].equals(\" O \")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                Task t \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            } else if (c \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                String description \u003d input.split(\"/\")[2];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                if (input.split(\"/\")[1].equals(\" O \")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                String deadline \u003d input.split(\"/\")[3];"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                Task t \u003d new Deadline(description, isDone, deadline);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            } else if (c \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                String description \u003d input.split(\"/\")[2];"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                boolean isDone;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                if (input.split(\"/\")[1].equals(\" O \")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                    isDone \u003d false;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                String deadline \u003d input.split(\"/\")[3];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                Task t \u003d new Event(description, isDone, deadline);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                tasks.add(t);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String search(String searchString){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        String reply \u003d \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        for (Task t: tasks){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            if(t.getDescription().contains(searchString)){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                searchList.add(t);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        reply +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        for (int i \u003d 0; i \u003c searchList.size(); i++) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            reply +\u003d (Integer.toString(i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return reply;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 142
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class is the child class of the abstract class Task. It"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * contains a description and a boolean to mark if it has"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * been done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Default Constructor for Todo Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Todo (String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Constructor for Todo Class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param description is a String that describes the task that is to be done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param done is used when reading from the saved file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Todo (String description, boolean done) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Converts the Object into the output string to the user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @return the string to the user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return (\"[T][\" + getStatusIcon() + \"] \" + getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toParser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"T /\" + getStatusIcon() + \"/\" + this.description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 38
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * This class handles an exception within the Todo class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * It is thrown when unexpected input occurs during the"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " * use of the Todo class. It is a child of the DukeException class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class TodoException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * Constructor for the customer class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * @param input is the error message if any."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    private String input;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public TodoException(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    };"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        return \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                \" ☹ OOPS!!! You must specify a Task to be done!\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                \"\\n Please enter as: \u0027todo \u003cmsg\u003e\u0027, where msg is your description \\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 26
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public Ui(){"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        System.out.println(\"There is no file to load\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 10
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 5
    }
  },
  {
    "path": "text-ui-text/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tzihiang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tzihiang"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "tzihiang": 21
    }
  }
]
