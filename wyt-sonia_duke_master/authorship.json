[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](src/main/tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](src/main/tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[fx1]: \u003csrc/main/tutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[fx2]: \u003csrc/main/tutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[fx3]: \u003csrc/main/tutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "[fx4]: \u003csrc/main/tutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 31
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    archiveVersion \u003d \"0.1.9\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "test {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 27,
      "-": 21
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "T | 0 | test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "D | 1 | test | 12:20 12/12/2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "T | 1 | a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "E | 0 | test3 | 12:12 20/12/2020-14:12 21/12/2020"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke.command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "@rem Get duke.command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "@rem Slurp the duke.command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "@rem Setup the duke.command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 80
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a duke program, which is a task list keeper."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * It allows users to add, delete and update their tasks\u0027 status."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Create a new duke with given file path."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ui.getErrorMessage(new DukeException(\"loadingError\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes the duke program."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                String fullCommand \u003d input;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                response \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                this.isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                response \u003d ui.getErrorMessage(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 55,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents exception in duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The error message of \u003ccode\u003eDukeException\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String errorMessage \u003d \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creats a \u003ccode\u003eDukeException\u003c/code\u003e with given message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"emptyList\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"There is no task yet. Please add some tasks.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"doneMissingIndex\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"The index number of a done query cannot be empty.\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"doneWrongIndexFormat\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"deleteWrongIndexFormat\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please use an integer as index number.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"findMissingKeyword\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please enter your search keyword.\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"sortMissingSortTerm\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage \u003d \"Please enter the sort term (description/deadline).\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"sortWrongSortTermFormat\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage \u003d \"Please enter a valid sort term (description/deadline).\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"doneWrongIndexRange\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            //Fallthrough"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"deleteWrongIndexRange\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please enter valid task index.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"doneComplectedTask\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"The task is already completed.\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"taskMissingDescription\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"The description of a todo/deadline/event cannot be empty.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"deadline\u0026eventWrongDescriptionFormat\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please follow the valid deadline/event creation format. \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"\\n  e.g. deadline description /by date ; event description /at date\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"randomInput\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"deleteMissingIndex\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please enter the index of the task you want to delete.\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"pastDateTime\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Please enter a time in the future.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"FileNotFound\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"There is something wrong with your file storage.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"DateTimeParseError\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Invalid date time format, please follow the format below:\\n  \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"deadline: HH:mm dd/MM/yyyy   e.g. 12:00 01/01/2020\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"event   : HH:mm dd/MM/yyyy-HH:mm dd/MM/yyyy   \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    + \"e.g. 12:00 01/01/2020-14:00 01/01/2020\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case \"EventEndBeforeStartError\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"The end date you entered is before the start date, please check.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            this.errorMessage +\u003d \"Something went wrong: \" + message;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 99
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "//@Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.controller.MainWindow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 35
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.ShowListCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.command.SortCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a parser which handle the parsing of user input."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_DONE \u003d \"done\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_FIND \u003d \"find\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    static final String OPTION_SORT \u003d \"sort\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a \u003ccode\u003eParser\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse a user input to get valid \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param fullCommand The raw user input read by \u003ccode\u003eUI\u003c/code\u003e."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return A valid \u003ccode\u003eCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If the input is not valid."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (fullCommand.isBlank()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"randomInput\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] inputParts \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String option \u003d inputParts[0];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String desc \u003d inputParts.length \u003d\u003d 2 ? inputParts[1] : \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        switch (option.toLowerCase()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_BYE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseExitCommand(desc);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_LIST:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseListCommand(desc);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_DONE:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseDoneCommand(desc);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_TODO:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseAddTodoCommand(desc);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseAddDeadlineCommand(desc);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_EVENT:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseEventCommand(desc);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_DELETE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseDeleteCommand(desc);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_FIND:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseFindCommand(desc);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        case OPTION_SORT:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            command \u003d parseSortCommand(desc);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"randomInput\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses exit command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseExitCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!desc.isBlank()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"randomInput\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses list command."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseListCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!desc.isBlank()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"randomInput\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new ShowListCommand();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses done command."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseDoneCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"doneMissingIndex\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isInteger(desc.trim())) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"doneWrongIndexFormat\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int index \u003d Integer.parseInt(desc);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses todo command."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseAddTodoCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"taskMissingDescription\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ToDo newTodo \u003d new ToDo(desc.trim());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new AddCommand(newTodo);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses deadline command."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseAddDeadlineCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] tempInputParts;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime inputTime \u003d null;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"taskMissingDescription\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!desc.contains(\"/by\")) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deadline\u0026eventWrongDescriptionFormat\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempInputParts \u003d desc.trim().split(\"/by\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tempInputParts.length !\u003d 2 || tempInputParts[0].isBlank()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deadline\u0026eventWrongDescriptionFormat\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            inputTime \u003d LocalDateTime.parse(tempInputParts[1].trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"DateTimeParseError\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (inputTime.isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"pastDateTime\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Deadline newDeadline \u003d new Deadline(tempInputParts[0].trim(), inputTime);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new AddCommand(newDeadline);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses event command."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseEventCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] tempInputParts;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime start \u003d null;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        LocalDateTime end \u003d null;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // filter out the invalid input without description, or without \"/at\" or \"-\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"taskMissingDescription\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!desc.contains(\"/at\") || !desc.contains(\"-\")) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deadline\u0026eventWrongDescriptionFormat\");"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // filter out the invalid input which is not in \"desc + /at + start-end\" format"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempInputParts \u003d desc.trim().split(\"/at\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tempInputParts.length !\u003d 2 || tempInputParts[0].isBlank() || !tempInputParts[1].contains(\"-\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deadline\u0026eventWrongDescriptionFormat\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // filter out the invalid input with wrong \"start-end\" format"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String[] tempInputDateTimes;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tempInputDateTimes \u003d tempInputParts[1].split(\"-\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tempInputDateTimes.length !\u003d 2 || tempInputDateTimes[0].isBlank()) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"DateTimeParseError\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            start \u003d LocalDateTime.parse(tempInputDateTimes[0].trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            end \u003d LocalDateTime.parse(tempInputDateTimes[1].trim(), Task.DATETIME_FORMAT);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"DateTimeParseError\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        // filter out the input with correct format but invalid date time"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (start.isBefore(LocalDateTime.now()) || end.isBefore(LocalDateTime.now())) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"pastDateTime\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (end.isBefore(start)) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"EventEndBeforeStartError\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Event newEvent \u003d new Event(tempInputParts[0], start, end);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new AddCommand(newEvent);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses delete command."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseDeleteCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deleteMissingIndex\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!isInteger(desc.trim())) {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deleteWrongIndexFormat\");"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new DeleteCommand(Integer.parseInt(desc));"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parses find command."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseFindCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"findMissingKeyword\");"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new FindCommand(desc);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Parse sort command."
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private static Command parseSortCommand(String desc) throws DukeException {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (desc.isBlank()) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"sortMissingSortTerm\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (!desc.equals(\"deadline\") \u0026\u0026 !desc.equals(\"description\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"sortWrongSortTermFormat\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new SortCommand(desc);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Checks whether the input String is an integer."
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param s The input String need to be checked."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return True if the String is an integer, false if it is not."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static boolean isInteger(String s) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts the input \u003ccode\u003eLocalDateTime\u003c/code\u003e into a String."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The date and time of the input \u003ccode\u003eLocalDateTime\u003c/code\u003e in String."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static String getDateTimeString(LocalDateTime dateTime) {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return dateTime.getHour() + \":\" + dateTime.getMinute()"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" \" + dateTime.getDayOfMonth() + \"/\" + dateTime.getMonthValue() + \"/\" + dateTime.getYear();"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 289
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a storage which stores the tasks details."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a \u003ccode\u003eStorage\u003c/code\u003e with given \u003ccode\u003efilepath\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Loads saved tasks from the storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of \u003ccode\u003eTask\u003c/code\u003e if there is any saved tasks, NULL if not."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e records \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            File f \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                String taskRecord \u003d s.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                String[] recordInfoParts \u003d taskRecord.split(\"\\\\|\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                Task temp \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (recordInfoParts[1].trim().equals(\"1\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                switch (recordInfoParts[0].trim()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    temp \u003d new ToDo(recordInfoParts[2].trim(), isDone);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    temp \u003d new Deadline(recordInfoParts[2].trim(),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            LocalDateTime.parse(recordInfoParts[3].trim(),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                    Task.DATETIME_FORMAT), isDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    String[] eventStartAndEndDateTimes \u003d recordInfoParts[3].split(\"-\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    temp \u003d new Event(recordInfoParts[2].trim(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            LocalDateTime.parse(eventStartAndEndDateTimes[0].trim()),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                            LocalDateTime.parse(eventStartAndEndDateTimes[1].trim()), isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                records.add(temp);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return records;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Saves current tasks to the storage."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param taskList Current tasks list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any IOException."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void save(TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath, false);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fw.write(taskList.getSavedString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 92
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the program ui which handles the interaction with user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Scanner sacnner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String greeting \u003d \"Hello! I\u0027m duke.Duke, a task list chat box\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"You can key in your tasks and I\u0027ll keep track of them for you.\\n\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"Guide: \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"There are three types of tasks I\u0027m able to keep track of.\\n\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  Todo: use \\\"todo + description\\\" to create (e.g. todo taskInfo).\\n\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  Deadline: use \\\"deadline + description + /by + date\\\" to create \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  (e.g. deadline taskInfo /by 12:00 01/01/2020).\\n\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  Event: use \\\"event + description + /at + start_date-end_date\\\" to create\\n \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  (e.g. event taskInfo /at 12:00 01/01/2020-14:00 01/01/2020)\\n\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  You can also use \\\"list\\\" to check the recorded tasks,\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  use \\\"sort + sort_term(description or deadline)\\\" to check the recorded tasks,\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  or use \\\"done + task_index\\\" to mark the task as done. \\n\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  To terminate me, please use \\\"bye\\\".\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            + \"  What can I do for you?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays the welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays an error message."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ex The exception encountered."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getErrorMessage(DukeException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return ex.errorMessage;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The input read from keyboard."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.sacnner.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Displays the outpur."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param output The output which will be displayed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void displayOutput(String output) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a command that used to handle new task insertion."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eAddCommand\u003c/code\u003e with the given \u003ccode\u003etask\u003c/code\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to insert new task into system storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any DukeException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.getTasks().add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int originalListSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert tasks.getSize() \u003d\u003d originalListSize + 1 : \"The size of task list didn\u0027t change after insertion,\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" please check.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"  Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return False, as it is not an exit command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 56
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Command is the abstract base class for all executable commands,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * which handle the execution of commands and program termination."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any DukeException."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return Returns true if it is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a command that used to handle existing task deletion."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eDeleteCommand\u003c/code\u003e with the given index."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to delete a task at \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is no task in current \u003ccode\u003etasks\u003c/code\u003e,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                       or the \u003ccode\u003eindex\u003c/code\u003e is out side of the valid range."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int originalListSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (originalListSize \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"emptyList\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.index \u003e originalListSize || index \u003c 1) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"deleteWrongIndexRange\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks.getTasks().remove(index - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert tasks.getSize() \u003d\u003d originalListSize - 1 : \"The size of task list didn\u0027t change after deletion,\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" please check.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + tasks.getTasks().get(index - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return False, as it is not an exit command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 64
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a command that used to mark a task at \u003ccode\u003eindex\u003c/code\u003e as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eDoneCommand\u003c/code\u003e with the given index."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to mark a task at \u003ccode\u003eindex\u003c/code\u003e as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is no task in current \u003ccode\u003etasks\u003c/code\u003e,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                       the \u003ccode\u003eindex\u003c/code\u003e is out side of the valid range"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *                       or the selected task is done already."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int listSize \u003d tasks.getSize();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (listSize \u003d\u003d 0) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"emptyList\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.index \u003e listSize || index \u003c 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"doneWrongIndexRange\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Task chosenTask \u003d tasks.getTasks().get(index - 1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (chosenTask.isDone()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            throw new DukeException(\"doneComplectedTask\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        chosenTask.markAsDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert chosenTask.isDone() : \"The task selected is still in pending status after this action,\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" please check.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + chosenTask.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return False, as it is not an exit command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 70
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a command that used to exit the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to exit the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any DukeException."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return True, as it is the exit command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eFindCommand\u003c/code\u003e with the given keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.keyword \u003d keyWord;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to search tasks base on the keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any DukeException."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output \u003d ui.getErrorMessage(new DukeException(\"emptyList\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output \u003d getChosenTasksString(tasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets the output string of search result."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String getChosenTasksString(TaskList tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e searchResult \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                tasks.getTasks().stream()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .filter(t -\u003e t.getDescription().contains(this.keyword))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        .collect(Collectors"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                                .toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (searchResult.size() \u003c 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output +\u003d \"Here is no matching task in your list, please change a keyword.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output +\u003d searchResult.stream().map(t -\u003e (tasks.getTasks().indexOf(t) + 1) + \".\" + t.toString())"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 65
    }
  },
  {
    "path": "src/main/java/duke/command/ShowListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a command that used to display all current tasks in system storage."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ShowListCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to display all current tasks in system storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is no task in current \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output \u003d ui.getErrorMessage(new DukeException(\"emptyList\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                int counter \u003d tasks.getTasks().indexOf(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                output +\u003d (counter + 1) + \".\" + t.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (tasks.getSize() - counter \u003e 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    output +\u003d \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Returns true if it is an exit command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return True, as it is the exit command."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 50
    }
  },
  {
    "path": "src/main/java/duke/command/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class SortCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String sortTerm;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eSortCommand\u003c/code\u003e with the given sortTerm."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public SortCommand(String sortTerm) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assert sortTerm.equals(\"description\") || sortTerm.equals(\"deadline\") : \"Wrong sort term format \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \"didn\u0027t caught at Parser.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.sortTerm \u003d sortTerm;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Executes command to search tasks base on the keyword."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param tasks   The list of current tasks from storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param ui      The current UI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param storage The system storage, used as database."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @throws DukeException If there is any DukeException."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output \u003d ui.getErrorMessage(new DukeException(\"emptyList\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            output \u003d getSortedTasksString(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets the output string of sorted result."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private String getSortedTasksString(TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ArrayList\u003cTask\u003e sortedTasks \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.sortTerm.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e sortedTasksWithoutTodo \u003d tasks.getTasks().stream()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(t -\u003e !t.getType().equals(TaskType.TODO))"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .sorted(Task::compareTo)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e sortedTasksTodo \u003d tasks.getTasks().stream()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .filter(t -\u003e t.getType().equals(TaskType.TODO))"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .sorted((Task t1, Task t2) -\u003e t1.getDescription().compareTo(t2.getDescription()))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sortedTasksWithoutTodo.addAll(sortedTasksTodo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sortedTasks \u003d sortedTasksWithoutTodo;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.sortTerm.equals(\"description\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            sortedTasks \u003d tasks.getTasks().stream()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .sorted((Task t1, Task t2) -\u003e t1.getDescription().compareTo(t2.getDescription()))"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        output +\u003d \"Here are the task list sorted based on: \" + this.sortTerm + \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        output +\u003d sortedTasks.stream().map(t -\u003e (tasks.getTasks().indexOf(t) + 1) + \".\" + t.toString())"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                .collect(Collectors.joining(\"\\n\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 79
    }
  },
  {
    "path": "src/main/java/duke/controller/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /** Gets \u003ccode\u003eDukeDialog\u003c/code\u003e. */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 62
    }
  },
  {
    "path": "src/main/java/duke/controller/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.controller;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Sets \u003ccode\u003eDuke\u003c/code\u003e for program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                DialogBox.getDukeDialog(duke.getUi().getWelcome(), dukeImage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        );"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String response \u003d duke.run(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This is the date and time of the deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eDeadline\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eby\u003c/code\u003e (date and time)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eDeadline\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eby\u003c/code\u003e (date and time) and"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Deadline(String description, LocalDateTime by, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets the \u003ccode\u003eby\u003c/code\u003e (date and time) of the \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The \u003ccode\u003eby\u003c/code\u003e (date and time) of the \u003ccode\u003eDeadline\u003c/code\u003e."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getBy() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts the \u003ccode\u003eDeadline\u003c/code\u003e detail into a String."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The detail of \u003ccode\u003eDeadline\u003c/code\u003e in String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" (by: \" + by.getHour() + \":\" + by.getMinute()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" \" + by.getDayOfMonth() + \"/\" + by.getMonthValue() + \"/\" + by.getYear() + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * This is the date and time of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected LocalDateTime start;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected LocalDateTime end;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eat\u003c/code\u003e (date and time)."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Event(String description, LocalDateTime start, LocalDateTime end) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eat\u003c/code\u003e (date and time) and"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Event(String description, LocalDateTime start, LocalDateTime end, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets start date and time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getStart() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return start;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets end date and time."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getEnd() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts the \u003ccode\u003eEvent\u003c/code\u003e detail into a String."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The detail of \u003ccode\u003eEvent\u003c/code\u003e in String."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String at \u003d Parser.getDateTimeString(this.start) + \" - \" + Parser.getDateTimeString(this.end);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The acceptable data and time format."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public static final DateTimeFormatter DATETIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HH:mm dd/MM/yyyy\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The description of task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The isDone status of task, true for done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The type of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a \u003ccode\u003eTask\u003c/code\u003e with given \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003etype\u003c/code\u003e."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets \u003ccode\u003eisDone\u003c/code\u003e status."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The \u003ccode\u003eisDone\u003c/code\u003e status of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets \u003ccode\u003edescription\u003c/code\u003e."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The \u003ccode\u003edescription\u003c/code\u003e of the \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets \u003ccode\u003eisDone\u003c/code\u003e status as a String."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return \"[✓]\" for done and \"[✗]\" for pending."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getStatusString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return isDone ? \"[✓]\" : \"[✗]\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Marks isDone status of a \u003ccode\u003eTask\u003c/code\u003e as true."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets \u003ccode\u003eTaskType\u003c/code\u003e."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskType getType() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Marks isDone status of a \u003ccode\u003eTask\u003c/code\u003e as true."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public LocalDateTime getStartOrBy() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (this.type \u003d\u003d TaskType.DEADLINE) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return ((Deadline) this).getBy();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            return ((Event) this).getStart();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts the \u003ccode\u003eTask\u003c/code\u003e detail into a String."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The detail of \u003ccode\u003eTask\u003c/code\u003e in String."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.getStatusString() + \" \" + this.getDescription();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Compare only tasks which are not Todo task."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * The comparision of todo tasks is handling in SortCommand section."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int compareTo(Task t) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        int result \u003d 0;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        if (t.type !\u003d TaskType.TODO) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (this.getStartOrBy().isBefore(t.getStartOrBy())) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d -1;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else if (!this.getStartOrBy().isBefore(t.getStartOrBy())) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                result \u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                if (this.type.equals(t.type)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    result \u003d this.description.compareTo(t.description);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    result \u003d this.type.compareTo(t.type);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 134
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates an \u003ccode\u003eTaskList\u003c/code\u003e with given \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Adds new task into the \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @param task The task will be added."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets \u003ccode\u003etasks\u003c/code\u003e."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The current list of tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Removes the task at \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The task at \u003ccode\u003eindex\u003c/code\u003e."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Build a human readable String of the tasks list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The human readable String of the tasks list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getTaskListString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String listOfTasks \u003d \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            int counter \u003d this.tasks.indexOf(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            if (counter !\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                listOfTasks +\u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            listOfTasks +\u003d counter + 1 + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.tasks.size() !\u003d 0 ? listOfTasks : \"- No task was entered -\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /** Parses current task list to a string with valid saving format.*/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String getSavedString() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        String tasks \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        for (Task t : this.tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            String temp \u003d \"\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            int status \u003d t.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            switch (t.type) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                temp +\u003d \"T | \" + status + \" | \" + t.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                String deadlineDateTime \u003d Parser.getDateTimeString(((Deadline) t).getBy());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                temp +\u003d \"D | \" + status + \" | \" + t.getDescription() + \" | \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + deadlineDateTime + \"\\n\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                String eventDuration \u003d Parser.getDateTimeString(((Event) t).getStart())"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        + \"-\" + Parser.getDateTimeString(((Event) t).getEnd());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                temp +\u003d \"E | \" + status + \" | \" + t.getDescription() + \" | \" + eventDuration + \"\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks +\u003d temp;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Gets the \u003ccode\u003etasks\u003c/code\u003e list size."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The \u003ccode\u003etasks\u003c/code\u003e list size."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 110
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    TODO"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 7
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * @author Wang Yuting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates a new \u003ccode\u003eEvent\u003c/code\u003e with the given \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003eisDone\u003c/code\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Converts the \u003ccode\u003eToDo\u003c/code\u003e detail into a String."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * @return The detail of \u003ccode\u003eToDo\u003c/code\u003e in String."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 34
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         prefWidth\u003d\"500.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Label\" textFill\u003d\"#362612\" textOverrun\u003d\"CLIP\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "               wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            fx:controller\u003d\"duke.controller.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cFlowPane prefHeight\u003d\"35.0\" prefWidth\u003d\"500.0\" AnchorPane.bottomAnchor\u003d\"5.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"406.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                           style\u003d\"-fx-pref-height: 35;\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cFlowPane.margin\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/FlowPane.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/TextField\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        prefWidth\u003d\"81.0\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        style\u003d\"-fx-background-color: #ff8533#ff8533; -fx-background-radius: 10; -fx-pref-height: 35;\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        text\u003d\"Send\" textFill\u003d\"WHITE\"/\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/FlowPane\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"TOP_CENTER\" prefHeight\u003d\"552.0\" prefWidth\u003d\"487.0\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                        \u003cInsets left\u003d\"2.0\" right\u003d\"2.0\"/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "                \u003cInsets bottom\u003d\"2.0\" left\u003d\"2.0\" right\u003d\"2.0\" top\u003d\"2.0\"/\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 48
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_randomInput_throwDukeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"test  \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"randomInput\", actualException.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_missingDescriptionTest_throwDukeException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException1 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"todo\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException1.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException2 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"todo  \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException2.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException3 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException3.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException4 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline  \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException4.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException5 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"event\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException5.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException6 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"event  \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"taskMissingDescription\", actualException6.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_missingIndexTest_throwDukeException() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException1 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"done\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"doneMissingIndex\", actualException1.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException2 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"done  \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"doneMissingIndex\", actualException2.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException3 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteMissingIndex\", actualException3.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException4 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"delete  \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteMissingIndex\", actualException4.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_wrongIndexFormatTest_throwDukeException() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDone \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"done test\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"doneWrongIndexFormat\", actualExceptionDone.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDelete \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"delete 12test\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteWrongIndexFormat\", actualExceptionDelete.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_wrongDescriptionFormat_throwException() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDeadlineMissingName \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline /by 12:12 12/12/2020\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionDeadlineMissingName.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDeadlineMissingBy \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline test 12:12 12/12/2020\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionDeadlineMissingBy.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDeadlineMissingDateTime \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline test /by\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionDeadlineMissingDateTime.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionEventMissingName \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"event /at 2-4pm 12/12/2020\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionEventMissingName.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionEventMissingAt \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"event test 2-4pm 12/12/2020\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionEventMissingAt.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionEventMissingDateTime \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"event test /at\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deadline\u0026eventWrongDescriptionFormat\", actualExceptionEventMissingDateTime.getMessage());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_wrongDateTimeFormat_throwException() {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualExceptionDeadlineWrongDateTimeFormat \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline test /by invalidDateTime\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"DateTimeParseError\", actualExceptionDeadlineWrongDateTimeFormat.getMessage());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void parserTest_pastDateTime_throwDukeException() {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            Parser.parse(\"deadline test /by 12:12 12/12/2010\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"pastDateTime\", actualException.getMessage());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 136
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void deleteCommandTest_wrongIndexRange_throwDukeException() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException1 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskList testList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new DeleteCommand(3).execute(testList, new Ui(), new Storage(\"tasks.txt\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteWrongIndexRange\", actualException1.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException2 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskList testList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new DeleteCommand(-1).execute(testList, new Ui(), new Storage(\"tasks.txt\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteWrongIndexRange\", actualException2.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 36
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void doneCommandTest_wrongIndexRange_throwDukeException() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException1 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskList testList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new DeleteCommand(3).execute(testList, new Ui(), new Storage(\"tasks.txt\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteWrongIndexRange\", actualException1.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException2 \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks.add(new ToDo(\"test\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskList testList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new DeleteCommand(-1).execute(testList, new Ui(), new Storage(\"tasks.txt\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"deleteWrongIndexRange\", actualException2.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void doneCommandTest_alreadyDone_throwDukeException() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        DukeException actualException \u003d Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            tasks.add(new ToDo(\"test\", true));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            TaskList testList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "            new DoneCommand(1).execute(testList, new Ui(), new Storage(\"tasks.txt\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        assertEquals(\"doneComplectedTask\", actualException.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 48
    }
  },
  {
    "path": "src/tutorials/gradleTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Gradle Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle is a _build automation tool_ used to automate build processes. There are many ways of integrating Gradle into a project. In this guide, we will be using the _Gradle wrapper_."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* [Introduction](#introduction)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Gradle Support to Your Project](#adding-gradle-support-to-your-project)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Plugins](#adding-plugins)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  * [CheckStyle](#checkstyle)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  * [Shadow](#shadow)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "* [Adding Dependencies](#adding-dependencies)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  * [JUnit](#junit)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "* [Further Reading](#further-reading)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "As a developer, you write a _build file_ that describes the project. A build file mainly consists of _plugins_, _tasks_ and _properties_. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "* **Plugins** extend the functionality of Gradle. For example, the `java` plugin adds support for `Java` projects."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "* **Tasks** are reusable blocks of logic.  For example, the task `clean` simply deletes the project build directory. Tasks can be composed of other tasks or be dependent on another task. "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "* **Properties** change the behavior of tasks. For instance, `mainClassName` of the `application` plugin is a compulsory property which tells Gradle which class is the entrypoint to your application."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  As Gradle favors [_convention over configuration_](https://en.wikipedia.org/wiki/Convention_over_configuration), there is not much to you need to configure if you follow the recommended directory structure."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Gradle Support to Your Project "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "1. Pull the branch named `gradle`. Merge it to the `master` branch. This will add the Gradle wrapper to your project."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout --track origin/gradle"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   git checkout master"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   git merge gradle"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "1. Open the `build.gradle` file in an editor. Update the following code block to point to the main class (i.e., the one containing the `main` method) of your application. The code below assumes your main class is `seedu.duke.duke.Duke`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   ```groovy"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   application {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "       mainClassName \u003d \"seedu.duke.duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "   }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "1. To check if Gradle has been added to the project correctly, open a terminal window, navigate to the root directory of your project and run the duke.command `gradlew run`. This should result in Gradle running the main method of your project."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ":bulb: Simply run the duke.command `gradlew {taskName}` in the terminal and Gradle will run the task! Here are some example commands:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew tasks` (or `gradlew tasks --all`): shows a list of tasks available"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "* `gradlew run`: runs the main class of your project"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: Some plugins may add more helpful tasks so be sure to check their documentation!"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "#### Using Gradle from within Intellij"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "1. After adding support for Gradle, Intellij might automatically ask you (via a pop-up at the bottom right corner of the Window) whether to import the project as a Gradle project. In that case, go ahead and say yes."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t happen, import the Gradle project by `Help \u003e Find Action \u003e Import Gradle Project`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Import Gradle](assets/ImportGradle.png)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "1. If the above didn\u0027t work either, close Intellij, delete the Intellij project files (i.e., `.idea` folder and `*.iml` files), and set up the project again, but instead of choosing `Create project from existing sources`, choose `Import project from external model` -\u003e `Gradle`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "After this, IntelliJ IDEA will identify your project as a Gradle project and you will gain access to the `Gradle Toolbar`. Through the toolbar, you run Gradle tasks and view your project\u0027s dependencies."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You can click on the Gradle icon in the Gradle toolbar and create a new run configuration for running Gradle tasks without needing to type a `gradlew` duke.command."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "![Gradle icon](assets/GradleIcon.png)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Plugins"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle plugins are reusable units of build logic. Most common build tasks are provided as core plugins by Gradle. Given below are instructions on how to use some useful plugins:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "### CheckStyle"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "To add support for _Checkstyle_ (a tool to check if your code complies with a set of style rules), which comes as a core plugin, simply add the line `id \u0027checkstyle\u0027` into the `plugins` block."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "Your build file should look something like this now:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "// ..."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "Checkstyle expects configuration files for checkstyle to be in `./config/checkstyle/` by convention."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "A sample checkstyle rule configuration is provided in the branch."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "The plugin adds a few _tasks_ to your project. Run `gradlew checkstyleMain checkstyleTest` to verify that you have set up Checkstyle properly (the duke.command will check your main code and test code against the style rules)."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for CheckStyle plugin](https://docs.gradle.org/current/userguide/checkstyle_plugin.html)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "### Shadow"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Shadow is a plugin that packages an application into an executable jar file. To use it, first add the following line to your Gradle build file:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "The plugin can be configured by setting some properties. Let\u0027s try to produce a jar file with the name in format of `{baseName}-{version}.jar`."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following block to your build file:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Now you can run the duke.command `gradlew shadowJar`.It publishes an executable jar to `./build/libs/`. You should be able to able to execute the created jar file by double-clicking it or using the duke.command `java -jar {jarName}`?"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for Shadow plugin](https://plugins.gradle.org/plugin/com.github.johnrengelman.shadow)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "* [More about the Shadow plugin](https://imperceptiblethoughts.com/shadow/introduction/)"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "## Adding Dependencies"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Gradle can automate the management of dependencies to third-party libraries. Given below are some examples."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "### JUnit"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "JUnit is a testing framework for Java. It allows developers to write tests and run them. To manage JUnit dependency via Gradle, add the following to your build file:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "Then, configure Gradle to use JUnit by adding the following block to your build file:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "By convention, java tests belong in `src/test/java` folder. Create a new `test/java` folder in under `src`."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "src"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "├─main"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "│  └─java"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "│     └─seedu/duke/duke.Duke.java"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "└─test"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    └─java"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        └─seedu/duke/DukeTest.java"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "If you have imported your Gradle project into IntelliJ IDEA, you will notice that IDEA is able to mark the test directory as the _Test root_ (colored in green by default) automatically."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "You can now write a test (e.g., `test/java/seedu/duke/DukeTest.java`) and run it with `gradlew test`."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "**Resources**:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "* [Gradle documentation for JUnit](https://docs.gradle.org/current/userguide/java_testing.html#using_junit5)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "## Further Reading"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "Now that you have a general idea of how to accomplish basic tasks with Gradle, here\u0027s a list of material you can read to further your understanding."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "* [Official Gradle Documentation](https://docs.gradle.org/current/userguide/userguide.html)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "----------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 162
    }
  },
  {
    "path": "src/tutorials/javaFxTutorialPart1.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial Part 1 – Introduction"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX lifecycle of an application"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Imagine yourself as a director of a play. First you provision the props that you will feature in your play. These can be hand props for your actors to interact with or even set dressings just to liven up the background. You then decide where to layout the props for every scene. With a proper script in hand, you can finally approach a theatre and request for a stage. There on, it’s just a matter of pulling the curtains on your masterpiece."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "A JavaFX application is like a play you are directing. Instead of creating props, you create `Nodes` (`Nodes` are the fundamental building blocks of a JavaFX application), and place them onto a `Scene` (a scene is a graph of `Node`s). Then, you set your `Scene` on a `Stage` provided by JavaFX. When you call `Stage#show()` method, JavaFX renders a window with your `Stage` on it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up Java FX"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are not using Gradle"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Download the [JavaFX 11 SDK](https://gluonhq.com/products/javafx/) and unzip it."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the `libs` folder from the SDK into your project (note: `JAVAFX_HOME` is the directory in which you have unzipped the JavaFX SDK). "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   `File` \u003e `Project Structure` \u003e `Libraries` \u003e `+` \u003e `Java` \u003e `{JAVAFX_HOME}/lib`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. From `Run` \u003e `Edit Configurations`, add the following line into your `VM options` for each of the `main` classes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   `--module-path {JAVAFX_HOME}/lib --add-modules javafx.controls,javafx.fxml`\u003cbr\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   e.g., `--module-path C:/javafx-sdk-11.0.2/lib --add-modules javafx.controls,javafx.fxml`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "### If you are using Gradle"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Update your `build.gradle` to include the following lines:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "```groovy"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "## Writing your first program"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "As customary, let’s start off with a simple “Hello World” program. Modify your `duke.Duke` class to extend `javafx.application.Application`. This requires you to override the `Application#start()` method and provide a concrete implementation. Notice that the method signature for `Application#start()` has a parameter `Stage`. This is the _primary stage_ that JavaFX provides."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class duke.Duke extends Application {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "Note how we have created a `Label` to contain the text that we want to show. We then create the `Scene` and set its content. Finally, we set the stage and show it. "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "Next, we create another Java class, `Launcher`, as an entry point to our application."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "The `Launcher` class is reproduced below in its entirety."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        Application.launch(duke.Duke.class, args);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "Run `Launcher` and you should see something like this:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "![Hello World](assets/HelloWorld.png) "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! You have created your first GUI application!"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "1. We mentioned that `Node`s are the fundamental building blocks of JavaFX and used a `Label` as our root node in the HelloWorld application."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are some of the other types of `Node`s?"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   1. How does JavaFX group them?"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "1. `Node`s can be interacted with like Plain Old Java Objects (POJO)."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What properties of a `Label` can you change programmatically?"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try changing the `Label` to have a font of Arial at size 50."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "1. You’ve learnt that a `Stage` can be thought of as a window. "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you have more than one `Stage` an application?"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Try creating another stage and showing it! What happens?"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3,
      "-": 114
    }
  },
  {
    "path": "src/tutorials/javaFxTutorialPart2.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# JavaFX Tutorial Part 2 - Creating a GUI for duke.Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "In this tutorial, we will be creating a GUI for duke.Duke from scratch based on the following mockup."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "![Mockup for duke.Duke](assets/DukeMockup.png)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## JavaFX controls"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "Controls are reusable UI elements. Refer to the [JavaFX\u0027s official documentation](https://openjfx.io/javadoc/11/javafx.controls/javafx/scene/control/package-summary.html) for a list of controls available."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "From the mockup above, can you identify the controls that we will need to use? "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "Mockup | Control "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "------ | :---: |"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "![ImageView](assets/MockupImageView.png) | ImageView"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "![Label](assets/MockupLabel.png) | Label"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "![Button](assets/MockupButton.png) | Button"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "![TextField](assets/MockupTextField.png) | TextField"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "![ScrollPane](assets/MockupScrollPane.png) | ScrollPane"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Designing the Layout"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "Now that we know what controls we need to implement our UI, let’s start programming! We quickly run into a problem: how do we show all of them on the screen at once? "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "Each scene is initialized with a root `Node`. In the previous tutorial, our root `Node` was a `Label`."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "What happens when we need to display more than one `Node` on the `Scene`? For that, we need to understand the JavaFX hierarchy. Recall from the previous tutorial:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "![Hierarchy of Objects in JavaFX](assets/JavaFxHierarchy.png)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "From the diagram, you see that the root `Node` can contain many other `Nodes` and similarly, each of those `Nodes` can contain many other `Nodes`. This means that if we can find a _container_ to set as our root `Node`, we can place all our other `Nodes` in it."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "But how do we get the exact layout we want in the UI? JavaFX provides that functionality in the form of **layout panes** in `javafx.scene.layouts`. Each layout pane follows a _layout policy_ to decide how to arrange its children. For example, the `VBox` lays out its children in a single vertical column and its counterpart, the `HBox` lays out its children in a single horizontal row. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ":bulb: A comprehensive list of layouts and how they behave is available here from the [official documentation](https://openjfx.io/javadoc/11/javafx.graphics/javafx/scene/layout/package-summary.html)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "One way to obtain the layout in the mockup is as follows. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "![duke.Duke\u0027s layout](assets/DukeSceneGraph.png) "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "To get that layout, we create a new `AnchorPane` and add our controls to it. Similarly, we create a new `VBox` to hold the contents of the `ScrollPane`. The code should look something like this:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class duke.Duke extends Application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        // ... "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "         //Step 1. Setting up required components"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "         dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "         scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "         userInput \u003d new TextField();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "         sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "         AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "         mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "         scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.setScene(scene);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "         stage.show();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and you should see something like this:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "![duke.Duke\u0027s raw layout](assets/RawLayout.png)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "That is not what we were expecting, what did we forget to do?"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "## Styling the Controls"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "Almost every JavaFX object offer properties that you can set to customize its look and feel. For example, the `Stage` allows you to set its preferred size and title. Again, refer to the official JavaFX documentation for a comprehensive list of properties that you can modify. Here’s how you can get the application to look like the mockup:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "Add the following code to the bottom of the `start` method. You\u0027ll have to add `import javafx.scene.layout.Region;` to the imports too."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "         "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "        stage.setTitle(\"duke.Duke\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this. "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application again. It should now look like this:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "![duke.Duke\u0027s Final layout](assets/FinalLayout.png)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "1. In the tutorial, we used an `AnchorPane` to achieve the desired layout.  "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Can you find other ways to obtain a similar layout? "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What are the advantages and disadvantages of your layout?"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "1. Try interacting with the application"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "   1. What happens when you press the `Enter` key or left-click the send button?"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Why?"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 150
    }
  },
  {
    "path": "src/tutorials/javaFxTutorialPart3.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 3 – Interacting with the user"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "Picking up from where we left off last tutorial, we have successfully achieved the desired layout. Now let’s make the application respond to user input. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "Rather than to do everything in one try, let’s iterate and build up towards our final goal. "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 1 – Echoing the User"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "JavaFX has an _event-driven architecture style_. As such, we programmatically define _handler_ methods to execute as a response to certain _events_. When an event is detected, JavaFX will call the respective handlers."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For duke.Duke, there are two events that we want to respond to, namely the user pressing `Enter` in the `TextField` and left-clicking the `Button`. These are the `onAction` event for the `TextField` and the `onMouseClicked` event for the `Button`."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "For now, let’s have the application add a new `Label` with the text from the `TextField`. Update the `Main` class as follows. You\u0027ll need to add an `import javafx.scene.control.Label;` too."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Step 1 code here"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 2 code here"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 1:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * @param text String containing text to add"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    return textToAdd;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and give it a whirl!"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "![Echo not scrolling as intended](assets/EchoNotScrolling.png)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "At first glance everything appears to work perfectly. However, when the `VBox` stretches beyond the confines of the `ScrollPane`, the `ScrollPane` does not scroll down automatically as expected. We can remedy this by attaching a handler on the `VBox` to react to its own size changing and scrolling the `ScrollPane` down."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "Update the `start` method as shown below."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    // current code ..."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "Verify that the `ScrollPane` scrolls as intended."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 2 – Adding Dialog Boxes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "In the mockup of the UI, notice that the dialog boxes are composed of two different controls (`ImageView` and `Label`) and reused multiple times. In situations like this, it is often beneficial to create our own custom control."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "Let’s create our custom control `DialogBox`:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "We use the code in our main class just like any other control. Here are the steps to update the code to use the custom control in `Main.java`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "First, add these imports:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "Next, add two images to the `main/resources/images` folder."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "For this tutorial, we have two images `DaUser.png` and `DaDuke.png` to represent the user avatar and duke.Duke\u0027s avatar respectively but you can use any image you want."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "Image|Filename"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "---|---"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "![DaDuke](assets/DaUser.png) | `DaUser.png`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "![DaUser](assets/DaDuke.png) | `DaDuke.png`"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "public class duke.Duke extends Application {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    // ..."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Add a new method to handle user input:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": " * Iteration 2:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": " * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "            new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": " * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": " * Replace this stub with your completed method."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "private String getResponse(String input) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    return \"duke.Duke heard: \" + input;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "Update the event handler code in the `start` method to use the new `handleUserInput` method:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "public void start(Stage stage) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Run the program and see how it works."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 2](assets/DialogBoxesIteration2.png) "
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "## Iteration 3 – Adding custom behavior to DialogBox"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "One additional benefit of defining a custom control is that we can add behavior specific to our `DialogBox`. Let’s add a method to flip a dialog box such that the image on the left to differentiate between user input and duke.Duke’s output."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": " * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "private void flip() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    db.flip();"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    return db;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "You\u0027ll need to update the imports as follows:"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "Now, we can go back to the `Main` class and change the event handler to use our new `DialogBox`. "
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "private void handleUserInput() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "            DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "    userInput.clear();"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Run the application and play around with it. "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "![DialogBoxes Iteration 3](assets/DialogBoxesIteration3.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "Congratulations! "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "You have successfully implemented a fully functional GUI for duke.Duke!  "
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "1. While the GUI looks similar to the mockup, there are still parts that need to be refined. Try your hand at some of these tasks:"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each DialogBox"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add padding between each ImageView and its Label"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Clip the ImageView into a circle"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   * Add background color to each dialog box"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "1. After attempting the changes, reflect critically on the following:"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * What was the development workflow like?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   * Is the code base well-organized?"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 7,
      "-": 236
    }
  },
  {
    "path": "src/tutorials/javaFxTutorialPart4.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# JavaFX Tutorial 4 – FXML "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "While we have produced a fully functional prototype, there are a few major problems with our application."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "1. The process of visually enhancing the GUI is long and painful:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   * Does the `TextField` need to be 330px or 325px wide? "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   * How much padding is enough padding to look good?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   Every small change requires us to rebuild and run the application.  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Components are heavily dependent on each other:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   Why does `Main` need to know that `DialogBox` needs a `Label`? "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   What happens if we change the `Label` to a custom `ColoredLabel` in the future?  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    We need to minimize the amount of information each control needs to know about another."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    Otherwise, making changes in the future will break existing features."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. The code is untidy and long:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   Why is all the code in one place?"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   The `Main` class attempts to do it all. "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   Code for visual tweaks, listeners and even utility methods are all in one file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   This makes it difficult to find and make changes to existing code."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "FXML is a XML-based language that allows us to define our user interface. Properties of JavaFX objects can be defined in the FXML file. For example:  "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "The FXML snippet define a TextField similar to the one that we programmatically defined previous in Tutorial 2. Notice how concise FXML is compared to the plain Java version."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Let\u0027s return to duke.Duke and convert it to use FXML instead."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# Rebuilding the Scene using FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "Scene Builder is a tool developed by Oracle and currently maintained by Gluon. It is a What-You-See-Is-What-You-Get GUI creation tool. [Download](https://gluonhq.com/products/scene-builder/#download) the appropriate version for your OS and install it."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Create the following files in `src/main/resources/view`:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.fxml**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.fxml**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "```xml"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/fx:root\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s explore the provided FXML files in Scene Builder. "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    Running the tool brings up the main screen."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    Select `Open Project` \u003e `src/main/resources/view/MainWindow.fxml`. Inspect each control and its properties."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   ![SceneBuilder opening MainWindow.fxml](assets/SceneBuilder.png)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the right accordion pane, you can modify the properties of the control that you have selected. Try changing the various settings and see what they do!"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "1. On the left accordion, you can see that we have set the controller class to `MainWindow`. "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "We will get to that later."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Controller for MainWindow](assets/MainWindowController.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "1. Let’s repeat the process for `DialogBox`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   The main difference here is that DialogBox checks `Use fx:root construct` and _does not define a controller class_. "
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   ![Settings for DialogBox](assets/DialogBoxController.png)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "## Using Controllers"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "As part of the effort to separate the code handling duke.Duke\u0027s logic and UI, let\u0027s _refactor_ the UI-related code to its own class."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "We call these UI classes _controllers_. "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "Let\u0027s implement the `MainWindow` controller class that we specified in `MainWindow.fxml`."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "**MainWindow.java**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private duke.Duke duke;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    public void setDuke(duke.Duke d) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "The `@FXML` annotation marks a `private` or `protected` member and makes it accessible to FXML despite its modifier."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "Without the annotation, we will have to make everything `public` and expose our UI to unwanted changes."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "The `FXMLLoader` will map the a control with a `fx:id` defined in FXML to a variable with the same name in its controller."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "Notice how in `MainWindow`, we can invoke `TextField#clear()` on `userInput` and access its content just as we did in the previous example."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "Similarly, methods like private methods like `handleUserInput` can be used in FXML when annotated by `@FXML`. "
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "## Using FXML in our application"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "Let\u0027s create a new `Main` class as the bridge between the existing logic in `duke.Duke` and the UI in `MainWindow`."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "**Main.java**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "@Override"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    private duke.Duke duke \u003d new duke.Duke();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "Again, we can interact with the `AnchorPane` defined in the FXML as we would have if we created the `AnchorPane` ourselves."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "For our custom `DialogBox`, we did not define a controller so let\u0027s create a controller for it."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "**DialogBox.java**"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "When we create a new instance of `DialogBox`, we set both the controller and root Node to `DialogBox`. "
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "From this point onwards we can interact with `DialogBox` as we have in the previous tutorials."
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "The last change that we have to make is to point our `Launcher` class in the right direction:"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "In `Launcher.java`"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "```java"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "//...    "
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "//..."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "[todo]: # (Discussion on the fx:root pattern.)"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "## Exercises"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "1. Convert `MainWindow` to use the `fx:root` construct."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "1. Extend `MainWindow` to have a `Stage` as a root Node."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "1. Customize the appearance of the application further with CSS."
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 8,
      "-": 286
    }
  },
  {
    "path": "src/tutorials/textUiTestingTutorial.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Text UI Testing Tutorial"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "1. Create a folder `[project root]\\text-ui-test`"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add a `runtest.bat` (if you are on Windows) or `runtest.sh` (if you are on a *nix OS) into the folder, containing the script below.\u003cbr\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  `runtest.bat`:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "   @ECHO OFF"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "   REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "   if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   REM delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   del ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "   javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "       echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "       exit /b 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "   java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   REM compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "   `runtest.sh`:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   ```shell"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   #!/usr/bin/env bash"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "   # create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "       mkdir ../bin"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   # delete output from previous run"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "       rm ACTUAL.TXT"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   # compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "   if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke.Duke.java"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "   java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   # compare the output to the expected output"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   then"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 0"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   else"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "       echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "       exit 1"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   fi"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "1. Update the `javac` and `java` commands in the script to match the name/location of your main class."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `EXPECTED.txt` to the same folder, containing the expected output."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "1. Add an `input.txt` containing the input commands."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "1. Run the `.bat`/`.sh` file to execute the test."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "--------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "**Authors:**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "* Initial Version: based on se-edu/addressbook-level2, adapted by Jeffry Lum"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 4,
      "-": 70
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     Hello! I\u0027m duke.Duke, a task list chat box"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     You can key in your tasks and I\u0027ll keep track of them for you."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Guide \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     There are three types of tasks I\u0027m able to keep track of."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         Todo: use \"todo + description\" to create (e.g. todo taskInfo)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         Deadline: use \"deadline + description + /by + date\" to create (e.g. deadline taskInfo /by June 6th)."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "         Event: use \"event + description + /at + date\" to create (e.g. event taskInfo /at Mon 2-4pm)."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     You can also use \"list\" to check the recorded tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     Or use \"done + task index\" to mark the task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     To terminate me, please use \"bye\"."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "gcuka"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 3
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wyt-sonia"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wyt-sonia": 34
    }
  }
]
