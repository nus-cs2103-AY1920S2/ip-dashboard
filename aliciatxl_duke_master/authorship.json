[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "test {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 35,
      "-": 20
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "T | 1 | 123"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "D | 1 | submit | 2019-12-12 19:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "T | 0 | return book submit"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 3
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a duke program and load tasks list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a duke program and load tasks list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   filePath  File path to saved task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Run the duke program until user enters exit command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                ui.showStartLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                ui.showLine(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                ui.showEndLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        stage.setScene(scene); // Setting the stage to show our screen"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        stage.show(); // Render the stage."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 79,
      "-": 1
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 10
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public AddCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Add a Deadline/ Event/ To-do task to the task list, save the list to disk and display to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] inputTokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        switch (inputTokens[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            // Add a To-do task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            task \u003d tasks.makeNewTodoTask(command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            // Add a Deadline task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            task \u003d tasks.makeNewDeadlineTask(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            // Add an Event task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            task \u003d tasks.makeNewEventTask(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! No such task type!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! duke.task.Task could not be added!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (!storage.save(tasks)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! Failed to save list!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui.showAddTask(task, tasks.size());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 52
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public DeleteCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Delete the task from list at a specific index if index is valid, save the task list and display to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] inputTokens \u003d this.command.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        int deleteIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            deleteIndex \u003d Integer.parseInt(inputTokens[1]) - 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            Task deleteTask \u003d tasks.delete(deleteIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            ui.showDeleteTask(deleteTask, tasks.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (!storage.save(tasks)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"OOPS!!! Failed to save list!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! No such task index!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public DoneCommand(String command) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Mark a task in the task list as done if specified index is valid, save the task list and display to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] inputTokens \u003d this.command.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // Mark the task with given index as done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        int doneIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            doneIndex \u003d Integer.parseInt(inputTokens[1]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! No such task index!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (doneIndex \u003c tasks.size()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            Task task \u003d tasks.get(doneIndex);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            task.markAsDone(true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (!storage.save(tasks)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"OOPS!!! Failed to save list!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            ui.showLine(\"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    + \"       \" + task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! No such task index!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Display good bye message to user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui.showGoodBye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 23
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a find command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  command  the find command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Find tasks that contains a keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] inputTokens \u003d this.command.split(\" \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String dateString \u003d (inputTokens.length \u003e 1) ? inputTokens[1] : \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        TaskList filteredTasks \u003d filterByString(tasks, dateString);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui.prettyPrintList(filteredTasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Find tasks that contain the keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   filter the keyword to filter with"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  list    the filtered task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public TaskList filterByString(TaskList tasks, String filter) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (task.getDescription().contains(filter)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                filteredTasks.add(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 57
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * List all the tasks in the task list that was saved on the disk, and display to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the task list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   storage the storage object to save the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   ui  the ui object to interact with user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] inputTokens \u003d this.command.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String dateString \u003d (inputTokens.length \u003e 1) ? inputTokens[1] : \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        TaskList filteredTasks \u003d filterTasksByDate(tasks, dateString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        ui.prettyPrintList(filteredTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get a list of tasks that occurs at/ needs to be fulfilled by a certain date."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the list of tasks to be filtered"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  dateString    the date criteria in string format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public static TaskList filterTasksByDate(TaskList tasks, String dateString) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        TaskList filteredTasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // If there is a filter"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (!dateString.equals(\"\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                if (task instanceof Event \u0026\u0026 ((Event) task).getDate().equals(date)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    filteredTasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                } else if (task instanceof Deadline \u0026\u0026 ((Deadline) task).getDate().equals(date)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    filteredTasks.add(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            filteredTasks \u003d tasks;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return filteredTasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 59
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * The duke.exception.DukeException class represents errors that may occur while running the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 10
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Parse the command entered by user into a Command object if command exists."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  command  the input by the user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  the parsed command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @throws  DukeException   if command doesn\u0027t exist"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] commandTokens \u003d command.split(\" \");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        switch (commandTokens[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new ExitCommand(command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new ListCommand(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new DoneCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new DeleteCommand(command);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new FindCommand(command);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new AddCommand(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"OOPS!!! Cannot parse command!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 42
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a storage object with given file path."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  filePath   the file path to saved task list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the string format of a list of task objects."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the list of task objects"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  listString    the list of tasks in string format"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String convertListToString(TaskList tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            int isDone \u003d (task.getIsDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"D | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + isDone"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + task.getDescription()"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + ((Deadline) task).getDate()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + ((Deadline) task).getTime();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"E | \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + isDone"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + task.getDescription()"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + ((Event) task).getDate()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + ((Event) task).getFromTimeToTime();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"T | \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + isDone"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \" | \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + task.getDescription();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (i !\u003d tasks.size() - 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"\\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasksString;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get a list of tasks from the string format of list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasksString   the list of tasks in string format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  list    the list of task objects"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @throws  DukeException   if the data cannot be parsed into a list of tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public List\u003cTask\u003e convertStringToList(String tasksString) throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasksString.lines().forEach((listItem) -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                String[] taskItems \u003d listItem.split(\" \\\\| \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                boolean isDone \u003d (Integer.parseInt(taskItems[1]) !\u003d 0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                String[] dateOrTimeTokens;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                switch (taskItems[0]) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    task \u003d new Todo(taskItems[2]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    dateOrTimeTokens \u003d taskItems[3].split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        LocalDate deadlineDate \u003d LocalDate.parse(dateOrTimeTokens[0]);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        LocalTime time \u003d LocalTime.parse(dateOrTimeTokens[1]);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        task \u003d new Deadline(taskItems[2], deadlineDate, time);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    dateOrTimeTokens \u003d taskItems[3].split(\" \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        LocalDate eventDate \u003d LocalDate.parse(dateOrTimeTokens[0]);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        task \u003d new Event(taskItems[2], eventDate, dateOrTimeTokens[1]);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    } catch (Exception e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    task.markAsDone(isDone);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Data is corrupted.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Save the list of tasks to file on the disk."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   tasks    the list of tasks to be saved"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  isSuccessful   whether save to file is successful"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public boolean save(TaskList tasks) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String listString \u003d convertListToString(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        File dataPath \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        File newFile \u003d new File(dataPath.getAbsolutePath() + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(newFile));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            writer.write(listString);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the list of tasks from file saved on disk."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  list   the list of tasks from file"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @throws  DukeException   if the list cannot be loaded from disk or data is corrupted"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        File dataPath \u003d new File(System.getProperty(\"user.dir\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        File newFile \u003d new File(dataPath.getAbsolutePath() + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            BufferedReader reader \u003d new BufferedReader(new FileReader(newFile));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"\\n\" + line;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasks \u003d convertStringToList(tasksString.substring(1));"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Failed to load list!\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 175
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * The duke.task.Deadline class represents a task that need to be"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * done before a specific date/time e.g., submit report by 11/10/2019 5pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a deadline task from description, date and time provided."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the date of the Deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the date of the Deadline task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the time of the Deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the time of the Deadline task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"HHmm\"))"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 51
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * The duke.task.Event class represents a task that start at a specific time and ends at a specific time e.g.,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * team project meeting on 2/10/2019 2-4pm."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected String fromTimeToTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create an event task from description, date and time provided."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Event(String description, LocalDate date, String fromTimeToTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.fromTimeToTime \u003d fromTimeToTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the date of the Event task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the date of the Event task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the start and end times of the Event task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the start and end times of the Event task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String getFromTimeToTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.fromTimeToTime;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + fromTimeToTime"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * The duke.task.Task class represents a task, which has a description and whether it is completed or not."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a task from description, date and time provided."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the status icon (done or not done) of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the status icon of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Set the done status of the task to true or false."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   isDone whether the task is done or not"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void markAsDone(Boolean isDone) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the done status of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the done status of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the description of the task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 58
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Create a list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            this.tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the size of the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the size of the task list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Get the task at a specific index in the task list."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the task at a specific index in the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Task get(int getIndex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasks.get(getIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Delete the task at a specific index from the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return the deleted task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Task delete(int deleteIndex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return tasks.remove(deleteIndex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Add the task to the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   task the task to be added"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Try to make a new to-do task from the input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  taskString   the input which contains the to-do task information"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  task    the new to-do task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Todo makeNewTodoTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] todoTokens \u003d taskString.split(\" \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // If there is a description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (todoTokens.length \u003e 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return new Todo(taskString.replaceFirst(\"^todo \", \"\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Try to make a new event task from the input."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  taskString   the input which contains the event task information"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  task    the new event task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Event makeNewEventTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] eventTokens \u003d taskString.split(\" /at \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // If there is a description and a time/date"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (eventTokens.length \u003e 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            String dateOrTime \u003d eventTokens[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            String[] dateOrTimeTokens \u003d dateOrTime.split(\" \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            // If there is a date and time"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (dateOrTimeTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! duke.task.Event tasks require a specific time and date.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateOrTimeTokens[0]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                String description \u003d eventTokens[0].replaceFirst(\"^event \", \"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                return new Event(description, date, dateOrTimeTokens[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Cannot parse date or time.\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! duke.task.Event tasks require a description, \""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"and a specific time and date (e.g. 2019-12-12 2-4pm).\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Try to make a new deadline task from the input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  taskString   the input which contains the deadline task information"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  task    the new deadline task"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Deadline makeNewDeadlineTask(String taskString) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String[] deadlineTokens \u003d taskString.split(\" /by \");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // If there is a description and a deadline"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (deadlineTokens.length \u003e 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            String dateOrTime \u003d deadlineTokens[1];"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            String[] dateOrTimeTokens \u003d dateOrTime.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            // If there is a date and time"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (dateOrTimeTokens.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! duke.task.Deadline tasks require a specific time and date.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(dateOrTimeTokens[0]);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                LocalTime time \u003d LocalTime.parse(dateOrTimeTokens[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                String description \u003d deadlineTokens[0].replaceFirst(\"^deadline \", \"\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                return new Deadline(description, date, time);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Cannot parse date or time.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        throw new DukeException(\"☹ OOPS!!! duke.task.Deadline tasks require a description, \""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"and a specific time and date (e.g. 2019-12-12 1800).\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 148
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * The To-do class represents a task without any date/time attached to it"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " * e.g., visit new theme park"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 18
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.io.InputStreamReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Show the welcome message, which consists of the logo, and greeting."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // Start the duke program"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"     Hey friend! I\u0027m Duke V2.0.0 at your service\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"     What can I do for you today?\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Format the given line into a pretty format and print it."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  line   the line to be formatted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    private void prettyPrint(String line) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                \"    _____________________________DUKE___________________________\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"     \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + line"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                        + \"    _________--__--__--__--__--__--__--__--__--__--__--_________\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Format the given list into a pretty format and print it."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  tasks   the list of tasks to be formatted"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void prettyPrintList(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        // Print out all items in list"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        if (size \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasksString +\u003d \"     Here are the tasks in your list:\\n     \";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            tasksString +\u003d (i + 1) + \".\" + tasks.get(i);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            if (i !\u003d size - 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                tasksString +\u003d \"\\n     \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        tasksString \u003d tasksString.equals(\"\") ? \"There is nothing on your list.\" : tasksString;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println(tasksString);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Format the task added into a pretty format and print it."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  task   the task added"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  size   the total number of tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showAddTask(Task task, Integer size) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String taskWord \u003d (size \u003e 1) ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        showLine(\"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"       \" + task + \"\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"     Now you have \" + size + \" \" + taskWord + \" in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Format the task deleted into a pretty format and print it."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  task   the task deleted"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param  size   the total number of tasks"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showDeleteTask(Task task, Integer size) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        String taskWord \u003d (size \u003e 1) ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        showLine(\"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"       \""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + task"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"     Now you have \""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + size"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" \""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + taskWord"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Read the command entered by the user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @return  the command entered by the user"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(new InputStreamReader(System.in));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return bufferedReader.readLine();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Show on screen the top line, which is the line before the main message."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showStartLine() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println(\"    _____________________________DUKE___________________________\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Show on screen the bottom line, which is the line after the main message."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showEndLine() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println(\"    _________--__--__--__--__--__--__--__--__--__--__--_________\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Show on screen the loading error, when the list could not be loaded from disk."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        prettyPrint(\"OOPS!!! Failed to load list!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Show on screen the goodbye message."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showGoodBye() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        showLine(\"Aw goodbye for now! Hope to see you again soon :)\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * Format the line and show on screen to user."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     * @param   line   the line to be formatted"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void showLine(String line) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        System.out.println(\"     \" + line);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 151
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void parse_existingCommand_parsesCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            command \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            assertTrue(command instanceof ExitCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "            fail(\"Should not have thrown Exception.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 21
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void before() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void taskList_noList_createsEmptyTaskList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 0, \"Creating task list with no arguments should create an empty task list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void taskList_existingList_createsTaskListWithList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        List\u003cTask\u003e existingList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        existingList.add(new Todo(\"123\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        TaskList newTaskList \u003d new TaskList(existingList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(newTaskList.size(), 1, \"Creating task list with list should \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "                + \"create task list with tasks from existing list\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void getSize_getsSizeOfList() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 0, \"Size of empty list should be 0.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        taskList.add(new Todo(\"123\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 1, \"Size of list should be 1.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void delete_emptyList_doesNotDeleteTask() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertThrows(IndexOutOfBoundsException.class, () -\u003e taskList.delete(0));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 0, \"Deleting from an empty list should throw an error.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void delete_hasTasks_deletesTask() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        taskList.add(new Todo(\"123\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        taskList.delete(0);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 0, \"Deleting from a non-empty list should delete the task.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    public void add_emptyList_addsTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        taskList.add(new Todo(\"123\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "        assertEquals(taskList.size(), 1, \"Adding to empty list should add the task.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 61
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Hey friend! I\u0027m Duke V2.0.0 at your service"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     What can I do for you today?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "       [T][✘] borrow book"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Now you have 1 task in the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "       [D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "       [E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     1.[T][✘] borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     2.[D][✘] return book (by: Sunday)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     3.[E][✘] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _____________________________DUKE___________________________"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "     Sorry to see you go. Hope to see you again soon! (＾▽＾)／"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    _________★゜・。。・゜゜・。。・゜☆゜・。。・゜゜・。。・゜★_______"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aliciatxl"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "aliciatxl": 34
    }
  }
]
