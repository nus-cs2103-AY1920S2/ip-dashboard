[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    archiveBaseName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 29,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "T\u003etrue\u003e submit assignment"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "D\u003etrue\u003eDo tutorial 2\u003e2020-01-29\u003e23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "E\u003etrue\u003eCNY event\u003e2020-01-29\u003e19:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "E\u003etrue\u003elab\u003e2020-01-30\u003e09:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "T\u003efalse\u003e Do laundry"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 5
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Creates a DialogBox for GUI to show the user\u0027s input and bot\u0027s response."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Creates a DialogBox for GUI to show the user\u0027s input and bot\u0027s response."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a DialogBox with user\u0027s input and image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param text User\u0027s Input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param img Image of user"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return DialogBos with user\u0027s input and image"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a DialogBox with bot\u0027s response and image."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param text Bot\u0027s response"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param img Image of bot"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return DialogBos with bot\u0027s reponse and image"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 77
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents Duke, the chat bot."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Constructs a Duke object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param filePath File path to the file that stores the Tasks data"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Runs Duke, the chat bot."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                c.execute(tasks, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        storage.saveFile(tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Command command \u003d p.parse(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        response \u003d command.execute(tasks, ui);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 72,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String filePath \u003d \"data\" + File.separator + \"duke.txt\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 35
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Stage stage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/photo1.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/photo2.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        welcomeMsg();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Sets variable duke as current duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param d current duke"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Sets variable stage as current stage."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param s current stage"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void setStage(Stage s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        stage \u003d s;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Shows the welcome message in a DialogBox when the bot starts."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void welcomeMsg() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                DialogBox.getDukeDialog(\"    Hey there! I\u0027m DingDing!\\n\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    What\u0027s up today? ;D\", dukeImage));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 81
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private Storage storage \u003d new Storage(\"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the Bye command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param ui       Overall Ui handling the ui of Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Returns the response of the bot to this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        storage.saveFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(\"    Bye! See ya later, alligator!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return \"    Bye! See ya later, alligator!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DateValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Command(i.e. ListCommand, DeleteCommand, ByeCommand). All Command extends this class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateValidator DATE_VALIDATOR \u003d new DateValidator(DATE_FORMATTER);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateValidator TIME_VALIDATOR \u003d new DateValidator(TIME_FORMATTER);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isValidDate(String s) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return DATE_VALIDATOR.isValidDate(s);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isValidTime(String s) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return TIME_VALIDATOR.isValidTime(s);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DateTimeFormatter getDateFormatter() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return DATE_FORMATTER;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DateTimeFormatter getTimeFormatter() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return TIME_FORMATTER;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalDate parseValidDate(String s) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return LocalDate.parse(s, getDateFormatter());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalTime parseValidTime(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return LocalTime.parse(s, getTimeFormatter());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 59
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String[] replyArr;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DateCommand(String instruction, String[] replyArr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.replyArr \u003d replyArr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.showTaskOnDate(replyArr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private LocalDate formattedDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private LocalTime formattedTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Deadline deadLine;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DeadlineCommand(String instruction, String details) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the Deadline command and its details. It checks if the details are valid and how many of the date and/or"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * time is/are specified. If only the Date is specified, the Deadline task will only have a date. If only the Time"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * is specified, the Deadline Task will be set to today\u0027s Date and the specified Time. If both the Date and Time are"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * specified, the Deadline task will be set to the specified Date and Time. Then the Deadline task will"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * be added into the TaskList."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If details of Deadline is invalid(i.e. insufficient arguments, argument in incorrect"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *                       format)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] taskReplyArr \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] taskInstrArr \u003d taskReplyArr[0].trim().split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String task \u003d taskInstrArr[0].trim();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            for (int i \u003d 1; i \u003c taskInstrArr.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                task +\u003d \" \" + taskInstrArr[i];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String timeDate \u003d taskReplyArr[1].trim();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String[] timeDateArr \u003d timeDate.split(\" \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            if (timeDateArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (isValidDate(timeDateArr[0]) \u0026\u0026 isValidTime(timeDateArr[1])) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createDeadlineWithTimeDate(taskList, task, timeDateArr);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(deadLine, taskList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else if (timeDateArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (isValidDate(timeDateArr[0])) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createDeadlineWithDate(taskList, task, timeDateArr[0]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(deadLine, taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else if (isValidTime(timeDateArr[0])) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createDeadlineWithTime(taskList, task, timeDateArr[0]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(deadLine, taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                return ui.deadlineInputError();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return ui.deadlineInputError();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return ui.deadlineInputError();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createDeadlineWithTimeDate(TaskList taskList, String task, String[] timeDateArr) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedDate \u003d parseValidDate(timeDateArr[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedTime \u003d parseValidTime(timeDateArr[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        deadLine \u003d new Deadline(task, formattedDate, formattedTime, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(deadLine);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createDeadlineWithDate(TaskList taskList, String task, String date) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedDate \u003d parseValidDate(date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        deadLine \u003d new Deadline(task, formattedDate, false);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(deadLine);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createDeadlineWithTime(TaskList taskList, String task, String time) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedTime \u003d parseValidTime(time);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        deadLine \u003d new Deadline(task, LocalDate.now(), formattedTime, false);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(deadLine);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 87
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a command that deletes a Task from the TaskList that extends the Command class. A DeleteCommand object"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * corresponds to a command type represented by a String followed by the necessary details of the command (e.g."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * delete 3)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String[] replyArr;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DeleteCommand(String instruction, String[] replyArr) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.replyArr \u003d replyArr;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Runs the method deleteInstruction in the TaskList by passing in the details of the delete command(i.e. task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * number of the task to be deleted)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param ui       Overall Ui handling the ui of Duke"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.deleteTask(replyArr);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String[] replyArr;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DoneCommand(String instruction, String[] replyArr) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.replyArr \u003d replyArr;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui)  {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.markTaskAsDone(replyArr);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 20
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private LocalDate formattedDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private LocalTime formattedTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Event event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public EventCommand(String instruction, String details) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the Event command and its details. It checks if the details are valid and how many of the date and/or"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * time is/are specified. If only the Date is specified, the Event task will only have a date. If only the Time"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * is specified, the Event Task will be set to today\u0027s Date and the specified Time. If both the Date and Time are"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * specified, the Event task will be set to the specified Date and Time. Then the Event task will"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * be added into the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If details of Event is invalid(i.e. insufficient arguments, argument in incorrect"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *                       format)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] taskReplyArr \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] taskInstrArr \u003d taskReplyArr[0].trim().split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String task \u003d taskInstrArr[0].trim();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            for (int i \u003d 1; i \u003c taskInstrArr.length; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                task +\u003d \" \" + taskInstrArr[i];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String timeDate \u003d taskReplyArr[1].trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String[] timeDateArr \u003d timeDate.split(\" \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            if (timeDateArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (isValidDate(timeDateArr[0]) \u0026\u0026 isValidTime(timeDateArr[1])) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createEventWithTimeDate(taskList, task, timeDateArr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(event, taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else if (timeDateArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (isValidDate(timeDateArr[0])) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createEventWithDate(taskList, task, timeDateArr[0]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(event, taskList);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else if (isValidTime(timeDateArr[0])) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    createEventWithTime(taskList, task, timeDateArr[0]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    return ui.showTaskAdded(event, taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                return ui.eventInputError();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return ui.eventInputError();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return ui.eventInputError();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createEventWithTimeDate(TaskList taskList, String task, String[] timeDateArr) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedDate \u003d parseValidDate(timeDateArr[0]);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedTime \u003d parseValidTime(timeDateArr[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        event \u003d new Event(task, formattedDate, formattedTime, false);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createEventWithDate(TaskList taskList, String task, String date) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedDate \u003d parseValidDate(date);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        event \u003d new Event(task, formattedDate, false);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private void createEventWithTime(TaskList taskList, String task, String time) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        formattedTime \u003d parseValidTime(time);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        event \u003d new Event(task, LocalDate.now(), formattedTime, false);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 86
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String[] replyArr;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public FindCommand(String instruction, String[] replyArr) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.replyArr \u003d replyArr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the Find command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param ui       Overall Ui handling the ui of Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Returns the response of the bot to this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.findTaskByKeyword(replyArr);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 25
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String[] replyArr;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public ListCommand(String instruction, String[] replyArr) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.replyArr \u003d replyArr;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the List command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param ui       Overall Ui handling the ui of Duke"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Returns the response of the bot to this command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.listTasks();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 25
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String details;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public TodoCommand(String instruction, String details) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the Todo command and its details. Then the Todo task will be added into the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If details of Todo is invalid(i.e. insufficient arguments)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] replyArr \u003d details.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String replyWoSpace \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        for (int i \u003d 1; i \u003c replyArr.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            replyWoSpace +\u003d replyArr[i] + \" \";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (!replyWoSpace.equals(\"\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            Todo toDo \u003d new Todo(replyWoSpace, false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            taskList.addTask(toDo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return Ui.showTaskAdded(toDo, taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return Ui.todoInputError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 37
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String instruction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public UnknownCommand(String instruction) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.instruction \u003d instruction;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Handles the unknown command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList Overall TaskList of all the Tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param ui       Overall Ui handling the ui of Duke"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Returns the response of the bot to this command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Sorry! I don\u0027t understand what is \" + instruction;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 24
    }
  },
  {
    "path": "src/main/java/duke/other/DateValidator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a date validator to check is a date is formatted in a specified format. A DateValidator object"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * corresponds to a Date Formatter of a specific date format."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DateValidator {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private DateTimeFormatter dateFormatter;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DateValidator(DateTimeFormatter dateFormatter) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.dateFormatter \u003d dateFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a boolean if the format of the date inserted corresponds to the Date Formatter."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param dateStr String of the date to be validated"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return boolean of whether the format of the date corresponds to the Date Formatter"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isValidDate(String dateStr) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            LocalDate.parse(dateStr, this.dateFormatter);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a boolean if the format of the time inserted corresponds to the Time Formatter."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param timeStr String of the time to be validated"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return boolean of whether the format of the time corresponds to the Time Formatter"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isValidTime(String timeStr) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            LocalTime.parse(timeStr, this.dateFormatter);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 49
    }
  },
  {
    "path": "src/main/java/duke/other/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents an Exception, specific to Duke. A DukeException object corresponds to an exception represented by a String"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * error message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 19
    }
  },
  {
    "path": "src/main/java/duke/other/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.DateCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Parser that extracts out the command type and its details from a full String command input by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a Command object corresponding to the command type extracted."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param fullCommand Full String input by the user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Command object corresponding to the command type(i.e.TodoCommand if command type is Todo)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If the command type is invalid (i.e. hi, why)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static Command parse(String fullCommand)  {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] replyArr \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String instruction \u003d replyArr[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        switch (instruction) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            ByeCommand c \u003d new ByeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return c;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new DateCommand(instruction, replyArr);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new DeadlineCommand(instruction, stringifyArray(replyArr));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new DeleteCommand(instruction, replyArr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new DoneCommand(instruction, replyArr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new EventCommand(instruction, stringifyArray(replyArr));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new FindCommand(instruction, replyArr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new ListCommand(instruction, replyArr);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new TodoCommand(instruction, stringifyArray(replyArr));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return new UnknownCommand(instruction);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the details of the command without the command type in a String."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param replyArr Array of String of the full command input by the user, split by \" \""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Returns a String of the details of the command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String stringifyArray(String[] replyArr) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String details \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        for (int i \u003d 1; i \u003c replyArr.length; i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            details +\u003d \" \" + replyArr[i];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 74
    }
  },
  {
    "path": "src/main/java/duke/other/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents the Storage of the Tasks. A Storage object corresponds to an file via a file path."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an ArrayList of Tasks loaded from the file specified by the file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return An ArrayList of Tasks"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws FileNotFoundException If the file is not found in the file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        File noteFile \u003d new File(path.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (Files.notExists(path)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            noteFile \u003d new File(\"data\" + File.separator + \"duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            noteFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            noteFile.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return fileToArray(noteFile.toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an ArrayList of Tasks, after converting the Tasks in the file into the corresponding Tasks objects and"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * adding them into an ArrayList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param filePath file path of the input file of Tasks"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return ArrayList of Tasks containing all the Tasks from the input file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws FileNotFoundException If the file is not found in the file path"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static ArrayList\u003cTask\u003e fileToArray(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String note \u003d sc.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String[] noteArr \u003d note.split(\"\u003e\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String noteType \u003d noteArr[0];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            boolean taskIsDone \u003d (noteArr[1]).equals(\"true\") ? true : false;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String taskDesc \u003d noteArr[2];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            if (noteType.equals(\"T\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                taskList.add(new Todo(taskDesc, taskIsDone));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else if (noteType.equals(\"E\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (noteArr.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    taskList.add(new Event(taskDesc, LocalDate.parse(noteArr[3]), LocalTime.parse(noteArr[4]),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                            taskIsDone));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else if (noteArr.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    taskList.add(new Event(taskDesc, LocalDate.parse(noteArr[3]), taskIsDone));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (noteArr.length \u003d\u003d 5) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    taskList.add(new Deadline(taskDesc, LocalDate.parse(noteArr[3]), LocalTime.parse(noteArr[4]),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                            taskIsDone));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else if (noteArr.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    taskList.add(new Event(taskDesc, LocalDate.parse(noteArr[3]), taskIsDone));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a String to be stored in the file specified by the file path, after converting the Tasks objects into"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Strings."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param tasks TaskList of all the Tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of all Tasks, in the format for storage"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String stringifyArray(TaskList tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.taskList;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String outputToFile \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String taskType \u003d task.getClass().getSimpleName();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String taskDesc \u003d task.getDescription();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            boolean taskIsDone \u003d task.isDone;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            if (taskType.equals(\"Todo\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                outputToFile +\u003d \"T\u003e\" + taskIsDone + \"\u003e\" + taskDesc + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else if (taskType.equals(\"Event\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (((Event) task).isTime) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    outputToFile +\u003d \"E\u003e\" + taskIsDone + \"\u003e\" + taskDesc + \"\u003e\" + ((Event) task).getDate() + \"\u003e\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                            + ((Event) task).getTime() + \"\\n\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    outputToFile +\u003d \"E\u003e\" + taskIsDone + \"\u003e\" + taskDesc + \"\u003e\" + ((Event) task).getDate() + \"\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (((Deadline) task).isTime) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    outputToFile +\u003d \"D\u003e\" + taskIsDone + \"\u003e\" + taskDesc + \"\u003e\" + ((Deadline) task).getDate() + \"\u003e\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                            + ((Deadline) task).getTime() + \"\\n\";"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    outputToFile +\u003d \"D\u003e\" + taskIsDone + \"\u003e\" + taskDesc + \"\u003e\" + ((Deadline) task).getDate() + \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return outputToFile;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Writes the String of all the Tasks in storage format to the file of the specified file path."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param filePath  file path of the file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param textToAdd String of all the Tasks in storage format"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws IOException If the file path is invalid"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Path path \u003d Paths.get(filePath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        File noteFile \u003d new File(path.toString());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        FileWriter fw \u003d new FileWriter(noteFile);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        bw.write(textToAdd);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Runs the writeToFile method."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList TaskList of all the tasks"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void saveFile(TaskList taskList) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            writeToFile(filePath, stringifyArray(taskList));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 156
    }
  },
  {
    "path": "src/main/java/duke/other/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents the UI of Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints the welcome message when the user runs Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String greeting \u003d \"    Hey there! I\u0027m DingDing!\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    What\u0027s up today? ;D\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        printWithBorder(greeting);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Reads the user input and returns it."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return The user\u0027s input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints out the error message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param errMessage Error message"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String showError(String errMessage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(errMessage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return errMessage;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints out the loading error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String print \u003d \"    No task list found! Creating new task list...\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(print);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return print;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints out the feedback when a task is added and the task added."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param task     The added task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param taskList TaskList to add the task into"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String showTaskAdded(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String print \u003d \"    Alright! Task added:\\n      \" + task.toString() + \"\\n    Now you have \""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + taskList.getSize() + \" task(s) in your list!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(print);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return print;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the deadline command."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the deadline command"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwDeadlineInputError() throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(deadlineInputError());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the event command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the event command"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwEventInputError() throws DukeException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(eventInputError());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the todo command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the todo command"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwTodoInputError() throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(todoInputError());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the date command."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the date command"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwDateInputError() throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(dateInputError());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the done command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the done command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwDoneInputError() throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(doneInputError());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Throws a DukeException when there is an invalid input for the delete command."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If there is an invalid input for the delete command"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void throwDeleteInputError() throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        throw new DukeException(deleteInputError());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints the border line."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(\"    ###################################################\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints the message in between border lines."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param message Message to be printed between 2 border lines"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static void printWithBorder(String message) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(message + \"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the deadline command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String deadlineInputError() {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Invalid date and/or time format! \\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    Specify deadline with: /at \u003cYYYY/MM/DD\u003e \u003cHH:MM\u003e\\n\""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    i.e. deadline Project Meeting /by 2020/01/28 18:00\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the event command."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String eventInputError() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Invalid date and/or time format! \\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    Specify event with: /at \u003cYYYY/MM/DD\u003e \u003cHH:MM\u003e\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    i.e. event Project Meeting /at 2020/01/28 18:00\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the todo command."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String todoInputError() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Specify your todo \\n\" + \"    i.e. todo Complete tutorials \";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the date command."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String dateInputError() {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Please enter a valid date in \u003cYYYY/M/D\u003e format\\n\""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                + \"    i.e. 2020/10/28\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the done command."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String doneInputError() {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Task doesn\u0027t exist!\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns an error message when there is an invalid input for the delete command."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public static String deleteInputError() {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Task doesn\u0027t exist! Add a new task!\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 203
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Deadline task that extends the TaskDate class. A Deadline object is represented by a String description,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * boolean isDone, LocalDate date and LocalTime time, if a time is specified."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Deadline extends TaskDate {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Constructs a Deadline object with a description, date and isDone boolean."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param date        date of deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param isDone      boolean of whether this deadline task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Deadline(String description, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isTime \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Constructs a Deadline object with a description, date, time and isDone boolean."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param description description of deadline"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param date        date of deadline"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param time        time of deadline"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param isDone      boolean of whether this deadline task is done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Deadline(String description, LocalDate date, LocalTime time, boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isTime \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the LocalDate of the Deadline task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return LocalDate of Deadline task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the LocalTime of the Deadline task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return LocalTime of Deadline task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String formattedDate \u003d (this.date).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (isTime) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String formattedTime \u003d (this.time).format(DateTimeFormatter.ofPattern(\"h:mma\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by:\" + formattedDate + \" \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return \"[D]\" + super.toString() + \" (by:\" + formattedDate + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents an Event task that extends the TaskDate class. An Event object is represented by a String description,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * boolean isDone, LocalDate date and LocalTime time, if a time is specified."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Event extends TaskDate {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Constructs an Event object with a description, date and isDone boolean."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param date        date of event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param isDone      boolean of whether this event task is done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Event(String description, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isTime \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Constructs an Event object with a description, date, time and isDone boolean."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param description description of event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param date        date of event"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param time        time of event"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param isDone      boolean of whether this event task is done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime time, boolean isDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        isTime \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the LocalDate of the Event task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return LocalDate of Event task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the LocalTime of the Event task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return LocalTime of Event task"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public LocalTime getTime() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String formattedDate \u003d (this.date).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (isTime) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String formattedTime \u003d (this.time).format(DateTimeFormatter.ofPattern(\"h:mma\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at:\" + formattedDate + \" \" + formattedTime + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at:\" + formattedDate + \")\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 75
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Task(i.e. Todo) and a TaskDate(Which represented a Task with Date element(s) i.e. Deadline and Event)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * A Task object corresponds to a Task represented by a String description and a boolean isDone. TaskDate (abstract,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Deadline and Event extend from this class) and Todo classes extend from this class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns a String corresponding to the Task\u0027s status represented by the boolean isDone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return \"Y\" if isDone is true and \"X\" if isDone is false"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return (isDone ? \"Y\" : \"X\"); //return Y or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Description of Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 39
    }
  },
  {
    "path": "src/main/java/duke/task/TaskDate.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Task with date and/or time element(s), extending from the Task class. Deadline and Event classes extend"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * from this class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public abstract class TaskDate extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public TaskDate(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    abstract LocalDate getDate();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 15
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DateValidator;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.other.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represented a TaskList of all the Tasks. A TaskList object corresponds with a list of all the tasks loaded from the"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * data file or a new list to store all the tasks if the data file is non-existent."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    private static final DateValidator DATE_VALIDATOR \u003d new DateValidator(DATE_FORMATTER);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Adds new task to the TaskList."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Returns the size of the current TaskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return Size of TaskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints out all the Tasks in the current TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of all the tasks"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String completeList \u003d \"    Task(s) in your list:\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            completeList +\u003d \"\\n    \" + ((taskList.indexOf(task) + 1) + \".\" + task.toString());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(completeList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return completeList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Prints out all the Tasks in the current TaskList that corresponds to the date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param replyArr Array of the command + details of the command after splitting it by \" \""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of all tasks on the date"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If the input date is invalid (i.e. incorrect format)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String showTaskOnDate(String[] replyArr) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (DATE_VALIDATOR.isValidDate(replyArr[1])) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(replyArr[1], DATE_FORMATTER);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String taskOnDate \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            for (Task task : taskList) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                if (task instanceof TaskDate) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    if (((TaskDate) task).getDate().equals(date)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                        taskOnDate +\u003d \"\\n      \" + task.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String tasksToday \u003d \"    The task(s) you have on \" + replyArr[1] + \":\" + taskOnDate;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            System.out.println(tasksToday);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return tasksToday;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            assert DATE_VALIDATOR.isValidDate(replyArr[1]) \u003d\u003d false : replyArr[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return Ui.dateInputError();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Marks the specified task as done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param replyArr Array of the done command \u0026 task number of the element of the done command"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of bot\u0027s response"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If task number specified does not exist in the TaskList (e.g. done 5 when there is only 4"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *                       tasks)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String markTaskAsDone(String[] replyArr) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        int taskNum \u003d Integer.parseInt(replyArr[1]) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        if (taskNum \u003e taskList.size() - 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return Ui.doneInputError();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            Task currTask \u003d taskList.get(taskNum);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            currTask.isDone \u003d true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String doneMsg \u003d \"    Nice! Task marked as done: \\n    \" + currTask.toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            System.out.println(doneMsg);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return doneMsg;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Deletes the specified task from the TaskList."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param replyArr Array of the delete command \u0026 task number of the element of the delete command"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of bot\u0027s response"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @throws DukeException If task number specified does not exist in the TaskList (e.g. delete 5 when there is only 4"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     *                       tasks)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String deleteTask(String[] replyArr) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            int taskNum \u003d Integer.parseInt(replyArr[1]) - 1;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            Task currTask \u003d taskList.get(taskNum);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            String deleteMsg \u003d \"    Okay! Task removed: \\n      \" + currTask.toString() + \"\\n    Now you have \""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                    + (taskList.size() - 1) + \" task(s) in your list!\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            System.out.println(deleteMsg);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            taskList.remove(taskNum);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return deleteMsg;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            return Ui.deleteInputError();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * Finds and prints out tasks with a certain keyword."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @param replyArr Array of the find command \u0026 the specified keyword"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     * @return String of all tasks with keyword(s)"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String findTaskByKeyword(String[] replyArr) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String keyword \u003d replyArr[1];"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String taskWithKeyword \u003d \"\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                taskWithKeyword +\u003d \"    \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String msg \u003d \"    Task(s) with keyword \" + replyArr[1] + \":\\n\" + taskWithKeyword;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 148
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * Represents a Todo task that extends the Task class. A Todo object is represented by a String description and boolean"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " * isDone."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.image.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003c/font\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "   \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "      \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "   \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 25
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003cFont name\u003d\"Segoe UI\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "         \u003c/opaqueInsets\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 27
    }
  },
  {
    "path": "src/test/java/duke/other/DateValidatorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "class DateValidatorTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void isValidDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        DateValidator dv \u003d new DateValidator(DateTimeFormatter.ofPattern(\"yyyy/M/d\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(true, dv.isValidDate(\"2020/01/30\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void isValidTime() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        DateValidator dv \u003d new DateValidator(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(true, dv.isValidTime(\"18:30\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 23
    }
  },
  {
    "path": "src/test/java/duke/other/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void stringifyDetailsTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        String[] replyArr \u003d {\"event\", \"CNY event /at 2020/1/30\"};"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(\" CNY event /at 2020/1/30\", Parser.stringifyArray(replyArr));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 15
    }
  },
  {
    "path": "src/test/java/duke/other/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.other;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "class StorageTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void saveFile() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        ArrayList taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        LocalDate formattedDate \u003d LocalDate.parse(\"2020/01/30\", DateTimeFormatter.ofPattern(\"yyyy/M/d\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.add(new Todo(\"Submit assignment\", true));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        taskList.add(new Event(\"CNY Celebration\", formattedDate, false));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        TaskList tasks \u003d new TaskList(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(\"T\u003etrue\u003eSubmit assignment\\n\" + \"E\u003efalse\u003eCNY Celebration\u003e2020-01-30\\n\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "                Storage.stringifyArray(tasks));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 29
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Todo task \u003d new Todo(\"Eat dinner\", false);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(\"X\", task.getStatusIcon());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    void getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        Event event \u003d new Event(\"CNY Visiting\", LocalDate.now(), false);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "        assertEquals(\"CNY Visiting\", event.getDescription());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Denise-Ng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Denise-Ng": 21
    }
  }
]
