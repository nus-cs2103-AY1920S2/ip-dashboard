[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 22,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static void main(String[] args) throws IOException,Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String mesInput \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        TaskList tList \u003d new TaskList(arrTask);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Ui uiDisplay \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Storage  fileStorage \u003d new Storage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        while(!mesInput.equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            mesInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String [] s \u003d new String[2];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            Parser userCommand \u003d new Parser(mesInput,uiDisplay,fileStorage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            if(mesInput.equalsIgnoreCase(\"bye\")){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            if(userCommand.getCommandType(mesInput).equals(\"todo\") \u0026\u0026 !mesInput.equalsIgnoreCase(\"todo\")){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    System.out.println(userCommand.todoTaskCommand(mesInput,arrTask,uiDisplay,f));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if(userCommand.getCommandType(mesInput).equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                TaskList tList \u003d new TaskList(arrTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                tList.printTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if (userCommand.getCommandType(mesInput).equalsIgnoreCase(\"deadline\") \u0026\u0026 !mesInput.equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    System.out.println(userCommand.deadlineCommand(mesInput,arrTask,uiDisplay,f));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if (userCommand.getCommandType(mesInput).equalsIgnoreCase(\"event\" ) \u0026\u0026 !mesInput.equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    System.out.println(userCommand.eventCommand(mesInput,arrTask,uiDisplay,f));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if (userCommand.getCommandType(mesInput).equalsIgnoreCase(\"done\") \u0026\u0026 !mesInput.equalsIgnoreCase(\"done\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    System.out.println(userCommand.doneCommand(mesInput,arrTask,uiDisplay));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if(mesInput.contains(\"delete\") \u0026\u0026 !mesInput.equalsIgnoreCase(\"delete\")){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    userCommand.deleteCommand(mesInput,arrTask,uiDisplay);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if (mesInput.equalsIgnoreCase(\"todo\")){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if(mesInput.equalsIgnoreCase(\"deadline\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of a deadlines cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else if(mesInput.equalsIgnoreCase(\"event\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    throw new IncorrectInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        System.out.println(uiDisplay.returnExitsMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "class Deadline extends Task{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String by ;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Deadline(String description, String by){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.by\u003d by;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[D][\" +super.getStatusIcon()+ \"] \"+ super.getDescription() + \"(\" + by +\")\" ;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String at ;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Event(String description, String at){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.at\u003d at;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[E][\" + super.getStatusIcon()+ \"] \"+ super.getDescription() + \"(\" + at +  \")\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 90,
      "-": 5
    }
  },
  {
    "path": "src/main/java/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class IncorrectInputException extends Exception{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public IncorrectInputException(String errorMsg){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 7
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Ui uiDisplay;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Storage fileStorage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Parser(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Parser(String command,Ui uiDisplay,Storage fileStorage){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.command \u003d command ;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.uiDisplay \u003d uiDisplay;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.fileStorage \u003d fileStorage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getCommandType (String command){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] s ;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        s \u003d command.split(\" \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return s[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String todoTaskCommand(String command, ArrayList\u003cTask\u003e tasks,Ui uiDisplay,File f)throws Exception{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] s \u003d command.split(\"todo \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        tasks.add(new Task(s[1]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseTopMes \u003d uiDisplay.getTopTwoLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String taskMes \u003d \"   \"+tasks.get(tasks.size()-1).toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseBottomMes \u003d uiDisplay.getBottomTwoLine(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        fileStorage.writeFile(\"todo\",s[1],f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return uiDisplay.parserOutputMess(customeriseTopMes,taskMes,customeriseBottomMes);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String eventCommand(String command,ArrayList\u003cTask\u003e tasks,Ui uiDisplay,File f) throws Exception{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] s \u003d command.split(\"event \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] temp \u003d s[1].split(\"/\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String taskName \u003d temp[0];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String date \u003d formatDate(temp[1].substring(3,temp[1].length()));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseTopMes \u003d uiDisplay.getTopTwoLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        tasks.add(new Deadline(taskName,date));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String taskMes \u003d \"     \"+tasks.get(tasks.size()-1).toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseBottomMes \u003d uiDisplay.getBottomTwoLine(tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        fileStorage.writeFile(\"deadline\",taskName+date,f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return uiDisplay.parserOutputMess(customeriseTopMes,taskMes,customeriseBottomMes);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String deadlineCommand(String command,ArrayList\u003cTask\u003e tasks,Ui uiDisplay,File f) throws Exception{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] s \u003d command.split(\"deadline \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String[] temp \u003d s[1].split(\"/\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String taskName \u003d temp[0];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String date \u003d formatDate(temp[1].substring(3,temp[1].length()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseTopMes \u003d uiDisplay.getTopTwoLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        tasks.add(new Event(taskName, date));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String taskMes \u003d \"     \" + tasks.get(tasks.size()-1).toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String customeriseBottomMes \u003d uiDisplay.getBottomTwoLine(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        fileStorage.writeFile(\"deadline\",taskName+date,f);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return uiDisplay.parserOutputMess(customeriseTopMes,taskMes,customeriseBottomMes);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String doneCommand(String command,ArrayList\u003cTask\u003e tasks,Ui uiDisplay){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        if(tasks.size()\u003e0){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String [] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            int arrPos \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            tasks.get(arrPos-1).setDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String doneMesTop \u003d uiDisplay.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String doneResult \u003d \"    [\"+tasks.get(arrPos-1).getStatusIcon()+\"] \"+tasks.get(arrPos-1).getDescription();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String doneMesBot \u003d \"  -------------\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            return uiDisplay.parserOutputMess(doneMesTop,doneResult,doneMesBot);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            return \"  Sorry there is no any task for you to do the command\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void deleteCommand(String command,ArrayList\u003cTask\u003e tasks,Ui uiDisplay){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String [] temp \u003d command.split(\" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        int arrPos \u003d Integer.parseInt(temp[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        uiDisplay.removeTaskMes();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        System.out.println(\"    \"+tasks.get(arrPos-1).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        tasks.remove(arrPos-1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        uiDisplay.getBottomTwoLine(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static String formatDate(String date) throws Exception{"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Date date1\u003dformatter.parse(date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        formatter \u003d new SimpleDateFormat(\"E, MMM d yyyy\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return (formatter.format(date1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 93
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String command ;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Storage(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Storage (String command, String task){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void setCommand(String command){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void setTask(String tasks){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static void writeFile(String command,String task,File f) throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        BufferedWriter br \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        br.write(command+\" || \"+task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        br.newLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        br.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            System.out.println(\"Load data from duke text file \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            while(s.hasNext()){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                System.out.println(\"     \"+s.nextLine());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 55
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Task(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Task(String description){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void setDone(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getStatusIcon(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return ( isDone ? \"✓\" : \"✗\" );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[T][\"+this.getStatusIcon()+\"] \"+this.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 28
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks ){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.arrTask \u003d tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void printTaskList(){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        for (int i \u003d 0; i \u003c arrTask.size() ; i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            System.out.println((i + 1) + \". \" + arrTask.get(i).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 18
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getTopTwoLine() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"----------------- \" + \u0027\\n\u0027 + \"   Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getBottomTwoLine(ArrayList\u003cTask\u003e tList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"   Now you have \" + tList.size() + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"-----------------  \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String returnExitsMessage() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"    Bye. Hope to see you again\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"  --------------\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"    Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void removeTaskMes() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        System.out.println( \"  --------------\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String parserOutputMess(String topMessage, String output, String bottomMessage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return topMessage + \"\\n\" + output + \"\\n\" + bottomMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 36
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Ui uiDispay \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Storage fileStorage \u003d  new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void byeCommadTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"bye\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"  --------------\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"    Bye. Hope to see you again\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"  --------------\",uiDispay.returnExitsMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void todoCommandTest() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"todo read book\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"----------------- \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   [T][✗] read book \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   Now you have 1 tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"-----------------\",commandParser.todoTaskCommand(\"todo read book\",arrTask,uiDispay,f));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void doneCommandTest() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"done 1\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"  Sorry there is no any task for you to do the command\",commandParser.doneCommand(\"done 1\",arrTask,uiDispay));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 45
    }
  },
  {
    "path": "text-ui-test",
    "fileType": "other",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 21
    }
  }
]
