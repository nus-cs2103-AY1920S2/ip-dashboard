[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \u0027Main-Class\u0027: \"Duke\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        )"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 38,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "# **User Guide**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "## 1.Features"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "### _Todo, Deadline, Event, Done, Find**_ "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.1 Todo   "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    todo is a task without any time or deadlines assigned to: "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Example: user can add a todo task -- Visit NTU "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: Todo [activity]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: Todo NTU "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ---------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Got it i va added the this task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     [T][NotDone]visit NTU Tag:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Now you have 1 task in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     ----------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "       "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.2 Deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Deadline is deadline task with a date is assigned to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: deadline [activity] [/by yyyy-mm-dd]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: deadline return book /by 2019-10-19"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output:----------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Now you have 2 task in the list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                 "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.3 Event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Event is a event task with a date is assigned to it. "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: event [activity] [/at yyyy-mm--dd]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: event project meeting /at 2019-12-24"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ---------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     [D][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Now you have 3 task in the list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     -------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.4 List "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Display all the task in the list "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format:list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: --------------------"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    1. [T][NotDone] visit NTU tag:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    2. [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    3. [E][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -----------------------"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                         "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.5 Done "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Done command is used to update a task status in the task list "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: done [index of task]"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage done 1 "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: --------------------"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     1. [T][Done] visit NTU tag:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     2. [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     3. [E][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     -----------------------"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.6 Find "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Find command allows user to search his/her task with keywords entered. The apps will return matching words"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: find [keywords]"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: find visit"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: -----------------"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Here are the matching tasks in your list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    1.[T][NoDone] visit NTU tag:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------------------"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.7 Tag"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Add a tag to the task "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: tag [keywords] as [#tag]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage tag visit as work "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ------------------"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    the tag work is successfully added to visit NTU "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------------------"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.8 Delete "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    delete command allows user to deleta a task or event or deadline that he entered"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: delete [index of task]"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage delete 2"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ------------------"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Got it, i\u0027ve removed thi task "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    [E][NotDone] return book (Sat, Oct 19 2019)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    --------------------"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 78,
      "-": 5
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "[T][✗] read book"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 1
    }
  },
  {
    "path": "src/main/docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "# **User Guide**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "## 1.Features"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "### _Todo, Deadline, Event, Done, Find**_ "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.1 Todo   "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    todo is a task without any time or deadlines assigned to: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Example: user can add a todo task -- Visit NTU "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: Todo [activity]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: Todo NTU "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ---------"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Got it i va added the this task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     [T][NotDone]visit NTU Tag:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Now you have 1 task in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     ----------"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "       "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.2 Deadline"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Deadline is deadline task with a date is assigned to"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: deadline [activity] [/by yyyy-mm-dd]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: deadline return book /by 2019-10-19"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output:----------"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Now you have 2 task in the list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                 "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.3 Event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Event is a event task with a date is assigned to it. "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: event [activity] [/at yyyy-mm--dd]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: event project meeting /at 2019-12-24"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ---------"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     [D][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     Now you have 3 task in the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     -------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.4 List "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Display all the task in the list "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format:list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: list"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: --------------------"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    1. [T][NotDone] visit NTU tag:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    2. [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    3. [E][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -----------------------"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                         "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.5 Done "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Done command is used to update a task status in the task list "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: done [index of task]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage done 1 "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: --------------------"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     1. [T][Done] visit NTU tag:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     2. [D][NotDone] return book (Sun, Oct 19 2019)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     3. [E][NotDone] project meeting (Tue, Dec 24 2019)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     -----------------------"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                     "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.6 Find "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Find command allows user to search his/her task with keywords entered. The apps will return matching words"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: find [keywords]"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage: find visit"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: -----------------"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Here are the matching tasks in your list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    1.[T][NoDone] visit NTU tag:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------------------"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "#### 1.7 Tag"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Add a tag to the task "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: tag [keywords] as [#tag]"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage tag visit as work "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ------------------"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    the tag work is successfully added to visit NTU "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    -------------------"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "####1.8 Delete "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    delete command allows user to deleta a task or event or deadline that he entered"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Format: delete [index of task]"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Usage delete 2"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    Expected Output: ------------------"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Got it, i\u0027ve removed thi task "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    [E][NotDone] return book (Sat, Oct 19 2019)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    --------------------"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " "
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 84
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainPage.class.getResource(\"/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * flip the Duke\u0027profile and"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param img"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return DialogBox object"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 69
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.awt.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/MainPage.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            stage.setTitle(\"Duke, Chatbot to track your task progress\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/chatbot_icon.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 29,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 10
    }
  },
  {
    "path": "src/main/java/MainPage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import helper.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import helper.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class MainPage extends AnchorPane {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * object needed for MainPage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private ArrayList\u003cTask\u003e arrTask;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Ui uiHelper;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke_1.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void initialize() throws FileNotFoundException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        storage \u003d new Storage(arrTask, \"duke.txt\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        uiHelper \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String fileData \u003d storage.readFile();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        parser \u003d new Parser(uiHelper);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String welcomeMessage \u003d uiHelper.welcomeMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                DialogBox.getDukeDialog(welcomeMessage + \"\\n\" + fileData, dukeImage)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getResponse(String input) throws Exception {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String responseString \u003d c.execute(arrTask, uiHelper);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        storage.saveIntoFile();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return responseString;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private void handleUserInput() throws Exception {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 83
    }
  },
  {
    "path": "src/main/java/Rose.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package PACKAGE_NAME;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Rose {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 4
    }
  },
  {
    "path": "src/main/java/exception/IncorrectInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class IncorrectInputException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public IncorrectInputException(String errorMsg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(errorMsg);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 8
    }
  },
  {
    "path": "src/main/java/helper/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @params command - command entered by user like todo,event,deadline...."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @params taskEntered - task enterd by user like read book, event ...."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String taskEntered;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Command constructor without task (bye,list)."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param command command entered by user like todo,event,deadline...."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Commadn constructor with task entered."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param taskEntered"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Command(String command, String taskEntered) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.taskEntered \u003d taskEntered;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Execute methods to return the desired output to user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param taskList arrayList to store task created by user"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param uiHelper class that helps with interaction of user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return desired output according to the task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @throws Exception"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String execute(ArrayList\u003cTask\u003e taskList, Ui uiHelper) throws Exception {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String responseString \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                responseString \u003d uiHelper.returnExitsMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return responseString;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    responseString \u003d \"There is no task in your current list. Please add in \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return responseString;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    responseString \u003d uiHelper.printTaskList(taskList);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return responseString;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                taskList.add(new Task(taskEntered));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String topLine \u003d uiHelper.getTopTwoLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String response \u003d \"   \" + taskList.get(taskList.size() - 1).toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String customeriseBottomMes \u003d uiHelper.getBottomTwoLine(taskList);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                responseString \u003d uiHelper.parserOutputMess(topLine, response, customeriseBottomMes);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return responseString;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String[] temp \u003d taskEntered.split(\"/\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String eventName \u003d temp[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String eventDate \u003d formatDate(temp[1].substring(3));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String eventTopMes \u003d uiHelper.getTopTwoLine(); //  assign user interaction string message"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                taskList.add(new task.Deadline(eventName, eventDate)); // add deadline into arrayList of task.Task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String eventTaskMes \u003d \"     \" + taskList.get(taskList.size() - 1).toString(); // assign return deadline message"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String eventBotMess \u003d uiHelper.getBottomTwoLine(taskList); // assign user interaction string message"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return uiHelper.parserOutputMess(eventTopMes, eventTaskMes, eventBotMess); // parse"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String[] deadlineTemp \u003d taskEntered.split(\"/\"); // split the string to get date and time"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String deadlineName \u003d deadlineTemp[0]; // assign task.Task name"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String date \u003d formatDate(deadlineTemp[1].substring(3)); // formating the date"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String deadlineTopMess \u003d uiHelper.getTopTwoLine(); //  assign user interaction string message"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                taskList.add(new task.Event(deadlineName, date));  // add deadline into arrayList of task.Task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String deadlineMess \u003d \"     \" + taskList.get(taskList.size() - 1).toString(); // assign return deadline message"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String deadlineBotMess \u003d uiHelper.getBottomTwoLine(taskList); // assign user interaction string message"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return uiHelper.parserOutputMess(deadlineTopMess, deadlineMess, deadlineBotMess); // parse"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                int arrPos \u003d Integer.parseInt(taskEntered);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                assert arrPos \u003e 0 : \"Please enter a positive index \";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return \"  Sorry there is no any task for you to do the command\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else if (arrPos \u003e taskList.size()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return \"You have entered the wrong index of task, please try again!\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String deleteTopMess \u003d uiHelper.removeTaskMes();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String deleteMess \u003d \"    \" + taskList.get(arrPos - 1).toString();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    taskList.remove(arrPos - 1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String deleteBotMess \u003d uiHelper.getBottomTwoLine(taskList);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return uiHelper.parserOutputMess(deleteTopMess, deleteMess, deleteBotMess); // parse"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"tag\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String[] command \u003d taskEntered.split(\"as\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String taskSelected \u003d command[0];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String tag \u003d command[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                Task foundTask \u003d searchTask(taskList, taskSelected);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                if (foundTask !\u003d null) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    foundTask.setTag(tag);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return \"there is no such task in your list \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return uiHelper.parserOutputMess(\"\", \"The tag \" + tag + \"is successfully added to \" + foundTask.getDescription(), \"\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                int doneArrPos \u003d Integer.parseInt(taskEntered); // assign index"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                assert doneArrPos \u003e 0 : \"Please enter a positive index \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                if (taskList.size() \u003d\u003d 0) { // check if size of arrayList is large then 1"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return \"  Sorry there is no any task for you to do the command\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else if (doneArrPos \u003e taskList.size()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return \"You entered wrong index of task, please try again later\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    assert !taskList.get(doneArrPos - 1).getDoneStatus() : \"The task status is set to done already\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    taskList.get(doneArrPos - 1).setDone(); // set Done to the task object"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String doneMesTop \u003d uiHelper.markAsDone(); // assign done"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String doneResult \u003d \"    [\" + taskList.get(doneArrPos - 1).getStatusIcon() + \"] \" + taskList.get(doneArrPos - 1).getDescription();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    String doneMesBot \u003d \"  -------------\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    return uiHelper.parserOutputMess(doneMesTop, doneResult, doneMesBot); // parse the message together and return to Duke"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                assert taskList.size() \u003e 0 : \"Execution command failed because there is task created \";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                ArrayList\u003cString\u003e matchResult \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String searchWord \u003d taskEntered;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    if (taskList.get(i).getDescription().contains(searchWord)) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                        matchResult.add(taskList.get(i).toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String topFindMess \u003d uiHelper.findTaskMes();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                String match \u003d \"\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                for (int j \u003d 0; j \u003c matchResult.size(); j++) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                    match \u003d match + \" \" + (j + 1) + \". \" + matchResult.get(j).toString() + \"\\n\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return uiHelper.parserOutputMess(topFindMess, match, \"------------\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return \"Sorry i do not know what is means \";"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private static String formatDate(String date) throws Exception {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assert !date.substring(2, 3).equalsIgnoreCase(\"-\") : \"Please Enter date in correct format YYYY-MM-DD\";"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Date date1 \u003d formatter.parse(date);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        formatter \u003d new SimpleDateFormat(\"E, MMM d yyyy\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return (formatter.format(date1));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private void addTag() {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//    private ArrayList\u003cTask\u003e viewSchedule(String date) throws ParseException, FileNotFoundException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        // date in"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        String fileData \u003d storage.readFile();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        assert fileData.length() \u003e 0 : \"There is no task or deadline or meeting in the list!!\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        String [] dataArray \u003d fileData.split(\"(\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"E, MMM d yyyy\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        Date date1 \u003d formatter.parse(date);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        // Retrieve All task"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//           if(taskList.get(i).getDate().equals(date1)){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//               matchDateTaskList.add(taskList.get(i));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//           }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//        return matchDateTaskList;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    //"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//            case \"view\":"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                ArrayList\u003cTask\u003e matchArray \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                matchArray \u003d viewSchedule(taskEntered,taskList);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                for(int i \u003d 0 ; i \u003c matchArray.size() ; i++){"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                    System.out.println(matchArray.get(i).toString());"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Task searchTask(ArrayList\u003cTask\u003e tasksList, String searchQuery) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assert tasksList.size() \u003e 0 : \"There is no task in the list now \";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        System.out.println(searchQuery);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        for (int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            if (tasksList.get(i).getDescription().contains(searchQuery)) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return tasksList.get(i);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 199
    }
  },
  {
    "path": "src/main/java/helper/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import exception.IncorrectInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * takes in user\u0027s command and parser it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Ui uiHelper;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Constructor of Ui class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param uiHelper"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Parser(Ui uiHelper) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.uiHelper \u003d uiHelper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * This method will parser user input into command and task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Example of command : event,todo,deadline,done..."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * Example of task : read book, project meeting"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param userInput string enterd by user"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return Command object"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Command parse(String userInput) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            assert !userInput.equalsIgnoreCase(\"\") : \"Please Enter a Command and Task !!\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            if (!userInput.equalsIgnoreCase(\"list\") \u0026\u0026 !userInput.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                uiHelper.checkIsTaskEmpty(userInput);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"bye\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"todo\", userInput.replace(\"todo \", \"\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"deadline\", userInput.replace(\"deadline \", \"\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"event\", userInput.replace(\"event \", \"\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"delete\", userInput.replace(\"delete \", \"\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"done\", userInput.replace(\"done \", \"\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"find\", userInput.replace(\"find \", \"\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else if (userInput.split(\" \")[0].equals(\"tag\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"tag\", userInput.replace(\"tag \", \"\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                return new Command(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        } catch (IncorrectInputException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            return new Command(\"\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 64
    }
  },
  {
    "path": "src/main/java/helper/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * class which loading tasks from the file and saving tasks in the file into hard-disk."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * arrayList of task and filePath (duke.txt)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Storage(ArrayList\u003cTask\u003e taskList, String filePathDefault) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.filePath \u003d filePathDefault;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * method that read and display all the task recorded in duke.txt."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return command and task entered by user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String readFile() throws FileNotFoundException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String fileData \u003d \"Load data from duke text file \\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            data +\u003d s.nextLine() + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return fileData + \"\\n\" + data;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * method that write all the command and task into duke.txt."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void saveIntoFile() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            BufferedWriter br \u003d new BufferedWriter(fw); // inin"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "//                fw.write(taskList.get(i).toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                br.write(taskList.get(i).toString()); // initialize BufferedWriter"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                br.newLine(); // create platform-specific line separators automatically"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            br.close(); // close bufferedWrite"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            // System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 74
    }
  },
  {
    "path": "src/main/java/helper/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package helper;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import exception.IncorrectInputException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * print out the welcome message ."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return message to user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String welcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  Welcome to Duke Program\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * return the todo task\u0027s interaction string with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return message of todo task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getTopTwoLine() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"----------------- \" + \u0027\\n\u0027 + \"   Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * print the task size to user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param tList arrayList of task ."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return size of tlist to user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getBottomTwoLine(ArrayList\u003cTask\u003e tList) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"   Now you have \" + tList.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"-----------------  \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * return exit message to user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return string exit message to user"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String returnExitsMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"    Bye. Hope to see you again\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"  --------------\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * update the status of task to done!"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return message of task completed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String markAsDone() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"    Nice! I\u0027ve marked this task as done: \";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * customize the remove message to user."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return remove task message to user."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String removeTaskMes() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"   Got it. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * combine all the message together"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param topMessage"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param output"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param bottomMessage"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return desired output to user"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String parserOutputMess(String topMessage, String output, String bottomMessage) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return topMessage + \"\\n\" + output + \"\\n\" + bottomMessage;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * customize the message of find command."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return customize string of find task"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String findTaskMes() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"  --------------\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                + \"    Here are the matching tasks in your list: \";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * check is task\u0027s description is empty or not"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @throws IncorrectInputException if the task\u0027s description is empty"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void checkIsTaskEmpty(String input) throws IncorrectInputException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String[] commandArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        if (commandArray.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            throw new IncorrectInputException(\"☹ OOPS!!! The description of a \" + commandArray[0] + \" cannot be empty.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * combine all the task in arrayList"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @param tList"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return all task in arrayList"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String printTaskList(ArrayList\u003cTask\u003e tList) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String outputString \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        for (int i \u003d 0; i \u003c tList.size(); i++) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            String temp \u003d ((i + 1) + \". \" + tList.get(i).toString()) + \"\\n\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            outputString +\u003d temp;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return outputString;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 123
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * Deadline subclass which extends from task.Task (parent class)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return the deadline description and status icon"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \"(\" + by + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 26
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " * Event subclass which extends from task.Task ( parent class )"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return the event description and its status icon"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.getDescription() + \"(\" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 25
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * description params -- to store the task description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * isDone params -- to record down the status of task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private String tag;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * this method return the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return params description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * this method set isDone params to true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * this method return status of the task depending on isDone boolean variable"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return params isDone"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return (isDone ? \"Done\" : \"NoDone\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String getDate(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"there is no date in task \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void setTag(String tag){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        this.tag \u003d \"#\" + tag;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public boolean getDoneStatus(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * this method return the string of the task description and status"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     * @return params statusIcon and description"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        return \"[T][\" + this.getStatusIcon() + \"] \" + this.getDescription() + \"  tag:\"+this.tag;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 67
    }
  },
  {
    "path": "src/main/resources/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003cfx:root fx:id\u003d\"myBox\" alignment\u003d\"TOP_RIGHT\" fillHeight\u003d\"false\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "         styleClass\u003d\"anchor\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" text\u003d\"label\" textOverrun\u003d\"CENTER_WORD_ELLIPSIS\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cURL value\u003d\"@application.css\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 21
    }
  },
  {
    "path": "src/main/resources/MainPage.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c?import java.net.URL?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            styleClass\u003d\"answerBox\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainPage\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003cstylesheets\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cURL value\u003d\"@application.css\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003c/stylesheets\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"45.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"289.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"2.0\" AnchorPane.rightAnchor\u003d\"109.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"32.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 24
    }
  },
  {
    "path": "src/main/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Ui uiDispay \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Storage fileStorage \u003d  new Storage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    private Parser commandParser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void byeCommadTest(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"bye\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"  --------------\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"    Bye. Hope to see you again\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"  --------------\",uiDispay.returnExitsMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void todoCommandTest() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"todo read book\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"----------------- \\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   [T][✗] read book \\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"   Now you have 1 tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "                \"-----------------\",commandParser.todoTaskCommand(\"todo read book\",arrTask,uiDispay,f));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    public void doneCommandTest() throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        commandParser \u003d new Parser(\"done 1\",uiDispay,fileStorage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        ArrayList\u003cTask\u003e arrTask \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "        assertEquals(\"  Sorry there is no any task for you to do the command\",commandParser.doneCommand(\"done 1\",arrTask,uiDispay));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYuOng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYuOng": 45
    }
  }
]
