[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "test {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 27,
      "-": 20
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "E|0|project meeting|Oct 10 2020"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "D|0|return book|Oct 10 2019"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Task|0|project meeting/2020-10-10|Dec 31 2099"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Class Deadline to represent a Deadline Task. A Deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * consists of a description and a endTime."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a new Deadline with {@code description} and specified {@code endTime}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param description the description/details of our task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param endTime end time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Deadline(String description, String endTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(description, endTime);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Retrieves our class type to differentiate Deadlines among the generic Task instances."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return \"D\" the initial for our Deadline Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getTypeName() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Deadline instance."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String String representation"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Deadline instance in our database."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String a Deadline representation in our database"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"D\" + \" | \" + super.toStringFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 46
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.NoSuchElementException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static Scanner lineScanner;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static Scanner sc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private final String FILE_NAME \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Storage storage \u003d new Storage(FILE_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private TaskList tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    // Empty constructor required for Launcher"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static void main(String[] args) throws FileNotFoundException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        // need to import javafx.scene.control.label"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getResponse(String userInput) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        if (userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            return ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            return tasks.printTasks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            tasks.makeTaskDone(-1 + Integer.parseInt(userInput.split(\" \")[1]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            return \"I have marked that task as done!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner \u003d new Scanner(userInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner.next(); // skip todo word"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            // can only accept yyyy-mm-dd"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                Task task \u003d new Todo(lineScanner.nextLine().substring(1)); // skip space"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                storage.saveAllTasksToFile(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return \"I have added that todo!\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (NoSuchElementException | FileNotFoundException error) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showEmptyDescription(\"todo\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner \u003d new Scanner(userInput);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner.next();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            String theRest \u003d lineScanner.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                Task task \u003d new Deadline(theRest.split(\"/\")[0].substring(1), theRest.split(\"/\")[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                storage.saveAllTasksToFile(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return \"I have added that deadline!\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (NoSuchElementException | FileNotFoundException error) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showEmptyDescription(\"deadline\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner \u003d new Scanner(userInput);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            lineScanner.next();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            String theRest \u003d lineScanner.nextLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                Task task \u003d new Event(theRest.split(\"/\")[0].substring(1), theRest.split(\"/\")[1]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.addTask(task);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                storage.saveAllTasksToFile(tasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return \"I have added that event!\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (NoSuchElementException | FileNotFoundException error) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showEmptyDescription(\"event\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                int taskNumber \u003d -1 + Integer.parseInt(userInput.split(\" \")[1]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.getTasks().get(taskNumber); // try to get exception"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return \"I have deleted your task!\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (IndexOutOfBoundsException error) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showInvalidRemoval();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"filter\")) { //filter {date/month/year} {value}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                String criterion \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                if (criterion.equals(\"month\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    int month \u003d Integer.parseInt(userInput.split(\" \")[2]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    return tasks.showFilteredBySpecificMonth(month);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                } else if (criterion.equals(\"year\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    int year \u003d Integer.parseInt(userInput.split(\" \")[2]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    return tasks.showFilteredBySpecificYear(year);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                } else if (criterion.equals(\"date\")) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    String date \u003d userInput.split(\" \")[2];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    return tasks.showFilteredBySpecificDate(date);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showMissingParemeters() + \"\\n\" + ui.showLineOfUnderscores();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else if (userInput.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                String word \u003d userInput.split(\" \")[1];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return tasks.showFilteredByName(word);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } catch (NoSuchElementException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                return ui.showMissingParemeters();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            return ui.showCommandNotFound() + ui.showLineOfUnderscores();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"I don\u0027t understand what you are saying\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 144,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Exception class for our application Duke. This Exception is caught"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * when the user input commands have missing parameters (MissingArgumentException),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * or the user input commands cannot be found in our ChatBot (InvalidCommandException)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Class Event to represent a Event Task. An Event"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * consists of a description and a time period."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a new Event with {@code description} and specified {@code time}."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param description the description/details of our task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param time the time that the event happens"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Retrieves our class type to differentiate Events among the generic Task instances."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return \"E\" the initial for our Event Class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getTypeName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of an Event instance."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String String representation"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of an Event instance in our database."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String an Event representation in our database"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"E\" + \" | \" + super.toStringFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 45
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Exception class for our application Duke. This Exception is caught"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * when the user input commands cannot be recognised by our ChatBot."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 49
    }
  },
  {
    "path": "src/main/java/MissingArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Exception class for our application Duke. This Exception is caught"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * when the user input commands have missing parameters."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class MissingArgumentException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public MissingArgumentException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 9
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Storage class is for database I/O."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Methods to load Tasks from database and save Tasks to database are available."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * referenced from"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * https://crunchify.com/java-saving-and-loading-data-from-a-file-simple-production-ready-utility-for-file-readwrite-operation/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    //String fileName \u003d \"./data/duke.txt\"; // relative path"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private Scanner inputStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private String fileName;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Storage(String fileName) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            inputStream \u003d new Scanner(new File(fileName));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            System.out.println(\"Error opening file: \" + fileName);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public List\u003cTask\u003e getAllTasksFromFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        while (inputStream.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            String currentLine \u003d inputStream.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            String[] nextLine \u003d currentLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            // index 0: type, index 1: 1/0 (isDone), index 2: description, index 3: time"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            if (nextLine[0].trim().equals(\"T\")) { // Todo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.add(new Todo(nextLine[2].trim())); //trim space"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } else if (nextLine[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.add(new Deadline(nextLine[2].trim(), nextLine[3].trim()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            } else if (nextLine[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                tasks.add(new Event(nextLine[2].trim(), nextLine[3].trim()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            /*"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            if (nextLine[1].trim().equals(\"1\")) { // marked as done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    tasks.get(tasks.size() - 1).markAsDone(); // last element"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void saveAllTasksToFile(TaskList tasks) throws FileNotFoundException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        PrintWriter pw \u003d new PrintWriter(new FileOutputStream(fileName));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            int isDone \u003d (task.isTaskDone()) ? 1 : 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            pw.println("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                    task.getTypeName() + \"|\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                            + isDone + \"|\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                            + task.getDescription() + \"|\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "                            + task.getTime()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            );"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        pw.close();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 67
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Abstract class Task to represent a Task. A Task in our ChatBot"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * can be a Todo, Deadline, or Event."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    protected LocalDate time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a new Task with {@code description}."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * The Task is assumed to be uncompleted when created."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param description the description/details of our task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a new Task with {@code description} and specified {@code endTime}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * The Task is assumed to be uncompleted when created."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param description the description/details of our task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Task(String description, String time) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        // precondition: time in yyyy-mm-dd format"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.time \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Retrieves the description of our Task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Marks our Task as completed."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Gets the status icon of our Task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * checks if our Task is completed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return boolean to indicate whether our Task is completed."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public boolean isTaskDone() { return isDone; }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * gets the Date for our Task."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return the Date instance to represent a Date for our Task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return time.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String getTypeName() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Task\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Task instance."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String String representation"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        String timeOptional \u003d (time.equals(\"\")) ? \"\" : \", \" + time;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description + timeOptional;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Task instance in our database."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String a Task representation in our database"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        int isDoneInt \u003d (isDone) ? 1 : 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        String timeOptional \u003d (time.equals(LocalDate.parse(\"2099-12-31\"))) ? \"\" : \", \" + getTime();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return isDoneInt + \" | \" + description + timeOptional;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 107
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * TaskList is a wrapper class for a List of Tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        this.tasks \u003d storage.getAllTasksFromFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public int getTasksLength() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return tasks.get(taskNumber);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String makeTaskDone(int taskNumber) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.get(taskNumber).markAsDone();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + tasks.get(taskNumber);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(tasks.get(taskNumber));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String printListTasks() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Here are the tasks in your list: \" + this.printTasks();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String printTasks() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            result.append((i + 1) + \".\" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showFilteredBySpecificDate(String date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList(tasks.stream().filter(task -\u003e task.getDate().equals(LocalDate.parse(date))).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Here are the tasks on date \" + date + filteredTasks.printTasks();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showFilteredBySpecificYear(int year) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList(tasks.stream().filter(task -\u003e task.getDate().getYear() \u003d\u003d year).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Here are the tasks in the year \" + year + filteredTasks.printTasks();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showFilteredBySpecificMonth(int month) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList(tasks.stream().filter(task -\u003e task.getDate().getMonthValue() \u003d\u003d month).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Here are the tasks in the month \" + month + filteredTasks.printTasks();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showFilteredByName(String word) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList(tasks.stream().filter(task -\u003e task.getDescription().contains(word)).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Here are the matching tasks in your list:\" + filteredTasks.printTasks();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 86
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Class Todo to represent a Todo Task. A Todo Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * consists of a description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * Creates a new Todo Task with {@code description}."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @param description the description/details of our task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        super(description, \"2099-12-31\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Todo instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String String representation"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * returns a String representation of a Todo instance in our database."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     * @return String a Todo representation in our database"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String toStringFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"T\" + \" | \" + super.toStringFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Class Ui to handle the user interface of our ChatBot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " * Currently, Ui is mainly responsible for System.out.println statements to our output."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    private final String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showWelcomeMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Hello from\\n\" + logo + \"I am here to help you with anything you need!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showLineOfUnderscores() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showGoodbyeMessage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showEmptyDescription(String type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"☹ OOPS!!! The description of a \" + type + \" cannot be empty.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showInvalidRemoval() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"This item is not valid to remove.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showCommandNotFound() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public String showMissingParemeters() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        return \"☹ OOPS!!! Either filter criterion (date/month/year) or its value is missing. Please try again.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 42
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 19
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void createNewTaskList_successful() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Task task1 \u003d new Todo(\"description\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Task task2 \u003d new Deadline(\"description\", \"2020-01-01\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Task task3 \u003d new Event(\"description\", \"2020-12-31\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task3);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        assertEquals(3, taskList.getTasksLength());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void deleteTask_successful() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Task task1 \u003d new Todo(\"description\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Task task2 \u003d new Deadline(\"description\", \"2020-01-01\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        tasks.add(task2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        taskList.deleteTask(1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        assertEquals(1, taskList.getTasksLength());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 36
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import javafx.concurrent.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void createNewTask_notYetDone(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        assertEquals(false, new Deadline(\"description\", \"2020-01-01\").isTaskDone());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    public void markTaskAsDone_successful() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        Deadline task \u003d new Deadline(\"description\", \"2020-01-01\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "        assertEquals(true, task.isTaskDone());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 20
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[T][✘]  borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " return book /by Sunday"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[D][✘] return book by Sunday"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[E][✘] project meeting at Mon 2-4pm"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": " do homework /by no idea :-p"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[D][✘] do homework by no idea :-p"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Now you have 4 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[T][✓]  borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "[D][✓] do homework by no idea :-p"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "1.[T][✓]  borrow book"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "2.[D][✘] return book by Sunday"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "3.[E][✘] project meeting at Mon 2-4pm"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "4.[D][✓] do homework by no idea :-p"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "---------------"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dinhnhobao"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dinhnhobao": 23
    }
  }
]
