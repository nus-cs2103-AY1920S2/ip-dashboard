[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.8\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    maven {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        url \"https://plugins.gradle.org/m2/\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    mainClassName \u003d \"com.nus.duke.Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    version \u003d \u002711\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    archiveVersion \u003d \"0.0.1\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 28
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 100
    }
  },
  {
    "path": "src/main/java/com/nus/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package com.nus.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import com.nus.duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import com.nus.duke.ui.Greetings;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static void poll(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Boolean contLoop \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        while(contLoop){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            String input \u003d scan.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            Pair\u003cString, String\u003e parsedInput \u003d Parser.tokenize(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            switch(parsedInput.getKey()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                Greetings.prettyPrint(parsedInput.getValue());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            case \"mark\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                Greetings.prettyPrint(parsedInput.getValue());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            case \"quit\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                Greetings.prettyPrint(parsedInput.getValue());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                contLoop \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                Greetings.handleUndefined();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        Greetings.init();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        poll(args);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 34,
      "-": 4
    }
  },
  {
    "path": "src/main/java/com/nus/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package com.nus.duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "import javafx.util.Pair;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static Pair\u003cString, String\u003e tokenize(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "         Splits a string into a (command, condition) pair"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "         @param input"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                input text string, such as \"list books\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "         @return Pair of (command, condition)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "         */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String[] res        \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String command      \u003d res[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String condition    \u003d res.length \u003e 1 ? res[1] : null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        return new Pair\u003c\u003e(command, condition);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 20
    }
  },
  {
    "path": "src/main/java/com/nus/duke/ui/Greetings.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "package com.nus.duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "public class Greetings {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String WELCOME_LOGO    \u003d \" ____         _        \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"|  _ \\\\ _  __| | _____ \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"| | | | | |  | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"| |_| | |_|  |   \u003c ___/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String WELCOME_TEXT    \u003d \"-----------------------------\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"Hello, I am Duke\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"-----------------------------\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String EXIT_TEXT       \u003d \"-----------------------------\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"Goodbye\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"-----------------------------\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    private static final String UNDEFINED       \u003d \"-----------------------------\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"Input is undefined. Try again\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"-----------------------------\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        System.out.println(WELCOME_LOGO);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        System.out.println(WELCOME_TEXT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static void tearDown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        System.out.println(EXIT_TEXT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static void handleUndefined() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        System.out.println(UNDEFINED);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JKOK005"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    public static void prettyPrint(String s) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        String formattedString \u003d String.format(   \"-----------------------------\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"%s\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "                                                + \"-----------------------------\\n\", s);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "        System.out.println(formattedString);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JKOK005"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JKOK005": 42
    }
  }
]
