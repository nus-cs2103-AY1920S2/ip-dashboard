[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    archiveVersion \u003d \"v0.1\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 22,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "E/1/haha hehe /2121-12-12"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "D/1/return book /2020-01-28"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "E/1/project meeting /2010-12-12"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "T/0/me "
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 4
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Duke(String filePath) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                //create new data dir and duke.file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            } catch (IOException io) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                ui.showSavingError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            } catch (DateTimeException dt){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                System.out.println(\"      Please enter date in this format: YYYY-MM-DD\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            finally {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 66
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of adding a task into the task list. A \u003ccode\u003eAddCommand\u003c/code\u003e object corresponds to a task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * to be added to the task list e.g., \u003ccode\u003eTask\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public AddCommand(Task task){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Adds a task to the task list, updating the user interface and storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasksList The task list to be updated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be shown."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasksList, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasksList.add(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.taskAdded(task, tasksList);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        storage.save(tasksList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 39
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of exiting the program. A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to the command of exiting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Exits the program."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list to be updated."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be to be shown."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.showByeMsg();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 32
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command to be executed. A \u003ccode\u003eCommand\u003c/code\u003e object corresponds to the command to be executed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list to be updated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be to be shown."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of deleting a task using the index of the task. A \u003ccode\u003eDeleteCommand\u003c/code\u003e object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * corresponds to the command of deleting a task using the index e.g., \u003ccode\u003e2\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public DeleteCommand(int taskNum){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Deletes a task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list to be updated."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be to be shown."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Task task \u003d tasks.getTask(taskNum - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasks.delete(taskNum - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.taskDeleted(task, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of marking a task at the index as done. A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * command of marking the task at the index as done e.g., \u003ccode\u003e2\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    int taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public DoneCommand(int taskNum){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list to be updated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be to be shown."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasks.getTask(taskNum - 1).markDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.taskDone(tasks.getTask(taskNum - 1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 38
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of finding a task in the task list. A \u003ccode\u003eFindCommand\u003c/code\u003e object corresponds to the"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * command of displaying the current task list e.g., \u003ccode\u003e\"book\"\u003c/code\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class FindCommand extends Command{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public FindCommand(String keyword){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the list of tasks that have the keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The current task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be updated."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException{"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.printList(tasks.findTasks(keyword));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the command of displaying the task list. A \u003ccode\u003eListCommand\u003c/code\u003e object corresponds to the command of"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * displaying the current task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If storage file is invalid, an error message is returned."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list to be updated."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param ui The user interface to be to be shown."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param storage The storage file to be updated."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file is not found."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the result of whether this is an exit program command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The result of whether this command can exit the program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 32
    }
  },
  {
    "path": "src/main/java/duke/dukeexception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.dukeexception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the error when the user inputs an invalid command. A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to a"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * an error caused by invalid command e.g., \u003ccode\u003e\"todo\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    protected String exception;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public DukeException(String exception){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.exception \u003d exception;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The error message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String getMessage(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        if (exception.equals(\"todo\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return \"      OOPS!!! The description of a todo cannot be empty.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return \"      OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 23
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.dukeexception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Makes sense of the command entered by the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the command to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If invalid command entered, a invalid command instruction is returned."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param fullCommand The command entered by the user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The command to be executed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws DukeException If the user enters an invalid command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException, DateTimeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String[] commandSplit \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String firstWord \u003d commandSplit[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        switch(firstWord){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            if (commandSplit.length \u003c 2){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                throw new DukeException(\"todo\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            else{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                for(int i \u003d 1; i \u003c commandSplit.length; i++){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    description +\u003d commandSplit[i] + \" \";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String deadlineTask \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            for(int i \u003d 1; i \u003c commandSplit.length; i++){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                deadlineTask +\u003d commandSplit[i] + \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String deadlineDecription \u003d deadlineTask.split(\"/by \")[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String deadlineDate \u003d deadlineTask.split(\"/by \")[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new AddCommand(new Deadline(deadlineDecription,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    LocalDate.parse(deadlineDate.substring(0, deadlineDate.length() - 1))));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String eventTask \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            for(int i \u003d 1; i \u003c commandSplit.length; i++){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                eventTask +\u003d commandSplit[i] + \" \";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String eventDescription \u003d eventTask.split(\"/at \")[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String eventDate \u003d eventTask.split(\"/at \")[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new AddCommand(new Event(eventDescription,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    LocalDate.parse(eventDate.substring(0, eventDate.length() - 1))));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            int deleteTaskNum \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new DeleteCommand(deleteTaskNum);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            int doneTaskNum \u003d Integer.parseInt(commandSplit[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new DoneCommand(doneTaskNum);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String keyword \u003d commandSplit[1];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            throw new DukeException(\"\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 79
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Loads or save the storage file as requested. A \u003ccode\u003eStorage\u003c/code\u003e object corresponds to a file represented by the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * file path e.g., \u003ccode\u003e\"duke/src/java\"\u003c/code\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Loads the task list at the start of the program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If the storage file cannot be found, a new one is created and loads that one instead, and tells the user that a"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * new storage file has been created."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If the storage file cannot be found."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String nextLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String[] taskString \u003d nextLine.split(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            String taskTitle \u003d taskString[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            switch (taskTitle){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Task todoTask \u003d new Todo(taskString[2]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                if(taskString[1].equals(\"1\")){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    todoTask.markDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                tasks.add(todoTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Task deadlineTask \u003d new Deadline(taskString[2], LocalDate.parse(taskString[3]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                if(taskString[1].equals(\"1\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    deadlineTask.markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                tasks.add(deadlineTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Task eventTask \u003d new Event(taskString[2], LocalDate.parse(taskString[3]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                if(taskString[1].equals(\"1\")){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                    eventTask.markDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                tasks.add(eventTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Updates the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * If the storage file cannot be found, an error message is shown."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskList The task list to be saved to storage file."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @throws IOException If storage file cannot be found."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void save(TaskList taskList) throws IOException{"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        fw.write(taskList.toStringDukeTasks());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents a deadline task. A \u003ccode\u003eDeadline\u003c/code\u003e object corresponds to a deadline task e.g.,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * \u003ccode\u003e\"project meeting\", LocalDate.parse(\"2020-12-12\")\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Deadline(String description, LocalDate date){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text to be saved into the storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text to be saved to storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toStringTasks(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"D/\" + getStatusIconInBin() + \"/\" + description + \"/\" + date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the deadline task to be displayed to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the deadline task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String fullDate \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Integer.toString(date.getDayOfMonth()) + \" \" + Integer.toString(date.getYear());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + fullDate + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents an event task. A \u003ccode\u003eEvent\u003c/code\u003e object corresponds to a event task e.g.,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * \u003ccode\u003e\"project meeting\", LocalDate.parse(\"2020-12-12\")\u003c/code\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Event(String description, LocalDate date){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text to be saved into the storage file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text to be saved to storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toStringTasks(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"E/\" + getStatusIconInBin() + \"/\" + description + \"/\" + date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the event task to be displayed to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the event task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String fullDate \u003d date.getMonth().getDisplayName(TextStyle.SHORT, Locale.ENGLISH) + \" \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                Integer.toString(date.getDayOfMonth()) + \" \" + Integer.toString(date.getYear());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + fullDate + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 33
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task e.g.,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * \u003ccode\u003e\"project meeting\"\u003c/code\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of whether a task is marked as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of whether a task is done or not."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return (isDone ? \"[Done] \" : \"[Not Done] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the binary of whether a task is done or not."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the binary of whether a task is done or not."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String getStatusIconInBin(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return (isDone ? \"1\" : \"0\"); //1 means done, 0 means not done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void markDone(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param tasks The task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public static String toStringDukeTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d \"T/\" + task.getStatusIconInBin() + \"/\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d task.description + \"\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d \"D/\" + task.getStatusIconInBin() + \"/\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d task.description + \"/\" + ((Deadline) task).date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            } else {               //instance of event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d \"E/\" + task.getStatusIconInBin() + \"/\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskString +\u003d task.description + \"/\" + ((Event) task).date.toString() + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public abstract String toStringTasks();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the status and the description of the task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The status and description of the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 69
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents a task list. A \u003ccode\u003eTaskList\u003c/code\u003e object corresponds to a task list e.g., \u003ccode\u003eArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " *     taskList\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the tasks to be saved in the storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toStringDukeTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String taskString \u003d \"\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            taskString +\u003d task.toStringTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void add(Task task){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Deletes a task in the task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskNum The index of the task to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void delete(int taskNum){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        tasks.remove(taskNum);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the task list that contains the provided keyword."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param keyword The keyword."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The list of tasks that has the keyword."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public TaskList findTasks(String keyword){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        for(Task task : tasks){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            if(task.description.contains(keyword)){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return new TaskList(taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the task required."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskNum The index of the task that is required."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The task required."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Task getTask(int taskNum){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return tasks.get(taskNum);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 65
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents a todo task. A \u003ccode\u003eTodo\u003c/code\u003e object corresponds to a todo task e.g.,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * \u003ccode\u003e\"project meeting\"\u003c/code\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Todo(String description){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        super (description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the todo task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the todo task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toStringTasks(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"T/\" + getStatusIconInBin() + \"/\" + description + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Returns the text representation of the todo task to be displayed to the user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the todo task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " * Represents the user interface displayed to the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public Ui(){}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the welcome message at the start of the program."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String line \u003d \"    ____________________________________________________________\" + \"\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String fiveSpaces \u003d \"      \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(line + fiveSpaces + \"Hello! I\u0027m Duke\\n\" + fiveSpaces + \"Whatcha wanna do?\\n\" + line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Reads the command entered by the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @return The text representation of the command entered by the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays a long line."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\" );"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the error when the storage file could not be found."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"File not found. Created a new data directory and created a duke.txt inside. Data will be stored here.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the error when the storage file could not be updated."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showSavingError() {System.out.println(\"File not saved\");}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the error."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param error The error occurred."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showError(String error){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the message to the user that a task has been added."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param task The task that is added."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskList The current task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void taskAdded(Task task, TaskList taskList){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Now you have \" + Integer.toString(taskList.tasks.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the message to the user that a task has been deleted."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param task The task that is deleted."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskList The current task list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void taskDeleted(Task task, TaskList taskList){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Now you have \" + Integer.toString(taskList.tasks.size()) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the message to the user that a task has been marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param task The task that has been marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void taskDone(Task task){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"       \" + task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays to the user the current task list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * @param taskList The current task list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void printList(TaskList taskList){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.tasks.size(); i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "            System.out.println(\"      \" + Integer.toString(i + 1) + \".\" + taskList.getTask(i));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     * Displays the program termination message."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    public void showByeMsg(){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        System.out.print(\"     See ya later alligator!\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 95
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"project meeting \", LocalDate.parse(\"2020-12-12\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedFirst \u003d \"[D][Not Done] project meeting (by: Dec 12 2020)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualFirst \u003d deadline.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedFirst, actualFirst);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTasksTest(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"project meeting \", LocalDate.parse(\"2020-12-12\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedSec \u003d \"D/0/project meeting /2020-12-12\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualSec \u003d deadline.toStringTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedSec, actualSec);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 24
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTest(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Task event \u003d new Event(\"project meeting \", LocalDate.parse(\"2020-12-12\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedFirst \u003d \"[E][Not Done] project meeting (at: Dec 12 2020)\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualFirst \u003d event.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedFirst, actualFirst);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTasksTest(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Task event \u003d new Event(\"project meeting \", LocalDate.parse(\"2020-12-12\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedSec \u003d \"E/0/project meeting /2020-12-12\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualSec \u003d event.toStringTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedSec, actualSec);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 24
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Task todo \u003d new Todo(\"Task\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedFirst \u003d \"[T][Not Done] \" + \"Task\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualFirst \u003d todo.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedFirst, actualFirst);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    void toStringTasksTest(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        Task todo \u003d new Todo(\"Task\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String expectedSec \u003d \"T/0/Task\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        String actualSec \u003d todo.toStringTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "        assertEquals(expectedSec, actualSec);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 22
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      Whatcha wanna do?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [T][Not Done] borrow book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [D][Not Done] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [E][Not Done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [E][Done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [D][Done] return book (by: Sunday)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [T][Done] borrow book"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      1.[T][Done] borrow book"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      2.[D][Done] return book (by: Sunday)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      3.[E][Done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "       [D][Done] return book (by: Sunday)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      1.[T][Done] borrow book"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      2.[E][Done] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "      See ya later alligator!"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "asnfdian"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Yuanyu97"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Yuanyu97": 34
    }
  }
]
