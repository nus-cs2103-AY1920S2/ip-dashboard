[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "teriaiw": 2,
      "-": 37
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 19
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ui.showGreeting();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Parser parser \u003d new Parser(input, tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            parser.readCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        new Duke(\"../../../data/duke.txt\").run();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 28,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 9
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[E]\" + super.toString() + \" (by: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 19
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Parser(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void readCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String arr[] \u003d this.input.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Storage storage \u003d new Storage(\"../../../data/duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            storage.store(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ui.showGoodbye();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ui.showList(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (arr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                checkNum(arr.length);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                checkValid(arr[1]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                int taskNum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                if (taskList.tasks.size() \u003e taskNum) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    Task current \u003d taskList.tasks.get(taskNum);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    current.markDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    ui.showDone(current);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    ui.showTaskError();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (arr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            taskList.delete(arr);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                checkAction(arr[0]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                taskList.add(arr);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkValid(String input) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showValidError());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkNum(int size) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (size \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showNumError());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkAction(String action) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (!action.equals(\"todo\") \u0026\u0026 !action.equals(\"deadline\") \u0026\u0026 !action.equals(\"event\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showActionError());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 81
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (file.length() !\u003d 0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                FileInputStream fin \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                ObjectInputStream oit \u003d new ObjectInputStream(fin);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                taskList \u003d (ArrayList\u003cTask\u003e) oit.readObject();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void store(TaskList taskList) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            FileOutputStream fout \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ObjectOutputStream oot \u003d new ObjectOutputStream(fout);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            oot.writeObject(taskList.tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            oot.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 46
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 30
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void add(String[] arr) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String taskType \u003d arr[0];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String[] temp;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String task \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkDescription(arr.length);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Task newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                newTask \u003d new ToDo(arr[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                temp \u003d arr[1].split(\"/by \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                task \u003d temp[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                String date \u003d temp[1];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    newTask \u003d new Deadline(task, localDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    this.tasks.add(newTask);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    ui.showDateError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                temp \u003d arr[1].split(\"/at \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                task \u003d temp[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                String time \u003d temp[1];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    LocalDateTime localDateTime \u003d LocalDateTime.parse(time);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    newTask \u003d new Event(task, localDateTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    this.tasks.add(newTask);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    ui.showDateTimeError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (!newTask.description.equals(\"\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                ui.showTaskAdded(newTask, this.tasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void delete(String[] arr) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkNum(arr.length);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkValid(arr[1]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            int taskNum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (this.tasks.size() \u003e taskNum) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                Task current \u003d this.tasks.get(taskNum);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                this.tasks.remove(taskNum);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                ui.showTaskDeleted(current, this.tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                ui.showTaskError();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkDescription(int size) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (size \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showDescriptionError());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkValid(String input) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showValidError());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkNum(int size) throws DukeException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (size \u003c 2) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showNumError());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 109
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 13
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String format \u003d \"    -----------------------------------------------------------------\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showGreeting() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                \"      ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                        + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                        + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                        + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                        + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format + \"      Hello! I\u0027m\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(\"      What can I do for you? :)\\n\" + format);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format + \"      Oops! Something went wrong :(\\n\" + format);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format + \"      Bye. Hope to see you again soon! :)\\n\" + format);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showList(TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format + \"      Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Task current \u003d taskList.tasks.get(i - 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            System.out.println(\"      \" + i + \". \" + current);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showTaskError() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format + \"      Sorry, this task does not exist :(\\n\" + format);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showTaskAdded(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showTaskDeleted(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      I\u0027ve removed this task:\\n \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showDateError() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Please enter a date in this format: YYYY-MM-DD !\\n\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void showDateTimeError() {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        System.out.println(format"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Please enter a date \u0026 time in this format: YYYY-MM-DDTHH:MM !\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showValidError() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a only one duke.Task number!\\n\" + format;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showNumError() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a duke.Task number!\\n\" + format;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showDescriptionError() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a duke.Task description!\\n\" + format;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showActionError() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Sorry, I didn\u0027t understand that :( Please try again.\\n\" + format;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 92
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(\"2020-02-04\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"newDeadline\", localDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"[D][N] newDeadline (by: Feb 4 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 14
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 11
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testEvent() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-02-04T18:00\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Event event \u003d new Event(\"newEvent\", localDateTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"[E][N] newEvent (by: Feb 4 2020 6:00PM)\", event.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 15
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"newTask\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"newTask\", toDo.description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Hello! I\u0027m"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      What can I do for you? :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        [T][N] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 21
    }
  }
]
