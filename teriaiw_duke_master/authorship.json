[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "teriaiw": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 34,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Dateline is a task with a specific date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in description and date of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param by when the task should be completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 28
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(duke.MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Gets the dialog of User."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param text dialog of the user"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param img of the user"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return DialogBox of user"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Gets the dialog of Duke."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param text dialog of Duke"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param img of Duke"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return DialogBox of Duke"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 75
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " *duke.Main class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Public no-argument constructor for Launcher to work."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in path of file to be read."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Initializes UI, Storage and TaskList classes."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param filePath of stored data"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private void loadDuke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Runs duke, loads and stores tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param input of user"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return response of Duke"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String runDuke(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            storage \u003d new Storage(\"duke.txt\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Parser parser \u003d new Parser(input, tasks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d parser.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            storage.store(parser.taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            assert !response.equals(\"\") : \"Response should not be empty\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Generates Duke response."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String response \u003d runDuke(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 68,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Custom exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param message of the error"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 17
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Event is a task with a specific date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in description and date time of task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param description of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param at what date and time is the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[E]\" + super.toString() + \" (by: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy h:mma\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 28
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * A GUI for duke.Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 30
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Initializes the main window of the GUI."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String format \u003d \"    ----------------------------------------------\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String greeting \u003d (format + \"      Aloha, I\u0027m Stitch!\\n      What can I do for you? :)\\n\" + format);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greeting, dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        );"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 62
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Parser handles user input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in user input and loaded task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param input of user"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param taskList loaded from storage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Parser(String input, TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to determine action based on user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String[] arr \u003d this.input.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d ui.showGoodbye();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            delay.setOnFinished(event -\u003e Platform.exit());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d ui.showList(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (arr[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d taskList.find(arr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (arr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d taskList.done(arr);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else if (arr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d taskList.delete(arr);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                checkAction(arr[0]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d taskList.add(arr);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                return ex.getMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to check if user enters a valid input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param action Input of user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @throws DukeException error"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkAction(String action) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (!action.equals(\"todo\") \u0026\u0026 !action.equals(\"deadline\") \u0026\u0026 !action.equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showActionError());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 77
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Storage manages reading and writing of data from and to txt file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in path of txt tile."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param filePath of stored data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to read data from txt file and put into ArrayList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return Data of ArrayList stored"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (file.length() !\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                FileInputStream fin \u003d new FileInputStream(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                ObjectInputStream oit \u003d new ObjectInputStream(fin);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                taskList \u003d (ArrayList\u003cTask\u003e) oit.readObject();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to store TaskList into txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param taskList of data to be stored"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void store(TaskList taskList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            FileOutputStream fout \u003d new FileOutputStream(this.filePath);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ObjectOutputStream oot \u003d new ObjectOutputStream(fout);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            oot.writeObject(taskList.tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            oot.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 65
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * Task with information of its description and status."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in description of task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param description of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method returns status of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return status of whether a task is done"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method changes status of task to done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 42
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * TaskList handles list of tasks in an ArrayList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    protected Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in list of tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param tasks that user has"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to add task into task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param arr User input"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String add(String[] arr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String taskType \u003d arr[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String[] temp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String task \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkDescription(arr.length);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Task newTask \u003d new Task(\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            int initialSize \u003d this.tasks.size();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                newTask \u003d new ToDo(arr[1]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                this.tasks.add(newTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                temp \u003d arr[1].split(\"/by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                task \u003d temp[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                String date \u003d temp[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    newTask \u003d new Deadline(task, localDate);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    this.tasks.add(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    response \u003d ui.showDateError();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                temp \u003d arr[1].split(\"/at \");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                task \u003d temp[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                String time \u003d temp[1];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    LocalDateTime localDateTime \u003d LocalDateTime.parse(time);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    newTask \u003d new Event(task, localDateTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    this.tasks.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                    response \u003d ui.showDateTimeError();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                task \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (!newTask.description.equals(\"\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d ui.showTaskAdded(newTask, this.tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            assert (this.tasks.size() - initialSize) \u003d\u003d 1 : \"Task list should increment by 1\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to delete task in task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param arr User input"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String delete(String[] arr) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkNum(arr.length);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkValid(arr[1]);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            int taskNum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            int initialSize \u003d this.tasks.size();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (this.tasks.size() \u003e taskNum) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                Task current \u003d this.tasks.get(taskNum);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                this.tasks.remove(taskNum);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d ui.showTaskDeleted(current, this.tasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d ui.showTaskError();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            assert (initialSize - this.tasks.size()) \u003d\u003d 1 : \"Task list should decrease by 1\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to mark task as done."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param arr User input"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String done(String[] arr) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkNum(arr.length);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            checkValid(arr[1]);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            int taskNum \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (this.tasks.size() \u003e taskNum) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                Task current \u003d this.tasks.get(taskNum);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                current.markDone();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                assert current.isDone \u003d\u003d true : \"Task should be marked as done\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d ui.showDone(current);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response \u003d ui.showTaskError();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to find tasks with matching keywords."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param arr User input"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String find(String[] arr) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String input \u003d arr[1];"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Task task \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            if (task.description.contains(input)) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                temp.add(task);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return ui.showFound(temp);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to check if user has entered task description."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param size of String array of user input"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @throws DukeException error"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkDescription(int size) throws DukeException {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (size \u003c 2) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showDescriptionError());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to check if user has entered only 1 task number."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param input of user"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @throws DukeException error"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkValid(String input) throws DukeException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showValidError());"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method to check if user has entered a task number."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param size of String array of user input"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @throws DukeException error"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public static void checkNum(int size) throws DukeException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (size \u003c 2) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            throw new DukeException(ui.showNumError());"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 207
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * ToDo is a task with description only."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Constructor that takes in description of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param description of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 21
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " * UI handles what user sees on display."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String format \u003d \"    ----------------------------------------------\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints greeting message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showGreeting() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format + \"      Aloha, I\u0027m Stitch!\\n      What can I do for you? :)\\n\" + format);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints loading error if data loading error occurs."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format + \"      Oops! Something went wrong :(\\n\" + format);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints goodbye message when program terminates."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showGoodbye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format + \"      Aloha! Hope to see you again soon! :)\\n\" + format);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints list of tasks in user\u0027s task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param taskList of user tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showList(TaskList taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String response \u003d (format + \"      Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        for (int i \u003d 1; i \u003c taskList.tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            Task current \u003d taskList.tasks.get(i - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response +\u003d (\"      \" + i + \". \" + current + \"\\n\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        response +\u003d format;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints confirmation message when user marks a task as done."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param task to be marked done"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Nice! I\u0027ve marked this task as done:\\n \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints list of tasks found with matching keyword."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param taskList of found tasks"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showFound(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d (format + \"      Sorry, there are no matching tasks :(\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            response \u003d (format + \"      Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            for (int i \u003d 1; i \u003c taskList.size() + 1; i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                Task current \u003d taskList.get(i - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                response +\u003d (\"      \" + i + \". \" + current + \"\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        response +\u003d format;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user enters invalid task number."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showTaskError() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format + \"      Sorry, this task does not exist :(\\n\" + format);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints confirmation message when user adds a new task."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param task added"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param tasks ArrayList of user tasks"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showTaskAdded(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints confirmation message when user deletes a task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param task deleted"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @param tasks ArrayList of user tasks"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showTaskDeleted(Task task, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      I\u0027ve removed this task:\\n \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"        \" + task + \"\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Now you have \" + tasks.size() + \" tasks in the list.\\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user enters invalid date format."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showDateError() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Please enter a date in this format: YYYY-MM-DD !\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user enters invalid date and time format."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showDateTimeError() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return (format"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + \"      Please enter a date \u0026 time in this format: YYYY-MM-DDTHH:MM !\\n\""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                + format);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user enters more than 1 task number."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return error message"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showValidError() {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a only one Task number!\\n\" + format;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user does not enter any task number."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return error message"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showNumError() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a Task number!\\n\" + format;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user does not enter task description."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return error message"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showDescriptionError() {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Please enter a Task description!\\n\" + format;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * Method prints error message when user enters invalid action."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     * @return error message"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public String showActionError() {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        return format + \"      Sorry, I didn\u0027t understand that :( Please try again.\\n\" + format;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 175
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight\u003d\"Infinity\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 19
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(\"2020-02-04\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"newDeadline\", localDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"[D][N] newDeadline (by: Feb 4 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 14
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 11
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testEvent() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2020-02-04T18:00\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        Event event \u003d new Event(\"newEvent\", localDateTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"[E][N] newEvent (by: Feb 4 2020 6:00PM)\", event.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 15
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    public void testTask() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        ToDo toDo \u003d new ToDo(\"newTask\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        assertEquals(\"newTask\", toDo.description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Hello! I\u0027m"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      ____        _"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     |  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "     |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      What can I do for you? :)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "        [T][N] read book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "      Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    -----------------------------------"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "teriaiw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "teriaiw"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "teriaiw": 21
    }
  }
]
