[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 1,
      "-": 19
    }
  },
  {
    "path": "savedata.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "T|0|abc|null"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "D|0|def |2012-10-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "T|0|abcdef|null"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public Deadline(String description, String date) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.date \u003d parseDate(date);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"[%s][%s] %s (%s)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getType(),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getStatusIcon(),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getDescription(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.formatDate(getDate()));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " * Driver class of Duke chatbot, also saves on startup and loads on exit."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Storage for loading task list, and to save right before exiting Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * TaskList to keep track of existing tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Ui to provide user interface printing."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Constructor of Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param filePath String representing file path of save file of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Driver method for Duke."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        ui.greetDuke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Parser.handleTasks(tasks, ui);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Main method of Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param args String array from System input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Duke duke \u003d new Duke(\"savedata.txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 50,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    AlreadyDoneException"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    TaskListOutOfBoundsException"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    WrongCommandException"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 11
    }
  },
  {
    "path": "src/main/java/EmptyFieldException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class EmptyFieldException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public EmptyFieldException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.date \u003d parseDate(date);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"[%s][%s] %s (%s)\","
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getType(),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getStatusIcon(),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getDescription(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.formatDate(getDate()));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 18
    }
  },
  {
    "path": "src/main/java/ExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class ExceptionHandler {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static void checkEmptyField(String[] taskStringArr, String type) throws EmptyFieldException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (type.equals(\"todo\") || type.equals(\"deadline\") || type.equals(\"event\")) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            if (taskStringArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                throw new EmptyFieldException("
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        \"You\u0027re usually not that taciturn, Red. Explain things to me.\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            } else if (!type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String[] time \u003d taskStringArr[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                if (time.length !\u003d 2) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    throw new EmptyFieldException("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                            \"We\u0027re running short of time, so make sure you note it down.\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                } else if (time[0].isEmpty()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    throw new EmptyFieldException("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                            \"You\u0027re usually not that taciturn, Red. Explain things to me.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static void checkInvalidCommand(String type) throws InvalidCommandException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (!(type.equals(\"todo\")"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"deadline\")"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"event\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"list\")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"done\")"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"delete\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"bye\"))) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            throw new InvalidCommandException(\"\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 31
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class InvalidCommandException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return \"Uhh... You\u0027re gonna have to say that again, Red.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 10
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class InvalidDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public InvalidDeadlineException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return \"We\u0027re running short of time, so make sure you note it down.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"Give a short description, then\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"have the deadline as \u003c/yyyy-mm-dd\u003e.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 12
    }
  },
  {
    "path": "src/main/java/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class InvalidEventException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public InvalidEventException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return \"We\u0027re running short of time, so make sure you note it down.\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"Give a short description, then\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"have the deadline as \u003c/yyyy-mm-dd\u003e.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 12
    }
  },
  {
    "path": "src/main/java/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class InvalidTodoException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public InvalidTodoException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return \"You\u0027re usually not that taciturn, Red. Explain things to me.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " * Parser class to process input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Handles various permitted commands by calling relevant methods to process after parsing."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param taskList TaskList that contains ArrayList\u003cTask\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param ui Ui to print out user interface text."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static void handleTasks(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        boolean loop \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        do {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String commandType \u003d extractCommandType(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                switch (commandType) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.addTodo(prepareTodo(inputSplit));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.addDeadline(prepareDeadline(inputSplit));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.addEvent(prepareEvent(inputSplit));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.markDone(prepareDoneDelete(inputSplit[1]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.deleteTask(prepareDoneDelete(inputSplit[1]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        ui.listTasks(taskList);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        taskList.findTask(inputSplit[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        ui.exitDuke();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        loop \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        throw new InvalidCommandException(\"\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            } catch (InvalidCommandException | InvalidTodoException"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    | InvalidDeadlineException | InvalidEventException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } while (loop);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Processes command line input to obtain the command\u0027s type"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * and throws an Exception if the command is invalid."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String of the initial command line input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return String representing the command type."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @throws InvalidCommandException DukeException for invalid commands."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static String extractCommandType(String input) throws InvalidCommandException{"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String[] inputSplit \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        boolean isValidCommand \u003d isValidCommand(inputSplit[0]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (!isValidCommand) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            throw new InvalidCommandException(\"\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return inputSplit[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Processes String array of input to check if it is valid for Todo task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array of the command line input after splitting by \" \"."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return String of description for Todo task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @throws InvalidTodoException DukeException for invalid Todo tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static String prepareTodo(String[] input) throws InvalidTodoException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (!isValidTodo(input)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            throw new InvalidTodoException(\"\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            return input[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Processes String array of input to check if it is valid for Deadline task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array of the command line input after splitting by \" \"."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return String array of description and date for Deadline task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @throws InvalidDeadlineException DukeException for invalid Deadline task."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static String[] prepareDeadline(String[] input) throws InvalidDeadlineException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String[] fieldDetails \u003d input[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (!isValidDeadline(fieldDetails)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            throw new InvalidDeadlineException(\"\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            return fieldDetails;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Processes String array of input to check if it is valid for Event task."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array of the command line input after splitting by \" \"."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return String array of description and date for Event task."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @throws InvalidEventException DukeException for invalid Event task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static String[] prepareEvent(String[] input) throws InvalidEventException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String[] fieldDetails \u003d input[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (!isValidEvent(fieldDetails)) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            throw new InvalidEventException(\"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            return fieldDetails;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Processes String input for purpose of Done or Delete commands"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String of command line input after splitting by \" \"."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return int value representing index + 1 of desired item to be marked as done or deleted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static int prepareDoneDelete(String input) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return Integer.parseInt(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Checks if input is of valid command type."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param type String representing command type."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return boolean dictating if command is valid or invalid."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static boolean isValidCommand(String type) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        if (type.equals(\"todo\")"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"deadline\")"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"event\")"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"list\")"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"find\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"done\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"delete\")"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                || type.equals(\"bye\")) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Checks if input array is two elements long and thus a valid Todo task."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array containing task\u0027s type and description."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return boolean dictating if array has enough elements for a valid Todo task."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static boolean isValidTodo(String[] input) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return input.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Checks if input array is three elements long and thus a valid Deadline task."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array containing task\u0027s type, description, and do by date."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return boolean dictating if array has enough elements for a valid Deadline task."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static boolean isValidDeadline(String[] input) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return input.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * Checks if input array is three elements long and thus a valid Event task."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @param input String array containing task\u0027s type, description, and do at date."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     * @return boolean dictating if array has enough elements for a valid Event task."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static boolean isValidEvent(String[] input) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return input.length \u003d\u003d 2;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 189
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public static String taskParser(Task task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String taskString;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String isDone \u003d task.getIsDone() ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        taskString \u003d String.format("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"%s|%s|%s|%s\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                task.getType(), isDone,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                task.getDescription(), task.getDate());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void save(TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            for (Task task : taskList.tasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String data \u003d taskParser(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                System.out.println(data);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                writer.write(data + \"\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            System.out.println(ioe.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            FileReader reader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                String[] lineSplit \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                switch (lineSplit[0]) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        task \u003d new Todo(lineSplit[2]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        task \u003d new Deadline(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        task \u003d new Event(lineSplit[2], lineSplit[3]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                        throw new IllegalStateException(\"Unexpected value: \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                                + lineSplit[0]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                if (lineSplit[1].equals(\"1\")) {task.markAsDone();}"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            scanner.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            System.out.println(ioe.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 84
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    //Type should only be T(odo), D(eadline), or E(vent)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public LocalDate parseDate(String stringDate) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return LocalDate.parse(stringDate);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String formatDate(LocalDate date) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return date.format("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 44
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void addTodo(String task) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Todo newTask \u003d new Todo(task);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(\"added new todo: \" + task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void addEvent(String[] task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Event newTask \u003d new Event(task[0], task[1]);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(\"added new event: \" + task.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void addDeadline(String[] task) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Deadline newTask \u003d new Deadline(task[0], task[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(newTask.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(\"added new deadline: \" + task.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void markDone(int taskIndex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Task task \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(\"That\u0027s another one down. That\u0027ll be: \");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void deleteTask(int taskIndex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Task task \u003d tasks.get(taskIndex - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        tasks.remove(taskIndex - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(\"Don\u0027t need this here anymore eh? Off it goes.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        print(task.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void findTask(String keyword) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        TaskList foundTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                foundTasks.tasks.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        foundTasks.tasks.forEach(task -\u003e print(task.toString()));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void print(String string) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        System.out.println(string);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 63
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"[%s][%s] %s\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getType(),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getStatusIcon(),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                this.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 16
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void greetDuke() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        System.out.println(\"Hey there, Red. Anything I can do for you?\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void listTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        taskList.tasks.forEach(task -\u003e System.out.println(String.format("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"%d. %s\","
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                (taskList.tasks.indexOf(task) + 1),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                task.toString())));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        System.out.println(String.format("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "                \"That\u0027s %d in the list.\", taskList.tasks.size()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void exitDuke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        System.out.println(\"Guess that\u0027s enough for now. I\u0027ve got your back, so you keep me close.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 31
    }
  },
  {
    "path": "src/main/java/WrongCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class WrongCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public WrongCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 5
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void ToDoTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Todo task \u003d new Todo(\"Find Royce on Bracket Towers\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        assertEquals(\"[T][\\u2718] Find Royce on Bracket Towers\", task.toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    public void EventTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        Event task \u003d new Event(\"Performance at the Empty Set\", \"2014-05-20\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "        assertEquals(\"[E][\\u2718] Performance at the Empty Set (May 20 2014)\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 17
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Hey there, Red. Anything I can do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Uhh... You\u0027re gonna have to say that again, Red."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 0 in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: stay alive"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[return the Transistor , by this Sunday midnight]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: return the Transistor /by this Sunday midnight"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: concert at the Empty Set /at this Saturday 6pm-9pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "1. [T][?] stay alive"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "2. [D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "3. [E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 3 in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s another one down. That\u0027ll be: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "1. [T][?] stay alive"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "2. [D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "3. [E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 3 in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Guess that\u0027s enough for now. I\u0027ve got your back, so you keep me close."
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 26
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Hey there, Red. Anything I can do for you?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Uhh... You\u0027re gonna have to say that again, Red."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 0 in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: stay alive"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[return the Transistor , by this Sunday midnight]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: return the Transistor /by this Sunday midnight"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "added: concert at the Empty Set /at this Saturday 6pm-9pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "1. [T][?] stay alive"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "2. [D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "3. [E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 3 in the list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s another one down. That\u0027ll be: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "[E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "1. [T][?] stay alive"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "2. [D][?] return the Transistor  (by this Sunday midnight)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "3. [E][?] concert at the Empty Set  (at this Saturday 6pm-9pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "That\u0027s 3 in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "Guess that\u0027s enough for now. I\u0027ve got your back, so you keep me close."
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "todo stay alive"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "deadline return the Transistor /by this Sunday midnight"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "event concert at the Empty Set /at this Saturday 6pm-9pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 9
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin D:\\School\\1_Current_Sem\\CS2103T\\Duke\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "J-Dan23"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "J-Dan23": 21
    }
  }
]
