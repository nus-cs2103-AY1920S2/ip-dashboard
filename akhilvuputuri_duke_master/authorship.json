[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 33,
      "-": 21
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "T , 1 , read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "D , 0 , return book , 2019-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "E , 0 , project meeting , Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "T , 1 , join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "E , 1 , project meeting , Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "T , 0 , borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "T , 0 , read newspaper"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "T , 0 , watch match"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/** Deadline is a child class of Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Task that needs to be done before a specific date/time.*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    String dateString;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    LocalDate dateObj;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor that takes in 2 params."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param name Name of Deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param dateString Date to finish by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Deadline(String name, String dateString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dateObj \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Converts Deadline into a String to be saved to file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return String to be saved to file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        int doneInt \u003d done ? 1 : 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"D , \" + doneInt + \" , \" + name + \" , \" + dateString;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dateObj.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 43
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            taskList \u003d storage.getTaskList(); // initialise from text file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//            Parser.scan(taskList, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        Ui.printHello();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        TaskList taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//            taskList \u003d storage.getTaskList(); // initialise from text file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//            Parser.scan(taskList, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//            System.out.println(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String userText \u003d userInput.getText();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String dukeText \u003d getResponse(userInput.getText());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                DialogBox.getUserDialog(userText, user),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, duke)"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        );"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        // IMPORTANT: Save the old System.out!"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        // Tell Java to use your special stream"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Parser.read(input, taskList, storage);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"Duke heard: \" + baos.toString();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 169,
      "-": 1
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Duke Exception that extends from Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 8
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/** Event is a child class of Task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Task that starts at a specific time and ends at a specific time.*/"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    String dateString;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor that takes in 2 params."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param name Name of Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param dateString Date of event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Event(String name, String dateString) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.dateString \u003d dateString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Converts Event into a String to be saved to file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return String to be saved to file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        int doneInt \u003d done ? 1 : 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"E , \" + doneInt + \" , \" + name + \" , \" + dateString;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dateString + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 41
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 49
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Method reads input from user and performs required actions."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskList TaskList to store tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param storage Storage to update/write information to"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void read(String input, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                Ui.printBye();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                Ui.printList(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                int taskNum \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                taskList.taskDone(taskNum);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                storage.updateFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                taskList.findTasks(inputArr[1]);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    taskList.addList(new ToDo(input.substring(5)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    storage.updateFile(taskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    taskList.addList(new Deadline(input.substring(9, index), input.substring(index + 4)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    int index \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    taskList.addList(new Event(input.substring(6, index), input.substring(index + 4)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                if (input.split(\" \").length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Please specify a task number.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    int taskNum \u003d Integer.parseInt(inputArr[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    taskList.deleteTask(taskNum);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                    storage.updateFile(taskList);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Ui.printException(e);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 66
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor. Links this storage object to a specific file path."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param filePath Path of the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Generate TaskList from file obtained from filePath."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return TaskList generated from file obtained from filePath"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @throws IOException Throws error when there is error with I/O"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public TaskList getTaskList() throws IOException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            parseLine(s.nextLine(), taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Helper method to parse each line into a Task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskString Line of input to be parsed"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskList TaskList to add the Task to"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void parseLine(String taskString, TaskList taskList) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String[] taskDetails \u003d taskString.split(\",\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        for (int i \u003d 0; i \u003c taskDetails.length; i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            taskDetails[i] \u003d taskDetails[i].trim();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        boolean isTaskDone \u003d taskDetails[1].equals(\"1\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String taskName \u003d taskDetails[2];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Task newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            newTask.done \u003d isTaskDone;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            taskList.arrList.add(newTask);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } else if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            String taskTime \u003d taskDetails[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Task newTask \u003d new Deadline(taskName, taskTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            newTask.done \u003d isTaskDone;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            taskList.arrList.add(newTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            String taskTime \u003d taskDetails[3];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            Task newTask \u003d new Event(taskName, taskTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            newTask.done \u003d isTaskDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            taskList.arrList.add(newTask);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Updates the file contents based on the taskList given."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskList TaskList to be written into the file"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @throws IOException Throws error when there is error with I/O"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void updateFile(TaskList taskList) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        for (Task t : taskList.arrList) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            textToAdd +\u003d t.toFile() + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 78
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Parent class of Deadline, Event and ToDo."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor. Initialise name and done status."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param name Name of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Toggle status of the done attribute of task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void toggleDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        this.done \u003d !this.done;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Converts Task into a String to be saved to file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Overwritten by child classes"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return String to be saved to file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        int doneInt \u003d done ? 1 : 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"Q , \" + doneInt + \" , \" + name;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String symbol;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        if (done) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            symbol \u003d \"O\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            symbol \u003d \"X\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"[\" + symbol + \"] \" + this.name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 53
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public ArrayList\u003cTask\u003e arrList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor. To create and bind an arrayList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        arrList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Delete task at index taskNum."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskNum index at which to delete task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Task removedTask \u003d arrList.get(taskNum - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        arrList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Ui.printDelete(removedTask, arrList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Marks task at index taskNum as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskNum index at which to mark the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void taskDone(int taskNum) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Task doneTask \u003d arrList.get(taskNum - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        doneTask.toggleDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Ui.printDone(doneTask, arrList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Adds a Task to TaskList."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void addList(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        arrList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Ui.printAdd(task, arrList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Finds tasks with taskSubString in their name."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskSubString String to be found in Task name"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void findTasks(String taskSubString) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        for (Task t : arrList) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            if (t.getName().contains(taskSubString)) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                filteredList.add(t);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Ui.printFilteredList(filteredList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 56
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/** ToDo is a child class of Task."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Task without any date/time attached to it*/"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Constructor that takes in 1 param."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param name Name of ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Converts ToDo into a String to be saved to file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @return String to be saved to file"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toFile() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        int doneInt \u003d done ? 1 : 0;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"T , \" + doneInt + \" , \" + name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 38
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " * Ui class to support output to user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print hello message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printHello() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String logo \u003d \"      ____        _        \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String greetingText \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + logo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(greetingText);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print goodbye message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printBye() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        String byeText \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(byeText);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print out tasks in taskList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param taskList TaskList to print tasks from"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        for (Task s : taskList.arrList) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            System.out.println(\"     \" + (taskList.arrList.indexOf(s) + 1) + \". \" + s);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print out tasks in filteredList."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param filteredList ArrayList to print tasks from"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printFilteredList(ArrayList\u003cTask\u003e filteredList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        for (Task s : filteredList) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            System.out.println(\"     \" + (filteredList.indexOf(s) + 1) + \". \" + s);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print exception."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param e Exception to be printed"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printException(Exception e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print message when task is deleted from arrList."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param task Deleted Task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param arrList ArrayList from which Task is deleted from"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printDelete(Task task, ArrayList\u003cTask\u003e arrList) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"   ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"       \" + task + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Now you have \" + arrList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print message when task is done."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param task Done Task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param arrList ArrayList from which Task is marked"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printDone(Task task, ArrayList\u003cTask\u003e arrList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"       \" + task + \"\\n\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * Print message when task is added."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param task Added Task"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     * @param arrList ArrayList to which task is added"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public static void printAdd(Task task, ArrayList\u003cTask\u003e arrList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"       \" + task + \"\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                + \"     Now you have \" + arrList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 108
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 19
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Deadline test \u003d new Deadline(\"deadlineTest\", \"2020-06-06\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(\"deadlineTest\", test.getName());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Deadline test \u003d new Deadline(\"deadlineTest\", \"2020-06-06\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(false, test.getDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 17
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Event test \u003d new Event(\"eventTest\", \"2020-06-06\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(\"eventTest\", test.getName());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        Event test \u003d new Event(\"eventTest\", \"2020-06-06\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(false, test.getDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 17
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testName() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        ToDo test \u003d new ToDo(\"todoTest\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(\"todoTest\", test.getName());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    public void testDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        ToDo test \u003d new ToDo(\"todoTest\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "        assertEquals(false, test.getDone());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 17
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "       [T][X] borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "     Now you have 1 tasks in the list."
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "todo borrow book"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "if ! javac -cp ./src -Xlint:none -d ../bin ./src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "akhilvuputuri"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "akhilvuputuri": 34
    }
  }
]
