[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "suwoons": 28
    }
  },
  {
    "path": "data/duke_prev.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "deadline|1|homework|2020-02-02|2359"
      }
    ],
    "authorContributionMap": {
      "suwoons": 1
    }
  },
  {
    "path": "data/mainList_prev.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": " 1. [D][Y] homework (by: Feb 2 2020, 11.59pm)"
      }
    ],
    "authorContributionMap": {
      "suwoons": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "## Introduction"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "This is Goose, the annoying task manager that you never wanted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Goose is optimized for those who prefer to work with a Command Line Interface (CLI) because"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "he can only listen to commands."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `list`"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Displays current todo list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `list`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `todo`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Adds a task to your list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `todo [description]`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: `todo borrow book`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `event`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Adds an event to your list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `event [description] /at [DD/MM/YYYY] [24-hr Time]`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: `event meeting /at 15/2/2020 1400`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `deadline`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Adds a deadline to your list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `deadline [description] /by [DD/MM/YYYY] [24-hr Time]`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: `deadline homework /by 15/3/2020 2359`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `find`"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Retrieves list of tasks containing keyword."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `find [KEYWORD]`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "`find homework`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `delete`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Deletes the task at index specified."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `delete [INDEX]`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `done`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Marks task at index specified as done."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `done [INDEX]`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `undone`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Marks task at index specified as undone."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `undone [INDEX]`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Example of usage: "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "`undone 1`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `undo`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Undo your last action. If you \u0027undo\u0027 after an \u0027undo\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": " the list will revert to its original state."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `undo`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": "### `bye`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Say goodbye to Goose :("
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "suwoons"
        },
        "content": "* Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "-": 11,
      "suwoons": 69
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents a Deadline, which is a subclass of a Task. A Deadline includes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * a byDate which represents the due date of the respective Deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    LocalDate byDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    String time24Hr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Constructor for Deadline. Default isDone boolean value is false."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param description Description of deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param date Date of the deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param time Time of the deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Deadline(String description, String date, String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.byDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.time24Hr \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Another constructor for Deadline which allows explicit assigning of isDone."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param description Description of deadline"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param date Date of the deadline"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param time Time of the deadline"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param isDone True if deadline has been completed, false if not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Deadline(String description, String date, String time, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.byDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.time24Hr \u003d time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Returns a string representing time in 12-hour format eg. 11.59pm"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param timeString String representing time in 24-hour format eg. 2359"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Time in 12-hour format"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String formatTime12Hour(String timeString) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assert timeString.length() \u003d\u003d 4 : \"Honk! Invalid time.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assert time \u003e 0 \u0026\u0026 time \u003c\u003d 2359 : \"Honk! Invalid time.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        boolean isAm \u003d time \u003c 1200;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (!isAm \u0026\u0026 time \u003e\u003d 1300) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            time \u003d time - 1200;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int mins \u003d time % 100;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return hour + \".\" + String.format(\"%02d\", mins) + (isAm ? \"am\" : \"pm\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String checkbox \u003d \"[\" + super.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String dateFormat \u003d  byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return \"[D]\" + checkbox + \" \" + super.toString()"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" (by: \" + dateFormat + \", \" + formatTime12Hour(time24Hr) + \")\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 69
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static DialogBox getGooseDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        db.setStyle(\"-fx-background-color: GAINSBORO;\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        l.setStyle(\"-fx-label-padding: 0 10 0 0;\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        db.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//    public static DialogBox getGooseDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        l.setStyle(\"-fx-label-padding: 0 0 0 10;\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        db.setStyle(\"-fx-background-color: GAINSBORO;\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        db.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        return db;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 77
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.stage.StageStyle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents main body for Duke to run."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Sends Goose response according to user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param input input from the user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return String containing appropriate response"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    protected String getResponse(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Boolean marked;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            isBye \u003d Parser.isBye(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (!isBye) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    assert !command.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        int taskIndex;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        Task selected;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        switch (command) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"list\"):"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return \"Honk! Here\u0027s your current task list: \\n\" + storage.loadList();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"done\"):"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                taskIndex \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                selected \u003d tasks.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                marked \u003d tasks.markDone(taskIndex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                if (marked) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    String doneHeader \u003d \"Good job! I\u0027ve honked it as done:\\n  \";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    return doneHeader + selected;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    return \"Honk! Task is already done.\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"undone\"):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                taskIndex \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                selected \u003d tasks.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                marked \u003d tasks.markUndone(taskIndex);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                if (marked) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    String undoneHeader \u003d \"Hope you complete it soon! I\u0027ve honked it as undone:\\n  \";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    return undoneHeader + selected;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    return \"Honk! Task is already marked undone.\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"delete\"):"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                taskIndex \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                selected \u003d tasks.getTaskList().get(taskIndex);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                tasks.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String deleteHeader \u003d \"Honk! Removed this task from the list:\\n  \";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return deleteHeader + selected + ui.showCount(tasks.getTaskList());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"find\"):"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String search \u003d \"\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                for (int i \u003d 1; i \u003c inputArr.length; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    search +\u003d inputArr[i];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    search +\u003d (i \u003d\u003d inputArr.length - 1) ? \"\" : \" \";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                ArrayList\u003cTask\u003e foundTasks \u003d tasks.findTask(search);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String foundHeader \u003d foundTasks.isEmpty()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        ? \"Goose didn\u0027t find anything, honk...\""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        : \"Honk! Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String foundList \u003d \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    int indexNum \u003d i + 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    String item \u003d \" \" + indexNum + \".\" + foundTasks.get(i).toString();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    if (i !\u003d foundTasks.size() - 1) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        item +\u003d \"\\n\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                    foundList +\u003d item;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return foundHeader + foundList;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"todo\"):"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                Todo addedTodo \u003d tasks.createTodo(inputArr);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String addTodoHeader \u003d \" Honk! Okay added the task:\\n  \";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return addTodoHeader + addedTodo + ui.showCount(tasks.getTaskList());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"event\"):"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                Event addedEvent \u003d tasks.createEvent(input);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String addEventHeader \u003d \" Honk! Okay added the task:\\n  \";"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return addEventHeader + addedEvent + ui.showCount(tasks.getTaskList());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"deadline\"):"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.saveLastState(tasks.getTaskList());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                Deadline addedDeadline \u003d tasks.createDeadline(input);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String addDeadlineHeader \u003d \" Honk! Okay added the task:\\n  \";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return addDeadlineHeader + addedDeadline + ui.showCount(tasks.getTaskList());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case (\"undo\"):"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                tasks \u003d new TaskList(storage.undoAndLoad());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String undoMessage \u003d \"I have unhonked your previous command.\\n \" +"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"Use \\\u0027undo\\\u0027 to undo your undo. Honk!\\n\\n\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String showList \u003d \"Honk! Here\u0027s your updated current task list: \\n\" + storage.loadList();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return undoMessage + showList;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            case(\"help\"):"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                String help \u003d \"Honk! Here\u0027s what Goose can do:\\n\\n\" +"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"list: Shows list of to-dos\\n\\n\" +"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"todo [description]: Adds a task to your list\\n\\n\" +"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"event [description] /at [DD/MM/YYYY] [24-hr Time]: Adds an event to your list\\n\\n\" +"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"deadline [description] /by [DD/MM/YYYY] [24-hr Time]: Adds a deadline to your list\\n\\n\" +"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"undo: Undo your last action\\n\\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"find [keyword]: Retrieves all tasks with the keyword\\n\\n\" +"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"delete [task index]: Deletes the task at index specified\\n\\n\" +"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"done [task index]: Marks task at index specified as done\\n\\n\" +"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"undone [task index]: Marks task at index specified as undone\\n\\n\" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                        \"bye: Say goodbye to Goose :(\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return help;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                return \"What? Goose no understand.\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        return \"Honk! Something went wrong.\";"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    } catch (GooseTaskExistenceException | GooseEmptyDescriptionException"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                            | GooseIllegalFormatException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        return e.getMessage();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                } catch (GooseUnrecognisedException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    return e.getMessage();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return \"Bye! Honk!!\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "suwoons": 194
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents an \u003ccode\u003eEvent\u003c/code\u003e, which is a subclass of a \u003ccode\u003eTask\u003c/code\u003e. An \u003ccode\u003eEvent\u003c/code\u003e includes"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": " *  * an atDate which represents the date of the respective \u003ccode\u003eEvent\u003c/code\u003e occurring."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    LocalDate atDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    String time24Hr;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Constructor for Event. Default isDone boolean value is false."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param description Description of event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param time Time of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Event(String description, String date, String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.atDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.time24Hr \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Another constructor for Deadline which allows explicit assigning of isDone."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param description Description of event"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param date Date of the event"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param time Time of the event"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param isDone True if event has been completed, false if not."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Event(String description, String date, String time, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.atDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.time24Hr \u003d time;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Returns a string representing time in 12-hour format eg. 11.59pm"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param timeString String representing time in 24-hour format eg. 2359"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Time in 12-hour format"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String formatTime12Hour(String timeString) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assert timeString.length() \u003d\u003d 4 : \"Honk! Invalid time.\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int time \u003d Integer.parseInt(timeString);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assert time \u003e 0 \u0026\u0026 time \u003c\u003d 2359 : \"Honk! Invalid time.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        boolean isAm \u003d time \u003c 1200;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (!isAm \u0026\u0026 time \u003e\u003d 1300) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            time \u003d time - 1200;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int mins \u003d time % 100;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        int hour \u003d time / 100;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return hour + \".\" + String.format(\"%02d\", mins) + (isAm ? \"am\" : \"pm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String checkbox \u003d \"[\" + super.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String dateFormat \u003d atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return \"[E]\" + checkbox + \" \" + super.toString()"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" (at: \" + dateFormat + \", \" + formatTime12Hour(time24Hr) + \")\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 67
    }
  },
  {
    "path": "src/main/java/GooseEmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class GooseEmptyDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public GooseEmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 5
    }
  },
  {
    "path": "src/main/java/GooseIllegalFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class GooseIllegalFormatException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public GooseIllegalFormatException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 5
    }
  },
  {
    "path": "src/main/java/GooseTaskExistenceException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class GooseTaskExistenceException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public GooseTaskExistenceException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 5
    }
  },
  {
    "path": "src/main/java/GooseUnrecognisedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class GooseUnrecognisedException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public GooseUnrecognisedException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Starts the GUI"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param stage"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            stage.setTitle(\"Goose\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            stage.getIcons().add(new Image(\"/images/GooseDp.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setGoose(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 37
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Image gooseImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaGoose.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private static String WELCOME_MESSAGE \u003d \"Honk, this Goose. Do you need help with something?\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                DialogBox.getGooseDialog(WELCOME_MESSAGE, gooseImage)"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        );"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void setGoose(Duke d) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Goose\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                DialogBox.getGooseDialog(response, gooseImage)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        );"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 68
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Parses and makes sense of the commands provided by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static boolean isBye(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return input.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Checks what type of command has been issued by the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param input Input from the user"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return The first word of the user command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseUnrecognisedException If the command is not valid"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static String parseCommand(String input) throws GooseUnrecognisedException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (!isValid(input)) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseUnrecognisedException(\"Honk honk?? Send \u0027help\u0027 to get help.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return inputArr[0];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private static boolean isValid(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return inputArr[0].equals(\"done\") || inputArr[0].equals(\"deadline\") || inputArr[0].equals(\"undone\")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                || inputArr[0].equals(\"event\") || inputArr[0].equals(\"todo\") || inputArr[0].equals(\"delete\")"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                || inputArr[0].equals(\"find\") || isBye(inputArr[0]) || input.equalsIgnoreCase(\"list\")"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                || inputArr[0].equals(\"undo\") || inputArr[0].equals(\"help\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 32
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Handles saving and loading of task list data into hard drive."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private File listPath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private File prevListPath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private File arrayPath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private File prevArrayPath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Constructor for storage class to handle saving and loading to and from hard disk."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "//        String rootDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String rootDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        StringBuilder path \u003d new StringBuilder();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        path.append(rootDir);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        File dir \u003d new File(path + \"/data\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            dir.mkdirs();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.listPath \u003d new File(dir + \"/mainList.txt\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.prevListPath \u003d new File(dir + \"/mainList_prev.txt\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.arrayPath \u003d new File(dir + \"/duke.txt\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.prevArrayPath \u003d new File(dir + \"/duke_prev.txt\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            listPath.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            prevArrayPath.createNewFile();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            arrayPath.createNewFile();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            prevArrayPath.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Writes to respective list and array files to store the updated data in the hard disk."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Updated task list based on user commands"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws IOException If error is encountered in FileWriter"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e taskList) throws IOException { // saves to both duke.txt and array.txt"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        // save mainList array"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        FileWriter af \u003d new FileWriter(arrayPath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String stringList \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d e.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String eventString \u003d \"event|\" + doneStr + \"|\" + e.description + \"|\" + e.atDate + \"|\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        + e.time24Hr + System.lineSeparator();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d eventString;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else if (task instanceof  Deadline) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d d.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String deadlineString \u003d \"deadline|\" + doneStr + \"|\" + d.description + \"|\" + d.byDate + \"|\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        + d.time24Hr + System.lineSeparator();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d deadlineString;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Todo t \u003d (Todo) task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d t.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String todoString \u003d \"todo|\" + doneStr + \"|\" + t.description + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d todoString;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        af.write(stringList);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        af.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        // save list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        FileWriter fw \u003d new FileWriter(listPath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (taskList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                if (taskList.get(i) \u003d\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                int indexNum \u003d i + 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String item \u003d \" \" + indexNum + \". \" + taskList.get(i).toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    item +\u003d \"\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                text +\u003d item;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Loads task list as an ArrayList."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return ArrayList of Tasks based on stored data"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws IOException If array file not found on hard disk"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Scanner s \u003d new Scanner(arrayPath);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (arrayPath.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            ArrayList\u003cTask\u003e ml \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String[] taskArr \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String type \u003d taskArr[0];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(taskArr[1]) !\u003d 0;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String description \u003d taskArr[2];"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    Todo addTodo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    ml.add(addTodo);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String byDate \u003d taskArr[3];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String deadlineTime \u003d taskArr[4];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    Deadline addDeadline \u003d new Deadline(description, byDate, deadlineTime, isDone);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    ml.add(addDeadline);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String atDate \u003d taskArr[3];"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    String eventTime \u003d taskArr[4];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    Event addEvent \u003d new Event(description, atDate, eventTime, isDone);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    ml.add(addEvent);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    ui.showError(\"Format error! Honk!\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return ml;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private ArrayList\u003cTask\u003e loadPrevious() throws IOException {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Scanner s \u003d new Scanner(prevArrayPath);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (prevArrayPath.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            ArrayList\u003cTask\u003e ml \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String[] taskArr \u003d s.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String type \u003d taskArr[0];"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                boolean isDone \u003d Integer.parseInt(taskArr[1]) !\u003d 0;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String description \u003d taskArr[2];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        Todo addTodo \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        ml.add(addTodo);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        String byDate \u003d taskArr[3];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        String deadlineTime \u003d taskArr[4];"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        Deadline addDeadline \u003d new Deadline(description, byDate, deadlineTime, isDone);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        ml.add(addDeadline);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        String atDate \u003d taskArr[3];"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        String eventTime \u003d taskArr[4];"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        Event addEvent \u003d new Event(description, atDate, eventTime, isDone);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        ml.add(addEvent);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        ui.showError(\"Format error! Honk!!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return ml;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Loads task list as a String."
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return String representing indexed task list"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws IOException If list file not found in hard disk"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String loadList() throws IOException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(listPath))) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String line \u003d null;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String printedList \u003d \"\";"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            boolean isEmpty \u003d true;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            while ((line \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                printedList +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                isEmpty \u003d false;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (isEmpty) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                return \"  You haven\u0027t added any tasks. Honk...\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return printedList;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Writes to respective prev list and prev array files to store the data in the hard disk before"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * it was updated. This allows user to carry out the undo command."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Task list before update"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws IOException If error is encountered in FileWriter"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void saveLastState(ArrayList\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        // save prev mainList array"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        FileWriter af \u003d new FileWriter(prevArrayPath);"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String stringList \u003d \"\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (task instanceof Event) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Event e \u003d (Event) task;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d e.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String eventString \u003d \"event|\" + doneStr + \"|\" + e.description + \"|\" + e.atDate + \"|\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        + e.time24Hr + System.lineSeparator();"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d eventString;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else if (task instanceof  Deadline) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Deadline d \u003d (Deadline) task;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d d.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String deadlineString \u003d \"deadline|\" + doneStr + \"|\" + d.description + \"|\" + d.byDate + \"|\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        + d.time24Hr + System.lineSeparator();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d deadlineString;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                Todo t \u003d (Todo) task;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String doneStr \u003d t.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String todoString \u003d \"todo|\" + doneStr + \"|\" + t.description + System.lineSeparator();"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                stringList +\u003d todoString;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        af.write(stringList);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        af.close();"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        // save prev list"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        FileWriter fw \u003d new FileWriter(prevListPath);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String text \u003d \"\";"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (taskList.size() !\u003d 0) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                if (taskList.get(i) \u003d\u003d null) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                int indexNum \u003d i + 1;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                String item \u003d \" \" + indexNum + \". \" + taskList.get(i).toString();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                if (i !\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    item +\u003d \"\\n\";"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                text +\u003d item;"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        fw.write(text);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Saves the current state, as the previous state, and retrieves the saved state as the current state."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * When a user does \u0027undo\u0027 after an \u0027undo\u0027, the list goes back to its initial state before any \u0027undo\u0027"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * command was inputted."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Updated ArrayList of tasks after the undo command"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws IOException When load() or loadPrevious() encounters IO error"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public ArrayList\u003cTask\u003e undoAndLoad() throws IOException {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ArrayList\u003cTask\u003e currentTasks \u003d new ArrayList\u003c\u003e(load());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ArrayList\u003cTask\u003e previousTasks \u003d new ArrayList\u003c\u003e(loadPrevious());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        save(previousTasks);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        saveLastState(currentTasks);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return load();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 284
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents a Task to be completed, created by user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assert !description.isEmpty();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Retrieves status icon based on whether task has been marked as done according to isDone."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return \"Y\" if task has been done, or \"N\" if it has not."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return (isDone ? \"Y\" : \"N\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Retrieves done status of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Boolean representing whether task has been marked as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Boolean getIsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Mark isDone as true."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void markAsUndone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 52
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents task list in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    // load from storage"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    // create new empty list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Returns task list as an ArrayList."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Task list as an ArrayList of Tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Creates a new Event based on user input and adds it to the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param input Valid user command in the form \"event event_description /at DD/MM/YYYY HHMM\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Event that was created"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseEmptyDescriptionException If no description provided"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseIllegalFormatException If format is not valid"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Event createEvent(String input) throws GooseEmptyDescriptionException, GooseIllegalFormatException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] eventArr \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] descriptionSplit \u003d eventArr[0].split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 1; i \u003c descriptionSplit.length; i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (i \u003d\u003d descriptionSplit.length - 1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i] + \" \";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseEmptyDescriptionException(\"Honk! Description of an event cannot be empty. \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"Please tell Goose in this format:\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"\u0027event [description] /at [DD/MM/YYYY] [Time]\u0027\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (eventArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                throw new GooseIllegalFormatException(\"Honk! No event date specified. \" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"Please tell Goose in this format:\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"\u0027event [description] /at [DD/MM/YYYY] [Time]\u0027\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            eventArr \u003d eventArr[1].split(\" \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String date \u003d parseDate(eventArr[0]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String time \u003d eventArr[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            taskList.add(new Event(description, date, time));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return (Event) taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Creates a new Deadline based on user input and adds it to the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param input Valid user command in the form \"deadline deadline_description /by DD/MM/YYYY HHMM\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Deadline that was created"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseEmptyDescriptionException If no description provided"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseIllegalFormatException If format is not valid"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Deadline createDeadline(String input) throws GooseEmptyDescriptionException, GooseIllegalFormatException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] deadlineArr \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] descriptionSplit \u003d deadlineArr[0].split(\" \");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 1; i \u003c descriptionSplit.length; i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (i \u003d\u003d descriptionSplit.length - 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i] + \" \";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseEmptyDescriptionException(\"Honk! Description of a deadline cannot be empty. \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"Please tell Goose in this format:\\n\" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"\u0027deadline [description] /by [DD/MM/YYYY] [Time]\u0027\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (deadlineArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                throw new GooseIllegalFormatException(\"Honk! No deadline specified. \" +"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        \"Please tell Goose in this format:\\n\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                        \"\u0027deadline [description] /by [DD/MM/YYYY] [Time]\u0027\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            deadlineArr \u003d deadlineArr[1].split(\" \");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String date \u003d parseDate(deadlineArr[0]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String time \u003d deadlineArr[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            taskList.add(new Deadline(description, date, time));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return (Deadline) taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Creates a new Todo based on user input and adds it to the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param inputArr String array of split user input string"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Todo that was created"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseEmptyDescriptionException If no description provided"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Todo createTodo(String[] inputArr) throws GooseEmptyDescriptionException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 1; i \u003c inputArr.length; i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (i \u003d\u003d inputArr.length - 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d inputArr[i];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d inputArr[i] + \" \";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseEmptyDescriptionException(\"Honk! Description of a todo cannot be empty. \" +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"Please tell Goose in this format:\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    \"\u0027todo [description]\u0027\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            taskList.add(new Todo(description));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return (Todo) taskList.get(taskList.size() - 1);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Deletes task from task list array based on the index provided."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param index Index of task to be deleted from task list"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Updated task list as an ArrayList"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseTaskExistenceException If index is out of bounds"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public ArrayList\u003cTask\u003e deleteTask(int index) throws GooseTaskExistenceException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (index \u003e\u003d taskList.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseTaskExistenceException(\"You trick Goose? Task \" + taskList.size()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    + \" doesn\u0027t exist. Honk...\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Marks task as done from task list array based on the index provided."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param index Index of task to be marked as done from task list"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Updated task list as an ArrayList"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseTaskExistenceException If index is out of bounds"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Boolean markDone(int index) throws GooseTaskExistenceException {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (index \u003e\u003d taskList.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseTaskExistenceException(\"You trick Goose? This task doesn\u0027t exist. Honk...\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Task selected \u003d taskList.get(index);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (selected.getIsDone()) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            selected.markAsDone();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Marks task as undone from task list array based on the index provided."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param index Index of task to be marked as undone from task list"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Updated task list as an ArrayList"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseTaskExistenceException If index is out of bounds"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Boolean markUndone(int index) throws GooseTaskExistenceException {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (index \u003e\u003d taskList.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseTaskExistenceException(\"You trick Goose? This task doesn\u0027t exist. Honk...\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        Task selected \u003d taskList.get(index);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (!selected.getIsDone()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            selected.markAsUndone();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Finds and returns an ArrayList of tasks from the task list which contain the search keyword."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param search Search keyword"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return ArrayList of Tasks from the task list which contain the search keyword"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public ArrayList\u003cTask\u003e findTask(String search) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            Task selected \u003d taskList.get(i);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (selected.description.contains(search)) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                foundTasks.add(selected);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return foundTasks;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private static String parseDate(String date) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] dateArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String day \u003d dateArr[0];"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (Integer.parseInt(day) \u003c 10) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String month \u003d dateArr[1];"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (Integer.parseInt(month) \u003c 10) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String year \u003d dateArr[2];"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 226
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Represents a \u003ccode\u003eTodo\u003c/code\u003e, which is a subclass of a \u003ccode\u003eTask\u003c/code\u003e. A Todo only contains a description."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Todo(String description, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String checkbox \u003d \"[\" + super.getStatusIcon() + \"]\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return \"[T]\" + checkbox + \" \" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": " * Contains methods which handle interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private int maxLength;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        this.maxLength \u003d 60;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Display welcome message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String logo \u003d \" _________                        \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" __  ____/_______________________ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" _  / __ _  __ \\\\  __ \\\\_  ___/  _ \\\\  \u003e(o )___\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" / /_/ / / /_/ / /_/ /(__  )/  __/   ( ._\u003e /\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                + \" \\\\____/  \\\\____/\\\\____//____/ \\\\___/     `---\u0027\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(\"Hello it\u0027s\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String greeting \u003d \"Honk, this Goose. Do you need help with something?\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(\"\\n\" + wrapLine(greeting));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Display goodbye message."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showBye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(\"Honk honk!\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Display task list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Task list as a String (ideally loaded from Storage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showList(String taskList) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(\"Honk! Here\u0027s your current task list: \\n\" + taskList));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Message to be displayed after task has been added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param addedTask Task that was added"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Updated task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showAddTask(Task addedTask, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String addHeader \u003d \" Honk! Okay added the task:\\n  \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(addHeader + addedTask + showCount(taskList)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Message to be displayed after task has been marked as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param doneTask Task that was marked as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showDoneTask(Task doneTask) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String doneHeader \u003d \"Good job! I\u0027ve honked it as done:\\n  \";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(doneHeader + doneTask));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Message to be displayed after task has been marked as undone."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param doneTask Task that was marked as undone"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showUndoneTask(Task doneTask) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String undoneHeader \u003d \"Hope you complete it soon! I\u0027ve honked it as undone:\\n  \";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(undoneHeader + doneTask));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Message to be displayed after task has been deleted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param deletedTask Task that was deleted"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Updated task list"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showDeleteTask(Task deletedTask, ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String deleteHeader \u003d \"Honk! Removed this task from the list:\\n  \";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(deleteHeader + deletedTask + showCount(taskList)));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Displays list of found tasks when a user uses the \u0027find\u0027 command."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param foundTasks ArrayList of tasks which match the search"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showFoundTasks(ArrayList\u003cTask\u003e foundTasks) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String foundHeader \u003d foundTasks.isEmpty()"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                ? \"Goose didn\u0027t find anything, honk...\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                : \"Honk! Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        // print list of found tasks"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String foundList \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            int indexNum \u003d i + 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String item \u003d \" \" + indexNum + \".\" + foundTasks.get(i).toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (i !\u003d foundTasks.size() - 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                item +\u003d \"\\n\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            foundList +\u003d item;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(foundHeader + foundList));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Displays message after undo command has been executed."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showUndoMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(\"I have unhonked your previous command.\\n \" +"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                \"Use \\\u0027undo\\\u0027 to undo your undo. Honk!\"));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Displays count of current tasks in task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param taskList Current task list as an ArrayList"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return String containing formatted message regarding task count of task list."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String showCount(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String count \u003d taskList.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                ? \"\\n\\n Now you have \" + taskList.size() + \" task in the list.\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                : \"\\n\\n Now you have \" + taskList.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return count;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    // Exceptions"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Displays loading error message."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(\"Honk! Loading error!\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Displays formatted error message."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param msg Error message to be displayed"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        System.out.println(wrapLine(msg));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    // Formatting"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Wraps message in appropriate format to be displayed."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param msg Message to be wrapped"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return String containing formatted message"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public String wrapLine(String msg) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String top \u003d \"\";"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 0; i \u003c maxLength; i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            top +\u003d \"_\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        top +\u003d \"\\n\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String bottom \u003d \"__  \";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 0; i \u003c maxLength - 4; i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            bottom +\u003d \"_\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String bottomArrow \u003d \"\\n   /\\n\";"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return top + \"\\n\" + \" \" + msg + \"\\n\" + bottom + bottomArrow;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 173
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" layoutX\u003d\"335.0\" layoutY\u003d\"25.0\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003cFont name\u003d\"Franklin Gothic Demi\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "      \u003c/Label\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" layoutX\u003d\"256.0\" layoutY\u003d\"25.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "suwoons": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.layout.FlowPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Honk honk?\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003cFont name\u003d\"Franklin Gothic Demi\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Honk!\" textOverrun\u003d\"WORD_ELLIPSIS\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003cFont name\u003d\"Arial\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"552.0\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "      \u003cFlowPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" /\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "suwoons": 28
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void parseCommand_unrecognisedCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(\"hello\", Parser.parseCommand(\"hello\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (GooseUnrecognisedException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(\"Honk honk??\", e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 17
    }
  },
  {
    "path": "src/test/java/TaskListStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class TaskListStub {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * Creates event based on user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @return Event which was created"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseEmptyDescriptionException if description of event is empty"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     * @throws GooseIllegalFormatException if the format is not valid"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public static Event createEvent(String input) throws GooseEmptyDescriptionException, GooseIllegalFormatException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] eventArr \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] descriptionSplit \u003d eventArr[0].split(\" \");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        for (int i \u003d 1; i \u003c descriptionSplit.length; i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (i \u003d\u003d descriptionSplit.length - 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                description +\u003d descriptionSplit[i] + \" \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            throw new GooseEmptyDescriptionException(\"Honk! Description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            if (eventArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                throw new GooseIllegalFormatException(\"Honk! No event date specified.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            eventArr \u003d eventArr[1].split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String date \u003d parseDate(eventArr[0]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            String time \u003d eventArr[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            return new Event(description, date, time);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    private static String parseDate(String date) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String[] dateArr \u003d date.split(\"/\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String day \u003d dateArr[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (Integer.parseInt(day) \u003c 10) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String month \u003d dateArr[1];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        if (Integer.parseInt(month) \u003c 10) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        String year \u003d dateArr[2];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        return year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 51
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void createEvent_noDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(new Event(\"description\", \"2020-01-01\", \"1000\"), TaskListStub.createEvent(\"event\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (GooseEmptyDescriptionException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(\"Honk! Description of an event cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }  catch (GooseIllegalFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void createEvent_noAt_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(new Event(\"description\", \"2020-01-01\", \"1000\"),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    TaskListStub.createEvent(\"event description /at\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (GooseIllegalFormatException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(\"Honk! No event date specified.\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (GooseEmptyDescriptionException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void testCreateEvent() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            assertEquals(\"[E][N] description (at: Jan 1 2020, 10.00am)\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                    TaskListStub.createEvent(\"event description /at 1/1/2020 1000\").toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        } catch (GooseEmptyDescriptionException | GooseIllegalFormatException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "suwoons"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "suwoons": 42
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    public void testCreateTodo() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "        assertEquals(\"[T][N] borrow book\", new Todo(\"borrow book\").toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "suwoons": 12
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "Hello it\u0027s"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": " _________"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": " __  ____/_______________________"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": " _  / __ _  __ \\  __ \\_  ___/  _ \\  \u003e(o )___"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": " / /_/ / / /_/ / /_/ /(__  )/  __/   ( ._\u003e /"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": " \\____/  \\____/\\____//____/ \\___/     `---\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "          Honk, this Goose. Do you need help with something?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         ________________________________________________________  __"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                                                 \\"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "          Honk honk!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "         ________________________________________________________  __"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "                                                                 \\"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "suwoons": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "suwoons": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "dir /s /B C:\\Users\\sarah\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\suwoon\\duke\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "java -classpath ..\\bin C:\\Users\\sarah\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\suwoon\\duke\\src\\main\\java\\Duke.java \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "suwoons": 22
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "suwoons"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "suwoons"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "suwoons"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "suwoons"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "suwoons"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "suwoons"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "suwoons"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "suwoons"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "suwoons"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "suwoons"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "suwoons"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ..\\bin C:\\Users\\sarah\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\suwoon\\duke\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "suwoons"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "suwoons"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "suwoons"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "suwoons"
        },
        "content": "java -classpath C:\\Users\\sarah\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\suwoon\\duke\\src\\main\\java Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "suwoons"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "suwoons"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "suwoons"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "suwoons"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "suwoons"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "suwoons"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "suwoons"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "suwoons"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "suwoons": 34
    }
  }
]
