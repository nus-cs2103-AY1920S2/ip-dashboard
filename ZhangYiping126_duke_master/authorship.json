[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "test {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "test {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 48,
      "-": 15
    }
  },
  {
    "path": "data/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] sth"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] sth"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] sth"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][0] whatever"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][0] sthlongsthlongsthlongsthlongsthlongsthlongsthlongsthlongsthlong"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [D][1] sth sth (by: 2020-09-10)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] NEW"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][1] todo todo todo todotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodotodo"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 13
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "## User Inteface"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "![alt text][screenshot]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "[screenshot]: Ui.png "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1. Create and delete operations on todo/deadline/event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1. List Task - Lists the tasks you have."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1. Mark a task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1. Sort tasks by dates"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1. Find a task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "## List of Commands"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 1. Adding a todo task: `todo` "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Adds a todo task to the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`todo do assignment`"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✘] do assignment"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 2. Adding a deadline task: `deadline` "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Adds a deadline task to the task list. "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "The date follows `yyyy/MM/dd` format "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`deadline have fun /by 2020-06-01`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "  [D][✘] have fun (by: June 1 2020)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 3. Adding a event task: `event` "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Adds a event task to the task list. All the dates follows "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`yyyy/MM/dd` format"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format 1: `event DESCRIPTION /at DATE`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`event attend conference /at 2020-01-01`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "  [E][✘] attend conference (at: Jan 1 2020)"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 4. Listing all tasks: `list`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Shows a list of all tasks in the task list."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "1.[T][✘] do assignment"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "2.[D][✘] have fun (by: June 1 2020)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "3.[E][✘] attend conference (at: Jan 1 2020)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 5. Marking a task as done: `done`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Marks the specified task as done."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "  [T][✓] do assignment"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 6. Deleting a task: `delete`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`delete 2`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "  [D][✘] have fun (by: June 1 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Now you have 2 tasks"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 7. Searching for a task: `find`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Finds tasks whose descriptions contain the given keyword."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "`find Assignment`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "  [T][✓] do assignment"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "```"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 8. Undoing previous command: `sortAsc`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Sort the lists by ascending dates, dates of todo items are treated today."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `sortAsc`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 9. Redoing the previously undone command: `sortDes`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Sort the lists by ascending dates, dates of todo items are treated today."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Format: `sortDes`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "### 12. Saving the data"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "The lists are automatically saved in a txt file and loaded everytime the programme starts."
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 134,
      "-": 22
    }
  },
  {
    "path": "src/main/java/DateCompareAsc.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class DateCompareAsc implements Comparator\u003cItem\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public int compare(Item i2, Item i1) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return i1.getDate().compareTo(i2.getDate());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 7
    }
  },
  {
    "path": "src/main/java/DateCompareDes.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class DateCompareDes implements Comparator\u003cItem\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public int compare(Item i1, Item i2) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return i1.getDate().compareTo(i2.getDate());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 7
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with task with deadlines."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Deadline extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Deadline(String name, LocalDate date, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string of the deadline item."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string before it is marked done,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * used for string substitution in the txt file when it is marked done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String tobeReplaced() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d  \"   [D][\" + 0 + \"] \" + super.getName() + \" (by: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string corresponds to the current item."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String currentString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d  \"   [D][\" + 1 + \"] \" + super.getName() + \" (by: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String checkString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [D][\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (super.getDone()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"0\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"1\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d \"] \" + super.getName() + \" (by: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 62
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private DialogBox(String path, String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(path));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        final Circle clip \u003d new Circle(25, 25, 25);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        displayPicture.setClip(clip);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns User DialogBox."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return new DialogBox(\"/view/UserDialogBox.fxml\", text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns Duke DialogBox."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        var db \u003d new DialogBox(\"/view/DukeDialogBox.fxml\", text, img);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 68
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method reads user input and process it."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static TaskList list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.list \u003d storage.loadTxt(ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return parser.parse(ui, list, storage, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 20,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with events with a specific date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Event extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Event(String name, LocalDate date, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string of the event item."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string before it is marked done, used for string substitution"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * in the txt file when it is marked done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String tobeReplaced() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E][\" + 0 + \"] \" + super.getName() + \" (at: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string corresponds to the current item."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String currentString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d  \"   [E][\" + 1 + \"] \" + super.getName() + \" (at: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String checkString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E][\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (super.getDone()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"0\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"1\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d \"] \" + super.getName() + \" (at: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 60
    }
  },
  {
    "path": "src/main/java/IllegalInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class IllegalInstructionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public IllegalInstructionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 8
    }
  },
  {
    "path": "src/main/java/Item.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class is parent class of other three classes, mark to be done and delete functions are enabled."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public abstract class Item {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Item(String name, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.isDone \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns a string representing the item."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"[\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"\\u2713\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"\\u2718\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d \"] \" + this.name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the item after being marked as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Item markDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ui.markDone(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract String tobeReplaced();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract String currentString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract String checkString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 53
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            stage.setTitle(\"Task Manager\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpg\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Initialize the dialogBox."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                DialogBox.getDukeDialog(duke.ui.greeting(), dukeImage)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        );"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Initialize duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                DialogBox.getDukeDialog(\"Past data loaded\\n\" + duke.ui.instruction(), dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class parses user\u0027s input to a command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the appended string without the first word in the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String append(String[] tmp) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String task \u003d \"\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assert tmp.length \u003e\u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        for (int i \u003d 1; i \u003c tmp.length; i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            task +\u003d tmp[i];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (i !\u003d tmp.length - 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                task +\u003d \" \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method parses user input and executes the required instruction."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String parse(Ui ui, TaskList list, Storage storage, String temp) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String[] tmp \u003d temp.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String task \u003d append(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (temp.equals(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return list.toString();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (temp.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return ui.bye();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (temp.equals(\"sortAsc\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return list.sortAsc().toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (temp.equals(\"sortDes\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return list.sortDes().toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"done\") || tmp[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (tmp.length \u003c 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return (\"OOPS!!! The index of a task cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else if (Integer.parseInt(tmp[1]) \u003e list.items.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return (\"OOPS!!! The index of a task is out of range.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                assert tmp.length \u003e\u003d 2;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                int index \u003d Integer.parseInt(tmp[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (tmp[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.items.get(index - 1).markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    storage.updateTxt(list.items.get(index - 1).tobeReplaced(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                            list.items.get(index - 1).currentString(), ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    assert list.items.get(index - 1).getDone() \u003d\u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return ui.markDone(list.items.get(index - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    storage.updateTxt(list.items.get(index - 1).checkString(), \"\", ui);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    String taskDeleted \u003d list.items.get(index - 1).toString();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.delete(index - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return ui.removeTask(list.count, taskDeleted);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return \"Description cannot be empty\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(todo.currentString(), ui);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return ui.addTask(list);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return \"Description cannot be empty\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] e \u003d task.split(\" /at \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (e.length \u003c 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return \"Time cannot be empty\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Event event \u003d new Event(e[0], LocalDate.parse(e[1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(event.currentString(), ui);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return ui.addTask(list);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return \"Description cannot be empty\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] d \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (d.length \u003c 2) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    return \"Time cannot be empty\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Deadline ddl \u003d new Deadline(d[0], LocalDate.parse(d[1]));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(ddl);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(ddl.currentString(), ui);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return ui.addTask(list);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }  else if (tmp[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return ui.searchTask() + list.search(task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                return (\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IllegalInstructionException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIndexErr();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOerr();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printDateErr();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return \"Task completed\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args){}"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 112
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class loads, stores and updates user\u0027s todo-list in a local txt file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private File file \u003d Path.of(System.getProperty(\"user.dir\")).resolve(\"data/output.txt\").toFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add a new item to the txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void addTxt(String s, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data/output.txt\", true);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.append(s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOerr();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add items to tasklist based based on the txt file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList loadTxt(Ui ui) throws DateTimeParseException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] data \u003d scanner.nextLine().split(\" \\\\| \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (data[0].equals(\"\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                data[0] \u003d data[0].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                boolean done;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] splitted;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] tmp;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                splitted \u003d data[0].split(\" \", 2);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                tmp \u003d splitted[1].split(\" \\\\(\", 2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (data[0] .charAt(4) \u003d\u003d \u00270\u0027) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    done \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    done \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (data[0] .charAt(1) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"at: \",\"\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\)\",\"\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Event(tmp[0], LocalDate.parse(tmp[1]), done));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else if (data[0] .charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"by: \",\"\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\)\",\"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Deadline(tmp[0], LocalDate.parse(tmp[1]), done));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Todo(splitted[1], done));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printLoad();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printDateErr();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOerr();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method updates items from the txt file based on user input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void updateTxt(String prev, String now, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(\"data/output.txt\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                inputBuffer.append(line);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String inputStr \u003d inputBuffer.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            inputStr \u003d inputStr.replace(prev, now);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(\"data/output.txt\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileOut.write(inputStr.getBytes());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOerr();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 103
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class contains a list of todo items."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    ArrayList\u003cItem\u003e items \u003d new ArrayList\u003cItem\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    int count;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.count \u003d 0;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList(ArrayList\u003cItem\u003e items, int count) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.count \u003d count;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add a new item to the list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void addItem(Item item) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items.add(item);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.count++;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method delete an item from the list based on its index."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList delete(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        count--;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items.remove(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string of the search result."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String search(String task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (items.get(i).toString().toLowerCase().contains(task.toLowerCase())) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                temp +\u003d ui.space + items.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns TaskList sorted by ascending dates."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList sortAsc() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ArrayList\u003cItem\u003e sorted \u003d new ArrayList\u003cItem\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        sorted.addAll(items);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        DateCompareAsc compare \u003d new DateCompareAsc();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Collections.sort(sorted, compare);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return new TaskList(sorted, count);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns TaskList sorted by descending dates."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList sortDes() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ArrayList\u003cItem\u003e sorted \u003d new ArrayList\u003cItem\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        sorted.addAll(items);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        DateCompareDes compare \u003d new DateCompareDes();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Collections.sort(sorted, compare);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return new TaskList(sorted, count);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (count \u003c 1) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            return \"No current task in the list\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String temp \u003d \" Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                temp +\u003d \" \";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                temp +\u003d Integer.toString(i + 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                temp +\u003d this.items.get(i);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 87
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with a todo item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Todo extends Item {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Todo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T]\" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string before it is marked done,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * used for string substitution in the txt file when it is marked done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String tobeReplaced() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T][\" + 0 + \"] \" + super.getName() + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * Returns the string corresponds to the current item."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String currentString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T][\" + 1 + \"] \" + super.getName() + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String checkString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T][\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (super.getDone()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"0\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"1\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d \"] \" + super.getName();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return LocalDate.now();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 52
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class contains Duke\u0027s response to user\u0027s input, including error messages."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    String space \u003d \"     \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method prints the greeting string at the start of the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String greeting() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method prints the string for instruction."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String instruction() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String instruction \u003d \"Try add a task by:\\n\" + space + \"1. todo xxxx\\n\" + space"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"2. deadline xxxx /by YYYY-MM-DD\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + space + \"3. event xxxx /at YYYY-MM-DD\\n\" + \"or enter \u0027list\u0027 to display all items\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"or \u0027delete/done index\u0027 for deletion/marked as done\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"or find xxxx for search\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"or sort existing list by enter \u0027sortAsc\u0027 or \u0027sortDes\u0027\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"date of todo items assumed to be today\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return instruction;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method prints the string at the end of the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String bye \u003d \" Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return bye;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String removeTask(int count, String task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return (\"Noted. I\u0027ve removed this task:\\n\" + space + task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"Now you have \" + count + \" task\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String searchTask() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String addTask(TaskList list) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return (\" Got it. I\u0027ve added this task:\\n\" + space + list.items.get(list.items.size() - 1)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \" Now you have \" + list.count + \" task\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String markDone(Item item) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return \"Nice! I\u0027ve marked this task as done:\\n\" + space + item;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printIOerr() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space + \"The format of io is wrong.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printDateErr() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space + \"OOPS!!! The format of date is wrong (yyyy-MM-dd).\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printLoad() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(space + \"Past data successfully loaded.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printIndexErr() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space + \"OOPS!!! The format of index is wrong.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 74
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         prefWidth\u003d\"380.0\" spacing\u003d\"10.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_LEFT\" layoutX\u003d\"14.0\" layoutY\u003d\"14.0\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"246.0\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 18
    }
  },
  {
    "path": "src/main/resources/view/DukeDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         prefWidth\u003d\"380.0\" spacing\u003d\"10.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #5db6f8#99ddf8; -fx-background-radius: 8; -fx-padding: 10px; -fx-border-radius: 8; -fx-border-color: #fbf3f3#fbf3f3;\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 18
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"600.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 19
    }
  },
  {
    "path": "src/main/resources/view/UserDialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         prefWidth\u003d\"380.0\" spacing\u003d\"10.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #F8D066; -fx-background-radius: 8; -fx-padding: 10px; -fx-border-radius: 8; -fx-border-color: #fbf3f3;\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 18
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-02-02\"));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(deadline.toString().trim(),\"[D][\\u2718] return book (by: Feb 2 2020)\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(deadline.tobeReplaced().trim(),\"[D][\\u2718] return book (by: 2020-02-02)\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(todo.toString().trim(),\"[T][\\u2718] return book\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(todo.tobeReplaced().trim(),\"[T][\\u2718] return book\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 9
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [T][✗] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      1   [T][✗] borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      2   [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      3   [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 34
    }
  }
]
