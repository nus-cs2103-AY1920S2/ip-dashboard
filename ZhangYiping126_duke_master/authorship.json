[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "test {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 13,
      "-": 20
    }
  },
  {
    "path": "data/output.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✓] have fun"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] sth (at: 2020-08-20)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] sth (at: 2020-11-02)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [D][✓] sth (by: 2020-01-29)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] sth (at: 2020-10-01)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✓] s"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [D][✓] sth (by: 2020-10-01)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] stt (at: 2020-01-10)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✗] wahtwaht"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✓] what"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✓] list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] sth (at: 2010-09-09)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [D][✓] d (by: 2020-09-19)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [E][✓] a (at: 2019-09-29)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "   [T][✗] do laundary"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with task with deadlines."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Deadline extends Item {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    boolean done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Deadline(String name, LocalDate date) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Deadline(String name, LocalDate date, boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [D]\" + super.toString() + \" (by: \"+ date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string before it is marked done, used for string substitution in the txt file when it is marked done."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String replace() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [D][✗] \" + super.getName() + \" (by: \"+ date + \")\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string corresponds to the current item."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String now() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [D]\" + super.toString() + \" (by: \"+ date + \")\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 42
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    static Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        processList(sc);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method reads user input and process it."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private static void processList(Scanner sc) throws IllegalInstructionException, NumberFormatException, DateTimeParseException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ui.greeting();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        storage.loadTxt(list, ui);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        while (!sc.hasNext(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            parser.parse(ui, list, storage, sc.nextLine());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 22,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with events with a specific date."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Event extends Item {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Event(String name, LocalDate date, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E]\" + super.toString() + \" (at: \"+ date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string before it is marked done, used for string substitution in the txt file when it is marked done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String replace() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E][✗] \" + super.getName() + \" (at: \"+ date + \")\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string corresponds to the current item."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String now() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [E]\" + super.toString() + \" (at: \" + date + \")\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 38
    }
  },
  {
    "path": "src/main/java/IllegalInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with exceptions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class IllegalInstructionException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public IllegalInstructionException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 8
    }
  },
  {
    "path": "src/main/java/Item.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class is parent class of other three classes, mark to be done and delete functions are enabled."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public abstract class Item {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Item(String name, boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"[\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"✓\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \"✗\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d \"] \"+this.name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Item markDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        ui.markDone(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract String replace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public abstract String now();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 37
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class parses user\u0027s input to a command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the appended string without the first word in the input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String append(String[] tmp) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String task \u003d \"\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        for (int i \u003d 1; i \u003c tmp.length; i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            task +\u003d tmp[i];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (i !\u003d tmp.length - 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                task +\u003d \" \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method parses user input and executes the required instruction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void parse(Ui ui, TaskList list, Storage storage, String temp) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String[] tmp \u003d temp.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String task \u003d append(tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (temp.equals(\"list\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                System.out.println(ui.line + \"\\n\" + list);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"done\") || tmp[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (tmp.length \u003c 2) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwErr(\"☹ OOPS!!! The index of a task cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else if (Integer.parseInt(tmp[1]) \u003e list.items.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwErr(\"☹ OOPS!!! The index of a task is out of range.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                int index \u003d Integer.parseInt(tmp[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (tmp[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.items.get(index - 1).markDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    storage.updateTxt(list.items.get(index - 1).replace(), list.items.get(index - 1).now(), ui);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    storage.updateTxt(list.items.get(index - 1).now(), \"\", ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.delete(index - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwDescriptionErr();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(todo);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(todo.now(), ui);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwDescriptionErr();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] e \u003d task.split(\" /at \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (e.length \u003c 2) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwTimeErr();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Event event \u003d new Event(e[0], LocalDate.parse(e[1]));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(event);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(event.now(), ui);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else if (tmp[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (task.equals(\"\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwDescriptionErr();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] d \u003d task.split(\" /by \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (d.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    ui.throwTimeErr();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                Deadline ddl \u003d new Deadline(d[0], LocalDate.parse(d[1]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.addItem(ddl);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                storage.addTxt(ddl.now(), ui);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }  else if (tmp[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                list.search(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                ui.throwErr(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IllegalInstructionException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIndexErr();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOErr();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printDateErr();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 91
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class loads, stores and updates user\u0027s todo-list in a local txt file."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Storage() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add a new item to the txt file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void addTxt(String s, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(\"data/output.txt\", true);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.append(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.flush();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOErr();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add items to tasklist based based on the txt file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void loadTxt(TaskList list, Ui ui) throws DateTimeParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(\"data/output.txt\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                line \u003d line.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                boolean done;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] splitted;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                String[] tmp;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                splitted \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                tmp \u003d splitted[1].split(\" \", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (line.charAt(4) \u003d\u003d \u0027✓\u0027) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    done \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    done \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                if (line.charAt(1) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\(at: \",\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\)\",\"\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Event(tmp[0], LocalDate.parse(tmp[1]), done));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else if (line.charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\(by: \",\"\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    tmp[1] \u003d tmp[1].replaceAll(\"\\\\)\",\"\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Deadline(tmp[0], LocalDate.parse(tmp[1]), done));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                    list.addItem(new Todo(splitted[1], done));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printLoad();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printDateErr();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOErr();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method updates items from the txt file based on user input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void updateTxt(String prev, String now, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(\"data/output.txt\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                inputBuffer.append(line);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            String inputStr \u003d inputBuffer.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            inputStr \u003d inputStr.replace(prev, now);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(\"data/output.txt\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileOut.write(inputStr.getBytes());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            ui.printIOErr();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 87
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class contains a list of todo items."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    ArrayList\u003cItem\u003e items \u003d new ArrayList\u003cItem\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    int count \u003d 0;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items \u003d items;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.count \u003d count;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method add a new item to the list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void addItem(Item item) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items.add(item);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.count ++;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String response \u003d ui.addTask(this, count);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (this.count \u003e 1) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            response +\u003d \"s\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            response +\u003d \" in the list.\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        response +\u003d ui.line;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method delete an item from the list based on its index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public TaskList delete(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        count--;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String response \u003d ui.removeTask(this, index, count);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        if (this.count \u003e 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            response +\u003d \"s\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        response +\u003d \" in the list.\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        response +\u003d ui.line;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        this.items.remove(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void search(String task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(ui.searchTask());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        for (int i \u003d 0; i \u003c items.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            if (items.get(i).toString().toLowerCase().contains(task.toLowerCase())) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                System.out.print(ui.space + items.get(i));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(ui.line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d ui.space + \" Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        for (int i \u003d 0; i \u003c count; i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d ui.space;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d \" \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d Integer.toString(i+1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "            temp +\u003d this.items.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        temp +\u003d ui.line;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 68
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class deals with a todo item."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Todo extends Item {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Todo (String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, false);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    Todo (String name, boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T]\"+ super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string before it is marked done, used for string substitution in the txt file when it is marked done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String replace() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String temp \u003d \"   [T][✗] \" + super.getName() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method returns the string corresponds to the current item."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String now() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 31
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " * This class contains Duke\u0027s response to user\u0027s input, including error messages."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    String space \u003d \"     \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    String line \u003d space + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public Ui() {}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method prints the greeting string at the start of the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void greeting() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String greeting \u003d line + \"\\n\" + space + \" Hello! I\u0027m Duke\\n\" + space + \" What can I do for you?\\n\" + line + \"\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.print(greeting);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     * This method prints the string at the end of the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        String bye \u003d line + \"\\n\" + space + \" Bye. Hope to see you again soon!\\n\" + line;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.print(bye);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String removeTask(TaskList list, int index, int count) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return (line + \"\\n\" + space + \"Noted. I\u0027ve removed this task:\\n\" + space + list.items.get(index) + space + \"Now you have \" + count + \" task\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String searchTask() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return (line + \"\\n\" + space + \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public String addTask(TaskList list, int count) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        return (line + \"\\n\" + space + \" Got it. I\u0027ve added this task:\\n\" + space + list.items.get(list.items.size()-1)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "                + space + \" Now you have \" + count + \" task\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void markDone(Item item) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(line + \"\\n\" + space + \"Nice! I\u0027ve marked this task as done:\\n\" + space + item + line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void throwErr(String err) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        throw new IllegalInstructionException(space + err);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void throwDescriptionErr() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        throw new IllegalInstructionException(space+\"☹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void throwTimeErr() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        throw new IllegalInstructionException(space+\"☹ OOPS!!! The time/description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printIOErr() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space+\"☹ OOPS!!! The format of IO is wrong.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printDateErr() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space+\"☹ OOPS!!! The format of date is wrong (yyyy-MM-dd).\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printLoad() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.out.println(space+\"Past data successfully loaded.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public void printIndexErr() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        System.err.println(space + \"☹ OOPS!!! The format of index is wrong.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 77
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-02-02\"));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(deadline.toString().trim(),\"[D][✗] return book (by: Feb 2 2020)\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(deadline.replace().trim(),\"[D][✗] return book (by: 2020-02-02)\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 9
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "class TodoTest {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        Todo todo \u003d new Todo(\"return book\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(todo.toString().trim(),\"[T][✗] return book\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        assertEquals(todo.replace().trim(),\"[T][✗] return book\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 8
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [T][✗] borrow book"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 1 task in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "        [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      1   [T][✗] borrow book"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      2   [D][✗] return book (by: Sunday)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      3   [E][✗] project meeting (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "      Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "     ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ZhangYiping126"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ZhangYiping126": 34
    }
  }
]
