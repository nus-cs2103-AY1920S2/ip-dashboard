[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 13,
      "-": 20
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "T | 1 | meet pao"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "D | 0 | submit assignment | Jan 28 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "T | 1 | homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "E | 1 | go cycling | Nov 10 2020"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "T | 1 | say hi"
      }
    ],
    "authorContributionMap": {
      "chanckben": 5
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command to add a task to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public AddCommand(Task t) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws SavingException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String response \u003d \"Got it. I\u0027ve added this task:\\n\" + this.task + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        response +\u003d \"Now you have \" + tasks.getNumTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showMsg(response);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 24
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An abstraction of the user input."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param tasks Handler of tasks in Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param ui Handler of interactions with user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param storage Handler of tasks stored in file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws DukeException If error occurs during execution of command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns whether the command requires exiting Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return true if command requires exit, false if not."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 19
    }
  },
  {
    "path": "src/main/java/DateTimeTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A task that comes with a date."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "abstract class DateTimeTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    protected LocalDate dateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public DateTimeTask(String description, LocalDate dateTime) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.dateTime \u003d dateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the date attached to the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Date in task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getDateTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 22
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A Deadline task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class Deadline extends DateTimeTask {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        super(description, by);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task getCopy() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Deadline d \u003d new Deadline(this.description, this.dateTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            d.setDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return d;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return super.toString() + \" (by: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 29
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command to delete a task from Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public DeleteCommand(int idx) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            Task t \u003d tasks.removeTask(this.idx);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            String response \u003d \"Noted. I\u0027ve removed this task:\\n\" + t + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response +\u003d \"Now you have \" + tasks.getNumTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            ui.showMsg(response);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 28
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command to mark a task as done."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private int idx;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public DoneCommand(int idx) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.idx \u003d idx;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            Task t \u003d tasks.markTaskAsDone(this.idx);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            String response \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + t;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            ui.showMsg(response);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * Duke is a friendly chatbot who will keep track of your tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * and whether they have been completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Executes Duke and waits for user input before executing it."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Initialises Duke with known filepath."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param args Command line arguments."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 46,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception that is thrown when Duke encounters an error."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An Event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class Event extends DateTimeTask {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        super(description, at);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task getCopy() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Event e \u003d new Event(this.description, this.dateTime);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            e.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return super.toString() + \" (at: \" + this.getDateTime() + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 30
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command to exit Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String farewell \u003d \"Good day my friend! I\u0027m here anytime you need me :)\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showMsg(farewell);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 15
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    String keyword;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ArrayList\u003cTask\u003e reqTasks \u003d tasks.find(this.keyword);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String response \u003d \"\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (reqTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response \u003d \"There are no matching tasks with the keyword: \" + this.keyword;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            for (Task t: reqTasks) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                response +\u003d (counter + \".\"); // Index of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                response +\u003d (\" \" + t + \u0027\\n\u0027); // Description of task and whether it is done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response \u003d response.substring(0, response.length() - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showMsg(response);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 33
    }
  },
  {
    "path": "src/main/java/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception thrown when an invalid date is entered."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class InvalidDateException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"Invalid date entered. Please enter the date in the form YYYY-MM-DD\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 9
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception thrown when an invalid index is entered."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String msg \u003d \"The index you have entered is invalid.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command to list out the tasks stored in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String response \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response +\u003d (counter + \".\"); // Index of task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            response +\u003d (\" \" + t + \u0027\\n\u0027); // Description of task and whether it is done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        response \u003d response.substring(0, response.length() - 1);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showMsg(response);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 22
    }
  },
  {
    "path": "src/main/java/LoadingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception thrown when an error is encountered while loading tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class LoadingException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"Error occurred while loading tasks from file.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 9
    }
  },
  {
    "path": "src/main/java/MissingInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception thrown when there is missing information."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class MissingInfoException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private String taskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private boolean hasDescription;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    MissingInfoException(String taskType, boolean hasDescription) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.hasDescription \u003d hasDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns a description of the item that is missing."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Name of missing item."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMissingInfoName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (!this.hasDescription) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            return \"description\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            return \"date/time\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the task type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Task type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String message \u003d \"The \" + this.getMissingInfoName() + \" of a \" + this.getTaskType() + \" cannot be empty.\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 38
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * Parses user inputs."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Throws an error if the given array only has 1 element."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param task Type of task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param hasDescription Whether the task has a description."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param elements Array to check."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws DukeException If given array has only 1 element."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private static void checkArr(String task, boolean hasDescription, String[] elements) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (elements.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new MissingInfoException(task, hasDescription);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Parses the given user input and maps it to a command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws DukeException If any error occurs during parsing of the user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String[] inputElements \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String command \u003d inputElements[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new AddCommand(new ToDo(inputElements[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                String[] descElements \u003d inputElements[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, true, descElements);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(descElements[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new AddCommand(new Deadline(descElements[0], date));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                String[] descElements \u003d inputElements[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, true, descElements);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(descElements[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new AddCommand(new Event(descElements[0], date));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                int i \u003d Integer.parseInt(inputElements[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new DeleteCommand(i - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                int i \u003d Integer.parseInt(inputElements[1]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new DoneCommand(i - 1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                Parser.checkArr(command, false, inputElements);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new FindCommand(inputElements[1]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                c \u003d new UnknownCommand();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 73
    }
  },
  {
    "path": "src/main/java/SavingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * An exception thrown when an error is encountered while saving tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class SavingException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"Error occurred while saving tasks to file.\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 9
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * Manages tasks stored on the hard disk in tasks.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Parses a task from the file and converts it to a Task object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param taskElements Array consisting of the task type, task description and task date (if present)."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return A Task object representing the task stored in the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Task getNextTask(String[] taskElements) throws LoadingException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Task t \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        switch (taskElements[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            t \u003d new ToDo(taskElements[2]);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            if (taskElements[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                t.setDone();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            t \u003d new Deadline(taskElements[2],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                    LocalDate.parse(taskElements[3], DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            if (taskElements[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                t.setDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            t \u003d new Event(taskElements[2],"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                    LocalDate.parse(taskElements[3], DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            if (taskElements[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                t.setDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new LoadingException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Loads tasks from a file into Duke."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Array of Tasks as stored in the file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws LoadingException If error occurs while loading tasks from file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws LoadingException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        File f \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Scanner s;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new LoadingException();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            String currLine \u003d s.nextLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            String[] taskElements \u003d currLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            tasks.add(this.getNextTask(taskElements));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Saves tasks from Duke to a file."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param tasks Tasks to be stored in the file."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws SavingException If error occurs while saving tasks to file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws SavingException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            this.writeToFile(this.filePath, this.parseTasks(tasks));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            throw new SavingException();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Writes the String representation of all tasks in Duke to a file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param filePath Path of file."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param textToAdd String representation of tasks."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @throws IOException If error occurs when writing to the file."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Converts a Task object into a String to store in a file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Roughly equivalent to the reverse of the getNextTask method."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param t Task to be converted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private String parseTask(Task t) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String taskString \u003d t.getType() + \" | \";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (t.isDone()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            taskString +\u003d \"1 | \";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            taskString +\u003d \"0 | \";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        taskString +\u003d t.getDescription();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (t instanceof DateTimeTask) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            taskString +\u003d \" | \" + ((DateTimeTask) t).getDateTime();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        taskString +\u003d \"\\n\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Converts all Tasks in Duke into a String to store in a file."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param tasks An array of Task objects in Duke."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return String representation of all tasks."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private String parseTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String allTasks \u003d \"\";"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            allTasks +\u003d parseTask(t);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return allTasks;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 134
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A task in Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the status of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return A tick if task is done, a cross if task is not done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Sets the task to be done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns whether the task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return true if task is done, false if task is not done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the description of a task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Description of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public abstract String getType();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public abstract Task getCopy();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \u0027[\u0027 + this.getType() + \"][\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 56
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * Manages all the tasks in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns all tasks currently managed by Duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Array of tasks in Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ArrayList\u003cTask\u003e tasksCopy \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        for (Task t: this.tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            tasksCopy.add(t.getCopy());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return tasksCopy;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Returns the number of tasks currently managed by Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Number of tasks in Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public int getNumTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Add a task to Duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param t Task to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Remove a task from Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param i Index of task to be removed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Task that was removed."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task removeTask(int i) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Task t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.remove(i);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Mark a task in Duke as done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param i Index of task to be marked as done."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Task that was marked as done."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task markTaskAsDone(int i) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        Task t \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        t.setDone();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Find all tasks containing a given keyword."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param keyword Keyword to find."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return Array of tasks containing the keyword."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String keyword) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        for (Task t: this.tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            if (t.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                tasks.add(t.getCopy());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 81
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A ToDo task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Task getCopy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ToDo t \u003d new ToDo(this.description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        if (this.isDone()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 22
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Reads one line of user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return this.sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Prints a welcome message when Duke is initialised."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Woody and I\u0027m always here to keep you company.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "                + \"Let me know what you need and I\u0027ll be right on it.\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Prints a straight line which acts as a border for Duke\u0027s reply."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        System.out.println(\"_______________________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Prints Duke\u0027s reply to the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param msg Duke\u0027s reply."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void showMsg(String msg) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Prints an error message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * @param errorMsg Error message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void showError(String errorMsg) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        System.out.println(\"OOPS!!! \" + errorMsg);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     * Prints an error message for errors encountered during loading."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        System.out.println(\"OOPS!!! Error when loading tasks from file to Woody.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 59
    }
  },
  {
    "path": "src/main/java/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": " * A command that Duke does not understand."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        String response \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ui.showMsg(response);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 15
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Task todo, deadline, event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private Task t;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public TaskListTest() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.todo \u003d new ToDo(\"test todo\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.deadline \u003d new Deadline(\"test deadline\", LocalDate.parse(\"2020-10-21\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.event \u003d new Event(\"test event\", LocalDate.parse(\"2020-08-15\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void addTask() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.todo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.deadline);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.event);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        ArrayList\u003cTask\u003e arrTasks \u003d this.tasks.getTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(0) instanceof ToDo, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(0).getDescription(), \"test todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(1) instanceof Deadline, true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(1).getDescription(), \"test deadline\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(2) instanceof Event, true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(arrTasks.get(2).getDescription(), \"test event\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void markTaskAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.todo);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.deadline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.todo.isDone(), false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.deadline.isDone(), false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.event.isDone(), false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.markTaskAsDone(0);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getTasks().get(0).isDone(), true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.todo);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.markTaskAsDone(1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getTasks().get(1).isDone(), true);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.markTaskAsDone(2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getTasks().get(2).isDone(), true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.event);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void removeTask() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.tasks.addTask(this.event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getNumTasks(), 3);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.removeTask(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getNumTasks(), 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.removeTask(0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getNumTasks(), 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.t \u003d this.tasks.removeTask(0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.tasks.getNumTasks(), 0);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.t, this.event);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 67
    }
  },
  {
    "path": "src/test/java/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    private ToDo todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public ToDoTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.todo \u003d new ToDo(\"test todo\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void getType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.todo.getType(), \"T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void getDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.todo.getDescription(), \"test todo\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    public void isDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.todo.isDone(), false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        this.todo.setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "        assertEquals(this.todo.isDone(), true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chanckben": 27
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------------------------------"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Hello! I\u0027m Woody and I\u0027m always here to keep you company."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Let me know what you need and I\u0027ll be right on it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------------------------------"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    [T][✘] read book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    [D][✘] return book (by: Sun 4pm)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    [E][✘] buy bread (at: Mon 8am)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Here are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    1. [T][✘] read book"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    2. [D][✘] return book (by: Sun 4pm)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    3. [E][✘] buy bread (at: Mon 8am)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    -----------------------------------"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ------------------------------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    [D][✓] return book (by: Sun 4pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ------------------------------------"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------------------------"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    Good day my friend! I\u0027m here anytime you need me :)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    ---------------------------------------------------"
      }
    ],
    "authorContributionMap": {
      "chanckben": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": "deadline return book /by Sun 4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "event buy bread /at Mon 8am"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chanckben": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chanckben"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chanckben"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chanckben"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chanckben"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chanckben"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chanckben"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chanckben"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chanckben"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chanckben"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chanckben"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chanckben"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chanckben": 21
    }
  }
]
