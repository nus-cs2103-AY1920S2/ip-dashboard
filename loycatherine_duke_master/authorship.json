[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "test {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 37,
      "-": 19
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "- Tracker for various types of tasks"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "- Deletes a task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "- Mark a task as done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "- List all existing tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "- Find specific tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `todo` - Creates a new todo task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Creates a new todo task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`todo [description]`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Todo](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Todo.png)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `deadline` - Creates a new deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Creates a new deadline task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`deadline [description] /by [yyyy-mm-dd] [hh:mm]`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Deadline](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Deadline.png)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `event` - Creates a new event task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Creates a new event task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`event [description] /at [yyyy-mm-dd] [hh:mm]`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Event](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Event.png)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `delete` - Deletes a task"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Deletes a task"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`delete [index]`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Delete](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Delete.png)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `done` - Marks a task as done"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Marks a task as done"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`done [index]`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Done](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Done.png)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `list` - Lists all the tasks"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Lists all the tasks in the to-do list"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![List](https://raw.githubusercontent.com/loycatherine/duke/master/docs/List.png)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `find` - Finds a task"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Finds a task that contains the keyword"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`find [keyword]`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Find](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Find.png)"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `addNote` - Adds a note to a task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Adds a note to a task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`addNote [index] [note]`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![AddNote](https://raw.githubusercontent.com/loycatherine/duke/master/docs/AddNote.png)"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `note` - Retrieves a note of a task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Retrieves a note of a particular task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`note [index]`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Note](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Note.png)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "### `bye` - Exits the program"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "Saves your tasks and exits the program"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "![Bye](https://raw.githubusercontent.com/loycatherine/duke/master/docs/Bye.png)"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "loycatherine": 112,
      "-": 21
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "T | 0 | run"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 1
    }
  },
  {
    "path": "src/main/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "D | 0 | cry | Mar 4 2020"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 1
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Contains the image and message of Duke."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * @param text String of text to display."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * @param img Image of display photo for Duke."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * @return Flipped horizontal dialog box."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 68
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * The main class that runs the whole Task manager"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public static String filePath \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/KoalaChibi.png\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/CatChibi.png\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            assert ui !\u003d null : \"Ui not initialised\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            assert storage !\u003d null : \"Storage not initialised\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        });"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        });"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        );"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DoneException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (EmptyException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (UnknownException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DeleteException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.toString());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return ui.getResponse();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 177,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/KoalaCircle.png\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/CatCircle.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello, I\u0027m Cat!\\nWhat can I do for you?\", dukeImage));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 51
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " *  Handles the command when a user adds a new task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " *  For the execute method, it is to add the task to the tasklist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected Task taskToAdd;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public AddCommand(String command, Task taskToAdd) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.taskToAdd \u003d taskToAdd;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        tasks.add(this.taskToAdd);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.clearResponse();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.showAddedTask(taskToAdd, tasks.numOfTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 33
    }
  },
  {
    "path": "src/main/java/commands/AddNoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class AddNoteCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String addNote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected Task taskNote;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String note;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public AddNoteCommand(String command, String addNote, String note) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command  \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.addNote \u003d addNote;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        int num \u003d Integer.parseInt(this.addNote);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (num \u003e tasks.numOfTasks()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! No task to be done found!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                this.taskNote \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                this.taskNote.setNote(this.note);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.clearResponse();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.showAddedNote(this.taskNote);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 42
    }
  },
  {
    "path": "src/main/java/commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the command \"bye\", when the user wants to leave the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * isExit is set to true to break the loop."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * For the execute method, the tasks are saved into a text file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public ByeCommand(String command) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.clearResponse();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.showFarewell();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 30
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * The parent and abstract class of all the other command classes,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * which contains the execute method and the isExit boolean"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 18
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the command when the user wants a task deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * For the execute method, it removes the task from the tasklist."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected int taskToDelete;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DeleteCommand(String command, int taskToDelete) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.taskToDelete \u003d taskToDelete;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (this.taskToDelete \u003e tasks.numOfTasks()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! No task to be deleted found!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                Task taskRemoved \u003d tasks.remove(this.taskToDelete);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.clearResponse();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.showDeletedTask(taskRemoved, tasks.numOfTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 44
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the command when the user completes the task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * For the execute method, it sets the task to \u0027Done\u0027."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected Task doneTask;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected int taskToBeDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DoneCommand(String command, int taskToBeDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.taskToBeDone \u003d taskToBeDone;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (this.taskToBeDone \u003e tasks.numOfTasks()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! No task to be done found!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                this.doneTask \u003d tasks.get(taskToBeDone - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                tasks.completedTask(doneTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.clearResponse();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.showDoneTask(doneTask);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 44
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    ArrayList\u003cTask\u003e helper \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    TaskList matching \u003d new TaskList(helper);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public FindCommand(String command, String keyword) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.clearResponse();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (t.contains(this.keyword)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                this.matching.add(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.showFindTasks(this.matching);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 36
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the command when the user gives a \u0027list\u0027 command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * For the execute method, it is to print out all the tasks in the tasklist."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.clearResponse();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ui.showList(tasks.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 28
    }
  },
  {
    "path": "src/main/java/commands/NoteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import handlers.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class NoteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String getNote;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected Task taskGetNote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public NoteCommand(String command, String getNote) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.getNote \u003d getNote;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            int num \u003d Integer.parseInt(this.getNote);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (num \u003e tasks.numOfTasks()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! No task to be done found!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                this.taskGetNote \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String note \u003d this.taskGetNote.getNote();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.clearResponse();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                ui.showGetNote(this.taskGetNote, note);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 39
    }
  },
  {
    "path": "src/main/java/exceptions/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DeleteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DeleteException() {};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"☹ OOPS!!! You must specify a Task to be deleted!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 9
    }
  },
  {
    "path": "src/main/java/exceptions/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DoneException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DoneException() {};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"☹ OOPS!!! You must specify a Task to be done!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 9
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the exception when running the Duke class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(super.getMessage());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 15
    }
  },
  {
    "path": "src/main/java/exceptions/EmptyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the exception of the description of the task is not given."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class EmptyException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public EmptyException() {};"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \" ☹ OOPS!!! The description of a command cannot be empty.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 13
    }
  },
  {
    "path": "src/main/java/exceptions/TaskDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class TaskDoneException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public TaskDoneException() {};"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"☹ OOPS!!! Task is already completed!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 9
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Handles the exception if the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * gives an inappropriate command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class UnknownException extends Exception{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    //private static final String SPACE \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public UnknownException() {};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 15
    }
  },
  {
    "path": "src/main/java/handlers/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package handlers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DeleteException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DoneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.EmptyException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.UnknownException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the class which parses each command given by the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * It see which command is given, and returns the corresponding command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Parser() {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public static Command parse(String command) throws UnknownException, DoneException, EmptyException, DeleteException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assert command !\u003d null : \"Command should not be null!\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] str \u003d command.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ListCommand listCommand \u003d new ListCommand(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return listCommand;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            ByeCommand byeCommand \u003d new ByeCommand(command);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return byeCommand;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DoneException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                int num \u003d Integer.parseInt(str[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DoneCommand doneCommand \u003d new DoneCommand(command, num);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return doneCommand;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // removes the word \"deadline\" from the front of the command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] removeDeadline \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // separates the description of deadline from the time and date of deadline"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] separator \u003d removeDeadline[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // removes the /by from the time and date of deadline command"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] timeDate \u003d separator[1].split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                Deadline deadline \u003d new Deadline(separator[0], timeDate[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                AddCommand addCommand \u003d new AddCommand(command, deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return addCommand;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // removes the word \"event\" from the front of the command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] removesEvent \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // separates the description of event from the time and date of event"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] separator \u003d removesEvent[1].split(\"/\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // removes the /at from the time and date of event command"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] timeDate \u003d separator[1].split(\" \", 2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                Event event \u003d new Event(separator[0], timeDate[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                AddCommand addCommand \u003d new AddCommand(command, event);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return addCommand;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // removes the word \"todo\" from the front of the command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] removesTodo \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                Todo todo \u003d new Todo(removesTodo[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                AddCommand addCommand \u003d new AddCommand(command, todo);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return addCommand;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new DeleteException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                int num \u003d Integer.parseInt(str[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                DeleteCommand deleteCommand \u003d new DeleteCommand(command, num);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return deleteCommand;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                // str[1] is the keyword to be found"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                FindCommand findCommand \u003d new FindCommand(command, str[1]);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return findCommand;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"addNote\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 7) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] stringSplit \u003d command.split(\" \", 3);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                AddNoteCommand addNoteCommand \u003d new AddNoteCommand(command, stringSplit[1], stringSplit[2]);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return addNoteCommand;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else if (str[0].equals(\"note\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            if (command.length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                throw new EmptyException();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                NoteCommand noteCommand \u003d new NoteCommand(command, str[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                return noteCommand;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            throw new UnknownException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 117
    }
  },
  {
    "path": "src/main/java/handlers/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package handlers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the class which contains the storage,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * and handles the methods which writes to an external text file,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * and retrieves the tasks from an external text file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected BufferedWriter wr;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected BufferedReader reader;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "           wr \u003d new BufferedWriter(new FileWriter(this.filePath));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "           reader \u003d new BufferedReader(new FileReader(this.filePath));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                wr.write(t.saveString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                wr.newLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            wr.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (IOException err){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            String l;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            while ((l \u003d reader.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                String[] data \u003d l.split(\"|\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                Task t \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                switch(data[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        t \u003d new Todo(data[1], data[2]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        t \u003d new Deadline(data[1], data[2], data[3]);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        t \u003d new Event(data[1], data[2], data[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                if (t !\u003d null) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            reader.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } catch (IOException err) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            err.printStackTrace();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 74
    }
  },
  {
    "path": "src/main/java/handlers/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package handlers;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the Ui of Duke,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * printing out the appropriate message for each of the different commands."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private String response;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.response \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showFarewell() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.sc.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String bye \u003d \"Meow! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(bye);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showAddedTask(Task taskAdded, int numOfTasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Meow. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"  \" + taskAdded.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (numOfTasks \u003d\u003d 1 || numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(\"Now you have \" + numOfTasks + \" task in the list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(\"Now you have \" + numOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showDeletedTask(Task taskDeleted, int numOfTasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Meow. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"  \" + taskDeleted.toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (numOfTasks \u003d\u003d 1 || numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(\"Now you have \" + numOfTasks + \" task in the list\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(\"Now you have \" + numOfTasks + \" tasks in the list\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            Task t \u003d tasks.get(i - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(i + \".\" + t);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showDoneTask(Task taskDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Meow! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"  \" + taskDone.toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showFindTasks(TaskList matching) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        for (int j \u003d 1; j \u003c\u003d matching.numOfTasks(); j++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            Task t \u003d matching.get(j - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            setResponse(j + \".\" + t);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showAddedNote(Task noteAddedTask) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Meow! I\u0027ve added a note to this task: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"  \" + noteAddedTask.toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showGetNote(Task taskGetNote, String note) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"Note for \" + taskGetNote.toString() + \": \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(\"  \" + note);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setResponse(String line) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.response +\u003d line + \"\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getResponse() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.response;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void clearResponse() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.response \u003d \"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        clearResponse();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setResponse(error);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(this.response);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        System.out.println(\"☹ OOPS!!! File could not be found.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 113
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the deadline task. It contains a description and a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * \u0027by\u0027 date and time that the task has to be completed by."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private String taskType \u003d \"D\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Deadline(String status, String description, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.setStatus(status);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.date \u003d LocalDate.parse(b[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.time \u003d LocalTime.parse(b[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.date \u003d LocalDate.parse(this.by);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String dateToString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setDateTime();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String timeToString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setDateTime();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //return \"[D]\" + super.toString() + \"(by: \" + by + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by: \" + dateToString() + \" \" + timeToString()+ \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"[D]\" + super.toString() + \"(by: \" + dateToString() + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //return \"D | \" + super.saveString() + \"| \" + by;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.by.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"D | \" + super.saveString() + \"| \" + dateToString() + \" \" + timeToString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"D | \" + super.saveString() + \"| \" + dateToString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 76
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the event task. It contains a description of the task, and a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * \u0027at\u0027 date and time that represents when the event is taking place."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private String taskType \u003d \"E\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Event(String status, String description, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.setStatus(status);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setDateTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.at.split(\" \");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.date \u003d LocalDate.parse(b[0]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.time \u003d LocalTime.parse(b[1]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.date \u003d LocalDate.parse(this.at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String dateToString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setDateTime();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String timeToString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        setDateTime();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //return \"[E]\" + super.toString() + \"(at: \" + at + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.at.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at: \" + dateToString() + \" \" + timeToString()+ \")\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"[E]\" + super.toString() + \"(at: \" + dateToString() + \")\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //return \"E | \" + super.saveString() + \"| \" + at;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        String[] b \u003d this.at.split(\" \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        if (b.length \u003e 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"E | \" + super.saveString() + \"| \" + dateToString() + \" \" + timeToString();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            return \"E | \" + super.saveString() + \"| \" + dateToString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 76
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents a task that needs to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * It contains a description of the task,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * and a boolean isDone that states if the task is completed or not."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected String note;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return (isDone ? \"[\\u2713]\": \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        //return (isDone ? \"[✓]\" : \"[✗]\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public int getStatusNum() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return (isDone ? 1 : 0);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.description.contains(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setNote(String note) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.note \u003d note;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getNote() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.note;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void setStatus(String status) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.isDone \u003d (!status.equals(\"0\"));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return getStatusIcon() + \" \" + getDescription();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return getStatusNum() + \" | \" + getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 63
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents a list of tasks. It has methods for handling the tasks,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * such as adding a task, removing a task, getting a task,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * returning the list of tasks, and setting a task to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Task remove(int t) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        Task task \u003d this.tasks.get(t-1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.tasks.remove(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void completedTask(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Task get(int num) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.tasks.get(num);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public int numOfTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 46
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * Represents the todo task, which has to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " * It contains a description of the task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    private String taskType \u003d \"T\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public Todo(String status, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        this.setStatus(status);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public String saveString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        return \"T | \" + super.saveString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 34
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?xml-stylesheet type\u003d\"text/css\" href\u003d\"dialogbox.css\"?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c!--        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e--\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                \u003cFont name\u003d\"Bradley Hand ITC\" size\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            \u003c/font\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?xml-stylesheet type\u003d\"text/css\" href\u003d\"mainwindow.css\"?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 20
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"cs3243 tutorial\", \"2020-01-31 17:00\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testTaskType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"D\", deadline.getTaskType());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testNewTaskIsNotDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"[✗]\", deadline.getStatusIcon());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testDescription() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"cs3243 tutorial\", deadline.getDescription());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 25
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 11
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    Event event \u003d new Event(\"dinner\",\"2020-02-05 19:00\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testTaskType() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"E\", event.getTaskType());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testNewTaskIsNotDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"[✗]\", event.getStatusIcon());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"dinner\", event.getDescription());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 23
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "package tests;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    Todo todo \u003d new Todo(\"sleep\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testTaskType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"T\", todo.getTaskType());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testNewTaskIsNotDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"[✗]\", todo.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    public void testDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "        assertEquals(\"sleep\", todo.getDescription());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 24
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "       [T][✗] buy bread"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Now you have 1 task in the list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "deadline do homework /by Sunday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "       [D][✗] do homework (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Now you have 2 tasks in the list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "event project meeting /at Tues 10-12pm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "       [E][✗] project meeting (at: Tues 10-12pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Now you have 3 tasks in the list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     1.[T][✗] buy bread"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     2.[D][✗] do homework (by: Sunday)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     3.[E][✗] project meeting (at: Tues 10-12pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "bye"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "     Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    _________________________________________"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 33
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "deadline do tutorial /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "event project meeting /at Tues 10-12pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "runtest.sh:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "fi"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "fi"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "then"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "fi"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "loycatherine"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "then"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "else"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "loycatherine"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "loycatherine": 57
    }
  }
]
