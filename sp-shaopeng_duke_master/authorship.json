[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    modules \u003d [\u0027javafx.controls\u0027, \u0027javafx.fxml\u0027]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        attributes("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u0027Main-Class\u0027: \u0027duke.Launcher.Class\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        )"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    archiveBaseName \u003d \"Launcher\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 56,
      "-": 19
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-slappp-2019-09-23-19:00-12:00"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-as-2019-02-21-19:00-18:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-dfds-2019-09-21-12:00-13:00"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-sss-2019-09-23-13:00-12:00"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-sss-2019-09-23-13:00-12:00"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-sss-2019-09-23-13:00-12:00"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "E-0-sss-2019-09-23-13:00-12:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        "
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 8
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Duke is a task management tool which helps you to keep track of various task. It is a command line interface (CLI) which allows you to input your tasks by entering commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "![User Interface Screenshot](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "1. Add task"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "2. Delete task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "3. Find task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "4. List task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "5. Mark task as \u0027Done\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "6. Undo Operation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "7. Bye"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "## Feature description"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Add task "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "you can create 3 different types of tasks - `event`, `todo` and `deadline`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Delete task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Delete a task from the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Find task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Find task(s) in the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### List task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "List out all task in the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Mark as \u0027Done\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Mark the task in the task list to be \u0027Done\u0027 to show that it has been completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Undo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Revert the operation."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### Bye "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Exit the application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `todo` - To add a `todo` task in the task list \u003cbr/\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Create a todo task that will be added to the task list with the format `todo \u003ctask description\u003e`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "todo gym"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "[T][X]gym "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `event` - To add a `event` task in the task list \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Create a event task that will be added to the task list with the format `event \u003ctask description\u003e /at \u003cDate format in YYYY-MM-DD\u003e \u003ctime\u003e `"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "event edmond\u0027s birthday /at 2020-09-17 14:00 18:00"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "[E][X]edmond\u0027s birthday (at: Sep 17 2020 2.00 PM to 6.00 PM)"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `deadline` - To add a `deadline` task in the task list \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Create a deadline task that will be added to the task list with the format `deadline \u003ctask description\u003e /by \u003cDate format in YYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "deadline math homework /by 2019-08-02 19:00"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "[D][X] math homework (by:Aug 2 2019 7 PM)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `delete` - To delete a task in the task list"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Deletes a task in the task list with corresponding index number with the format in \u0027delete \u003ctask number\u003e\u0027"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "[T][X]gym "
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `find` - To find task(s) in the task list"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Find task(s) in the task list using a keyword with the format in \u0027find \u003ctask description\u003e\u0027"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "find birthday"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    1.[E][X] edmond\u0027s birthday (at: Sep 17 2020 2.00 PM to 6.00 PM)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `list` - To list all task(s) in the task list"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Display all the task(s) in the task list with the format in `list`"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "1.[E][X] edmond\u0027s birthday (at: Sep 17 2020 2.00 PM to 6.00 PM)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "2.[D][X] math homework (by:Aug 2 2019 7 PM)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `done` - Mark a task as \u0027Done\u0027"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Marks a task in the task list as \u0027Done\u0027 with corresponding index number with the format in \u0027done \u003ctask number\u003e\u0027"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Nice!. I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "[D][tick] math homework (by: Aug 2 2019 7 PM)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `Undo` - Revert the operations"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Revert back to the previous status. Able to `undo` all the way to the time when the application is just launched"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "undo"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Last operation delete 2 -\u003e deletes the deadline task"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "``` "
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Before | After Undo "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " ------ | ------ "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Here are the tasks in your list \u003cbr/\u003e 1.[E][X] edmond\u0027s birthday (at: Sep 17 2020 2.00 PM to 6.00 PM) | Here are the tasks in your list\u003cbr/\u003e 1.[E][X] edmond\u0027s birthday (at: Sep 17 2020 2.00 PM to 6.00 PM) \u003cbr/\u003e 2.[D][tick] math homework (by:Aug 2 2019 7 PM) "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "### `bye` - Exit the application"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\"Terminates the application. The application will exit after 3 seconds.\""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "bye"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "#### Expected outcome:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Bye! Hope to see you again soon!"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 155,
      "-": 13
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.paint.Paint;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#bbdefb\"),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                new CornerRadii(5), Insets.EMPTY)));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialog.setFont(new Font(\"Ubuntu Mono\", 12));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialog.setTextAlignment(TextAlignment.JUSTIFY);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * method for javaFX."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param text the string input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param img  the image to display"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        db.dialog.setBackground(new Background(new BackgroundFill(Paint.valueOf(\"#1de9b6\"),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                new CornerRadii(5), Insets.EMPTY)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 82
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.FindTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The file path."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The different previous version."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Undo versionControl;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The ui."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new duke."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.versionControl \u003d new Undo();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.storage.setVersionControl(versionControl);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            taskList \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            storage.createFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            versionControl.startFresh();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * process the command and output String."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param input the command by user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return string which is the response to the command"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String processCommand(String input) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        input \u003d input.trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assert input.length() \u003e 0 : \"Invalid command\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                return this.ui.bye();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (input.equalsIgnoreCase(\"undo\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (versionControl.getSize() \u003e\u003d 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    versionControl.undo(this.taskList, this.storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return this.taskList.list();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return new DukeException(\"OOPS, this is the latest version\\n\").toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                return this.taskList.list();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (input.trim().startsWith(\"done\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return this.taskList.done(taskNumber, this.storage);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return new DukeException(\"OOPS!!! Done format is wrong\\n\").toString();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return new DukeException(\"OOPS!!! Done format is wrong\\n\").toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    assert Character.isDigit(input.substring(7).toCharArray()[0]) : \"Wrong Input\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    assert taskNumber \u003e\u003d 0 : \"Invalid task number\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return this.taskList.delete(taskNumber, this.storage);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return new DukeException(\"OOPS!!! Delete format is wrong\").toString();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    return new DukeException(\"OOPS!!! Delete format is wrong\").toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] keyWords \u003d input.substring(5).trim().split(\" \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                assert keyWords.length \u003c\u003d 0 : \"Invalid input keywords\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                FindTask findTask \u003d new FindTask(this.taskList.getTaskList());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                findTask.search(keyWords);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                return findTask.list();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        return this.taskList.addTodo(input, this.storage);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        return this.taskList.addDeadline(input, this.storage);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        return this.taskList.addEvent(input, this.storage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * This method will be running throughout the entire session"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * It will listen to the incoming users\u0027s command and process the comment accordingly."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a greeting string"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.ui.greetLogo() + this.ui.greet();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 137,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            scene.setFill(Color.BLACK);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            stage.setTitle(\"DUKE\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/DaIcon.png\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 40
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private AnchorPane window;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Initialize."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialogContainer.setPadding(new Insets(0, 1, 10, 1));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Bind a container with greet message."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param d duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                DialogBox.getDukeDialog(duke.greet(), dukeImage)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String response \u003d duke.processCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (input.toLowerCase().startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            new TimedExit();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 77
    }
  },
  {
    "path": "src/main/java/duke/TimedExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class TimedExit {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    TimerTask exitApp \u003d new TimerTask() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        public void run() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    };"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public TimedExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        timer.schedule(exitApp, new Date(System.currentTimeMillis() + 2 * 1000));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 19
    }
  },
  {
    "path": "src/main/java/duke/Undo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Undo {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private ArrayList\u003cString\u003e allVersionTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Undo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        allVersionTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Undo the step."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskList the tasklist which will be reverted"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data     the data which will reset the database"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void undo(TaskList taskList, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        int total \u003d this.allVersionTask.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        System.out.println(total);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String prevVersion \u003d allVersionTask.get(total - 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        allVersionTask.remove(total - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ArrayList\u003cTask\u003e prevTaskList \u003d data.loadData(prevVersion);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        taskList.setTaskList(prevTaskList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * This method is use to set the first version control."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void startFresh() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        allVersionTask.add(\"\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void addVersion(String latestVersion) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        allVersionTask.add(latestVersion);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String getPrevVersion() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        int size \u003d allVersionTask.size();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return allVersionTask.get(size - 1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return allVersionTask.size();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 56
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class DukeException extends Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The error msg."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    String errorMsg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new duke exception."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param s the s"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.errorMsg \u003d s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.errorMsg;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 32
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.Undo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.io.Writer;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Storage."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The file path."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private Undo versionControl;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param filePath the file path"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void setVersionControl(Undo versionControl) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.versionControl \u003d versionControl;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * This method loads the data to duke base on the version."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param version s string which contains all data of previous versions"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return an arrayList which stores all the tasks"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData(String version) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String[] allList \u003d version.split(\"\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        for (int k \u003d 0; k \u003c allList.length; k++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String line \u003d allList[k].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String[] content \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String taskNature \u003d content[0];"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            int isDone \u003d Integer.parseInt(content[1]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            if (taskNature.equals(\"T\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                ToDos todo \u003d new ToDos(content[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    todo.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                tasksList.add(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (taskNature.equals(\"D\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String date \u003d content[3] + \"-\" + content[4] + \"-\" + content[5];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalDate deadlineDate \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime deadlineTime \u003d LocalTime.parse(content[6]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                Deadlines deadline \u003d new Deadlines(content[2], deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    deadline.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                tasksList.add(deadline);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else if (taskNature.equals(\"E\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String date \u003d content[3] + \"-\" + content[4] + \"-\" + content[5];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime eventStart \u003d LocalTime.parse(content[6]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime eventEnd \u003d LocalTime.parse(content[7]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                Events event \u003d new Events(content[2], eventDate, eventStart, eventEnd);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    event.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                tasksList.add(event);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        updateFile(version);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Load."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder vc \u003d new StringBuilder();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            File data \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Scanner sc \u003d new Scanner(data);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String line \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if(line.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                vc.append(line + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] content \u003d line.split(\"-\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String taskNature \u003d content[0];"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                int isDone \u003d Integer.parseInt(content[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (taskNature.equals(\"T\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    ToDos todo \u003d new ToDos(content[2]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    tasksList.add(todo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else if (taskNature.equals(\"D\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    String date \u003d content[3] + \"-\" + content[4] + \"-\" + content[5];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    LocalDate deadlineDate \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    LocalTime deadlineTime \u003d LocalTime.parse(content[6]);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    Deadlines deadline \u003d new Deadlines(content[2], deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    tasksList.add(deadline);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else if (taskNature.equals(\"E\")) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    String date \u003d content[3] + \"-\" + content[4] + \"-\" + content[5];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    LocalDate eventDate \u003d LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    LocalTime eventStart \u003d LocalTime.parse(content[6]);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    LocalTime eventEnd \u003d LocalTime.parse(content[7]);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    Events event \u003d new Events(content[2], eventDate, eventStart, eventEnd);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (isDone \u003d\u003d 1) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    tasksList.add(event);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Unable to load data\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.versionControl.addVersion(vc.toString());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return tasksList;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Append to file for todo task."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskNature      the task nature"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param isDone          the is done"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskDescription the task description"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void appendTodoToFile(String taskNature, int isDone, String taskDescription) throws DukeException {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            FileWriter fr \u003d new FileWriter(this.filePath, true);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String line \u003d taskNature + \"-\" + isDone + \"-\" + taskDescription + \"\\n\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String prevVersion \u003d this.versionControl.getPrevVersion();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String newVersion \u003d prevVersion + line;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            this.versionControl.addVersion(newVersion);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.write(line);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Unable to save data\\n\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Append to file for deadline tasks."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskNature      the task nature"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param isDone          the is done"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskDescription the task description"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param time            the time"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void appendDeadlineToFile(String taskNature, int isDone, String taskDescription,"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                     String date, String time) throws DukeException {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            FileWriter fr \u003d new FileWriter(this.filePath, true);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String line \u003d taskNature + \"-\" + isDone + \"-\" + taskDescription + \"-\" + date + \"-\" + time + \"\\n\";"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String prevVersion \u003d this.versionControl.getPrevVersion();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String newVersion \u003d prevVersion + line;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            this.versionControl.addVersion(newVersion);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.write(line);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Unable to save data\\n\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Append to file for event tasks."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskNature      the task nature"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param isDone          the is done"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskDescription the task description"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param startTime       the starting time of the event"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param endTime         the ending time of the event"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void appendEventToFile(String taskNature, int isDone, String taskDescription,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                  String eventDate, String startTime, String endTime) throws DukeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            FileWriter fr \u003d new FileWriter(this.filePath, true);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String line \u003d taskNature + \"-\" + isDone + \"-\" + taskDescription"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + \"-\" + eventDate + \"-\" + startTime + \"-\" + endTime + \"\\n\";"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String prevVersion \u003d this.versionControl.getPrevVersion();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            String newVersion \u003d prevVersion + line;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            this.versionControl.addVersion(newVersion);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.write(line);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fr.close();"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Unable to save data\\n\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Update the file with a String data."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data a string which contains all the data"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void updateFile(String data) throws DukeException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Writer fileWriter \u003d new FileWriter(this.filePath, false);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fileWriter.write(data);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Error\" + e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Update file."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param tasksList the tasksList"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void updateFile(ArrayList\u003cTask\u003e tasksList) throws DukeException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            StringBuilder newData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Writer fileWriter \u003d new FileWriter(this.filePath, false); //overwrites file"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            for (int i \u003d 0; i \u003c tasksList.size(); i++) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                Task task \u003d tasksList.get(i);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (task instanceof ToDos) {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    String line;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (task.getStatus()) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"T\" + \"-1-\" + task.getDescription();"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"T\" + \"-0-\" + task.getDescription();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(line);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(\"\\n\");"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else if (task instanceof Deadlines) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    String line;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (task.getStatus()) {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"D\" + \"-1-\" + task.getDescription() + \"-\""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Deadlines) task).getDeadlineDate().toString()"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + \"-\" + ((Deadlines) task).getDeadlineTime().toString();"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"D\" + \"-0-\" + task.getDescription() + \"-\""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Deadlines) task).getDeadlineDate().toString()"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + \"-\" + ((Deadlines) task).getDeadlineTime().toString();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        ;"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(line);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(\"\\n\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    String line;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    if (task.getStatus()) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"E\" + \"-1-\" + task.getDescription() + \"-\""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventDate() + \"-\""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventStart().toString() + \"-\""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventEnd().toString();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        line \u003d \"E\" + \"-0-\" + task.getDescription() + \"-\""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventDate() + \"-\""
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventStart().toString() + \"-\""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                + ((Events) task).getEventEnd().toString();"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(line);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    newData.append(\"\\n\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            this.versionControl.addVersion(newData.toString());"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fileWriter.write(newData.toString());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (java.io.IOException e) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"Error\" + e.getMessage() + \"\\n\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * This method is use to create a new file if there is no file."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            File createdFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            createdFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            createdFile.createNewFile();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            System.out.println(\"File does not exist\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 320
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Deadlines is for tasks whose is a Deadline format."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The deadline date: the due date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected LocalDate deadLineDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected LocalTime deadLineTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new deadlines."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param description  the description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param deadLineDate the deadline date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Deadlines(String description, LocalDate deadLineDate, LocalTime deadLineTime) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.deadLineDate \u003d deadLineDate;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.deadLineTime \u003d deadLineTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the deadline date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the deadline date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public LocalDate getDeadlineDate() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.deadLineDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the deadline time."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the deadline time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public LocalTime getDeadlineTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.deadLineTime;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                + this.deadLineDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                + this.deadLineTime.format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \")\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Events wis for tasks which are Event format."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The time when the event start."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected LocalTime eventStart;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The time when the event end."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected LocalTime eventEnd;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The Event date: the date the event held."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new events."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param eventDate   the event date"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param eventStart  the starting time for the event"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param eventEnd    the end time for the event"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Events(String description, LocalDate eventDate, LocalTime eventStart, LocalTime eventEnd) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.eventStart \u003d eventStart;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.eventEnd \u003d eventEnd;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the event date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return (LocalDate) eventDate"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public LocalDate getEventDate() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.eventDate;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the eventStart."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the eventStart timing e.g(2pm)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public LocalTime getEventStart() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.eventStart;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the eventEnd."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the eventEnd timing e.g(2pm)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public LocalTime getEventEnd() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.eventEnd;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (eventStart.compareTo(eventEnd) !\u003d -1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \"))"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + this.eventStart.format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \"  to \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + this.eventEnd.format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \"(next day) )\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy \"))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + this.eventStart.format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \"  to \""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    + this.eventEnd.format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \")\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 91
    }
  },
  {
    "path": "src/main/java/duke/task/FindTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class FindTask: to get the specific task out."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * by checking the task description with the keywords."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class FindTask extends TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The specific task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected ArrayList\u003cTask\u003e specificTask;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new find task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param allData the all data"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public FindTask(ArrayList\u003cTask\u003e allData) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.specificTask \u003d allData;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To find the specific task according to the keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param keywords an string array contains all the keywords"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void search(String... keywords) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ArrayList\u003cTask\u003e targetList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        for (int i \u003d 0; i \u003c specificTask.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            for (String word : keywords) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                if (specificTask.get(i).getDescription().contains(word)) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    targetList.add(specificTask.get(i));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.specificTask \u003d targetList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the specific task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the specific task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public ArrayList\u003cTask\u003e getSpecificTask() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.specificTask;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * List."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        output.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        int taskSize \u003d this.specificTask.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskSize; i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            int count \u003d i + 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(\"      \" + count + \". \" + this.specificTask.get(i).toString());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Task is thr root for all different type of tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The description: describes the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The is done: indicates if the task is being completed."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the status icon : is it completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the status icon"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return (isDone ? \"tick\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Mark the task to be done."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Mark the task to be undone."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void markAsNotDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the description."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the description of the task (e.g: Buy food)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the status."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a boolean: true: the task is done, false: the task is not done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 80
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class TaskList is class to keep track of all the task that is created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The taskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param taskList the taskList"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Gets the taskList."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the taskList"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * this method is to replace the taskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param newList replace the taskList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void setTaskList(ArrayList\u003cTask\u003e newList) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.taskList \u003d newList;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Adds the todo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data  the data"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to denote addTodo"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String addTodo(String input, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String remainString \u003d input.replaceFirst(\"todo\", \"\").trim();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assert remainString.length() \u003c\u003d 0 : \"Invalid addTodo input\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (remainString.length() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            ToDos newToDo \u003d new ToDos(remainString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(add(newToDo));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            data.appendTodoToFile(\"T\", 0, remainString);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            return new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\").toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Adds the deadline."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data  the data"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to denote addDeadline"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String addDeadline(String input, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String remainString \u003d input.replaceFirst(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assert remainString.length() \u003c\u003d 0 : \"Invalid addDeadline input\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (remainString.length() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] detail \u003d remainString.split(\" /by \");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] dateTime \u003d detail[1].trim().split(\" \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalDate deadLineDate \u003d LocalDate.parse(dateTime[0].trim());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime deadLineTime \u003d LocalTime.parse(dateTime[1].trim());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                Deadlines newDeadLine \u003d new Deadlines(detail[0], deadLineDate, deadLineTime);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(add(newDeadLine));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                data.appendDeadlineToFile(\"D\", 0, detail[0], dateTime[0], dateTime[1]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                return new DukeException(\"OOPS!!! Please enter in the format of : \""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        + \" task description, YYYY-MM-DD and HH:MM \\n\").toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline is wrong\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Adds the event."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param input the input"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data  the data"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to denote addEvent"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String addEvent(String input, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        String remainString \u003d input.replaceFirst(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assert remainString.length() \u003c\u003d 0 : \"Invalid addEvent input\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (remainString.length() \u003e\u003d 1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] detail \u003d remainString.split(\" /at \");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                for (int l \u003d 0; l \u003c detail.length; l++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    System.out.println(detail[l]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                String[] splitDateTime \u003d detail[1].trim().split(\" \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(splitDateTime[0].trim());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime eventStartTime \u003d LocalTime.parse(splitDateTime[1].trim());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                LocalTime eventEndTime \u003d LocalTime.parse(splitDateTime[2].trim());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                Events newEvent \u003d new Events(detail[0], eventDate, eventStartTime, eventEndTime);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(add(newEvent));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                data.appendEventToFile(\"E\", 0, detail[0], splitDateTime[0], splitDateTime[1], splitDateTime[2]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                return new DukeException(\"OOPS!!! Please enter in the format of : \""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        + \"description, YYYY-MM-DD HH:MM (starting time) HH:MM (ending time)\\n\").toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of an event is wrong.\\n\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * List."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a string which describe the all the task"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String list() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        output.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        int taskSize \u003d this.taskList.size();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskSize; i++) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            int count \u003d i + 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(count + \". \" + this.taskList.get(i).toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Adds the add into taskList."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param newTask the new task"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to denote the task is added and amount of task in the list"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String add(Task newTask) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        output.append(\"Got it. I\u0027ve added this task: \\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        output.append(newTask.toString());"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        int amtOfTask \u003d this.taskList.size();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (amtOfTask \u003c\u003d 1) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(\"Now you have \" + amtOfTask + \" task in list\\n\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(\"Now you have \" + amtOfTask + \" tasks in list\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Done."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param number the number"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data   the data"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to denote that the task is mark as done"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String done(int number, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (number \u003c\u003d this.taskList.size() \u0026\u0026 number \u003e\u003d 1) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Task getTask \u003d this.taskList.get(number - 1);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            if (getTask.isDone) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(\"Error, task is already done\\n\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                getTask.markAsDone();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(\"Nice!. I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(getTask.toString());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                data.updateFile(this.taskList);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            throw new DukeException(\"OOPS!!! There is no such tasks\\n\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Delete."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param number the number"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param data   the data"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return String to state the task is deleted and how many left"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @throws DukeException the duke exception"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String delete(int number, Storage data) throws DukeException {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        if (number \u003c\u003d this.taskList.size() \u0026\u0026 number \u003e\u003d 1) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            Task getTask \u003d this.taskList.get(number - 1);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            this.taskList.remove(number - 1);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            output.append(getTask.toString());"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            int amtOfTask \u003d this.taskList.size();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            if (amtOfTask \u003c\u003d 1) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(\"Now you have \" + amtOfTask + \" task in list\\n\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                output.append(\"Now you have \" + amtOfTask + \" tasks in list\\n\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            return new DukeException(\"OOPS!!! There is no such tasks\\n\").toString();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        data.updateFile(this.taskList);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 235
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class ToDos are for tasks whose is in a format of Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Instantiates a new to dos."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @param description the description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return the string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"[T]\" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class Ui provides a basic user interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * The logo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    protected String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Greet with the logo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a string to greet and show logo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String greetLogo() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"Hello from\\n\" + this.logo + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Normal greeting."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a string to greet"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Prints the input request."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void printInputRequest() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        System.out.println(\"Input Command: \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Sign off before exiting the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return a string to greet bye"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"      Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * To notify that there is an error in the File."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * @return an string to denote the file is corrupted"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        return \"File is corrupted, Start on a new file\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 61
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER_RIGHT\" fillHeight\u003d\"false\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "         maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 21
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.control.SplitPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"window\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            minWidth\u003d\"-Infinity\" prefHeight\u003d\"650.0\" prefWidth\u003d\"450.0\" AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            AnchorPane.rightAnchor\u003d\"0.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"3.0\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                      prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003cSplitPane dividerPositions\u003d\"0.7688442211055276\" layoutX\u003d\"-2.0\" layoutY\u003d\"558.0\" prefHeight\u003d\"60.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                   prefWidth\u003d\"400.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                   AnchorPane.rightAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003citems\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"160.0\" prefWidth\u003d\"60.0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        \u003cTextField fx:id\u003d\"userInput\" maxHeight\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                   maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                   onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                   AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                   AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003cAnchorPane maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"160.0\" prefWidth\u003d\"100.0\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                            SplitPane.resizableWithParent\u003d\"false\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                        \u003cButton fx:id\u003d\"sendButton\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                                AnchorPane.topAnchor\u003d\"0.0\"/\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "                \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "            \u003c/items\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 49
    }
  },
  {
    "path": "src/test/java/duke/DeadLineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class DeadLineTest."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class DeadLineTest {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Test deadline format."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void testDeadlineFormat() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        LocalDate deadLineDate \u003d LocalDate.parse(\"2019-02-11\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        LocalTime deadLineTime \u003d LocalTime.parse(\"17:00\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        Deadlines task \u003d new Deadlines(\"Return Book\", deadLineDate, deadLineTime);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        s.append(task.getDeadlineDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        s.append(task.getDeadlineTime().format(DateTimeFormatter.ofPattern(\" h.mm a\")));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assertEquals(\"Feb 11 2019 5PM\", s.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void Trying() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assertEquals(\"a\",\"b\",\"lol\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 37
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class DukeTest."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Dummy test."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 19
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class EventTest."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Test event date format."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void testEventDateFormat() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(\"2019-02-11\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        LocalTime eventStart \u003d LocalTime.parse(\"12:00\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        LocalTime eventEnd \u003d LocalTime.parse(\"18:00\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        StringBuilder s \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        Events task \u003d new Events(\"Return Book\", eventDate, eventStart, eventEnd);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        s.append(task.getEventDate().format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        s.append(task.getEventStart().format(DateTimeFormatter.ofPattern(\" h.mm a\")) + \"  to \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        s.append(task.getEventEnd().format(DateTimeFormatter.ofPattern(\" h.mm a\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assertEquals(\"Feb 11 2019\", s.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 35
    }
  },
  {
    "path": "src/test/java/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " * The Class ToDoTest."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     * Test to do description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    public void testToDoDescription() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        ToDos task \u003d new ToDos(\"buy food for mum\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        assertEquals(\"buy food for mum\", task.getDescription());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 21
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      What can I do for you?"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        [T][?] buy food"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Now you have 1 task in list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        [D][?] math hw  (by: sunday 2359)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Now you have 2 tasks in list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Got it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "        [E][?] project meeting (at:  monday 2-4pm)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Now you have 3 tasks in list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      1. [T][?] buy food"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      2. [D][?] math hw  (by: sunday 2359)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      3. [E][?] project meeting (at:  monday 2-4pm)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Here are the tasks in your list:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      1. [T][?] buy food"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      2. [D][?] math hw  (by: sunday 2359)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      3. [E][?] project meeting (at:  monday 2-4pm)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "      Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "todo buy food"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "deadline math hw /by sunday 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "event project meeting /on monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sp-shaopeng"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "sp-shaopeng": 21
    }
  }
]
