[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "test {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "garysyndromes": 39
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Duke is a personalized to do list that helps you keeps track of the tasks you have to do and deadlines you have to adhere to!"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Duke allows you to Add, Mark and Delete to manage your Todo, Deadline, Event and FixedDurationTask."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "![User interface](Ui.png)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "## Table of Contents"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "- [Requirements](#requirements)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 1: New Task? Add it.](#feature-1-new-task-add-it)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 2: Finished Task? Delete it.](#feature-2-finished-task-delete-it)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 3: Done Task? Mark it.](#feature-3-done-task-mark-it)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 4: Searching for a Task? Find it.](#feature-4-searching-for-a-task-find-it)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 5: Displaying your tasks? List it.](#feature-5-displaying-your-tasks-list-it)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [Feature 6: Close Duke? Just say bye.](#feature-6-close-duke-just-say-bye)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "- [Commands](#Commands)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [todo](#todo---add-a-todo-to-the-to-do-list)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [deadline](#deadline---add-a-deadline-to-the-to-do-list)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [event](#event---add-an-event-to-the-to-do-list)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [fixedtask](#fixedtask---add-a-fixeddurationtask-to-the-to-do-list)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [delete](#delete---delete-a-task-from-the-to-do-list)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [done](#done---mark-a-task-as-done-in-the-to-do-list)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [find](#find---find-a-task-in-the-to-do-list) "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [list](#list---list-all-tasks-in-the-to-do-list)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    - [bye](#bye---close-duke)"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "## Requirements"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You need to have the following installed to be able to use Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "1. Java SE Development Kit 11"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "2. "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Here are some features that Duke offers to keep you on track with your to do list."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 1: New Task? Add it."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "In Duke, you can add up to **4** types of Tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "###### Task type 1: Todo"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Todo` is a task without any date/time attached to it. _e.g., visit new theme park_"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "###### Task type 2: Deadline"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Deadline` is a task that need to be done before a specific date. _e.g., submit report (by: Mar 03 2020)_"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "###### Task type 3: Event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Event` is a task that start at a specific time and ends at a specific time. _e.g., team project meeting (at: 2/10/2019 2-4pm)_"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "###### Task type 4: FixedDurationTask"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`FixedDurationTask` is a task that takes a fixed amount of time but does not have a fixed start/end time. _e.g., reading the sales report (needs 2 hours)_\u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 2: Finished task? Delete it."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You can `delete` a task from the to do list anytime by entering `delete` `task_number` into Duke.\u003cbr\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`task_number` is the position of the task in the to do list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 3: Done Task? Mark it."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You can mark a task as `done` anytime by entering `done` `task_number` into Duke. \u003cbr\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`task_number` is the position of the task in the to do list."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 4: Searching for a Task? Find it."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You can `find` a task in the to do list anytime by entering `find` `task_name` into Duke. \u003cbr\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`task_name` is the keyword that make up the task name."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 5: Displaying your tasks? List it."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You can `list` all the tasks in the to do list anytime by entering `list` into Duke."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### Feature 6: Close Duke? Just say bye."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "You can close Duke anytime by entering `bye` into Duke."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "## Commands"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### `todo` - Add a Todo to the to do list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Add a `Todo` task to the to do list with the command `todo task_name`."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`todo study for finals`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Got you covered! Added this task to the list:` \u003cbr\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `[T][UNDONE] study for finals` \u003cbr\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `Now you have 1 task in the list.`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### `deadline` - Add a Deadline to the to do list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Add a `Deadline` task to the to do list with the command `deadline task_name` `/by` `date`.\u003cbr\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`date` must be entered in the format of _**YYYY-MM-DD**_"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`deadline submit report /by 2020-03-04`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Got you covered! Added this deadline to the list:` \u003cbr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`[D][UNDONE] submit report (by: Mar 04 2020)`\u003cbr\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Now you have 2 tasks in the list.`"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "### `event` - Add an Event to the to do list."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Add an `Event` task to the to do list with the command `event task_name` `/at` `time`."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`event nus open day /at utown 2pm`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Got you covered! Added this event to the list:` \u003cbr\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `[E][UNDONE] nus open day (at: utown 2pm)` \u003cbr\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003cbr\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003cbr\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003cbr\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " ### `fixedtask` - Add a FixedDurationTask to the to do list."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Add a `FixedDurationTask` task to the to do list with the command `fixedtask task_name` `/needs` `time`.\u003cbr\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `time` must be converted to hours."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Example of usage: "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `fixedtask sleep /needs 8`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Expected outcome:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Got you covered! Added this FixedDurationTask to the list:`\u003cbr\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`[F][UNDONE] sleep (needs 8 hour(s))`\u003cbr\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Now you have 4 tasks in the list.`"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  ### `delete` - Delete a task from the to do list."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Delete a task from the to do list with the command `delete task_number`.\u003cbr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `task_number` is the position of the task in the to do list."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `delete 2`"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Bye bye Task! I\u0027ve removed this task:`\u003cbr\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`[D][UNDONE] submit report (by: Mar 04 2020)`\u003cbr\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Now you have 3 tasks in the list.`"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  ### `done` - Mark a task as Done in the to do list."
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Mark a task in the to do list as Done with the command `done task_number`.\u003cbr\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " `task_number` is the position of the task in the to do list."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `done 1`"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Nice! I\u0027ve marked this task as done and dusted:`\u003cbr\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`[T][DONE] study for finals`"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  ### `find` - Find a task in the to do list."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Find a task in the to do list with the command `find task_name`.\u003cbr\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`task_name` is the keyword that make up the task name."
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `find nus`"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  "
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Here are the matching tasks in your list:`\u003cbr\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`1. [E][UNDONE] nus open day (at: utown 2pm)`"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  ### `list` - List all tasks in the to do list."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " List all tasks in the to do list with the command `list`."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `list`"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`1. [T][DONE] study for finals`\u003cbr\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`2. [E][UNDONE] nus open day (at: utown 2pm)`\u003cbr\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`3. [F][UNDONE] sleep (needs 8 hour(s))`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " "
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  ### `bye` - Close Duke"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " Duke will terminate when the command `bye` is entered."
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Example of usage: "
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  `bye`"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  Expected outcome:"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "  "
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d`\u003cbr\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "`Bye bye! Thank you for using me! Hope to see you again soon.`"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cbr\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 23,
      "garysyndromes": 254
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"bye\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent the Command that is sent to the TaskList to handle the Tasks in TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A Command is represented by:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a String \u003ccode\u003ecommand\u003c/code\u003e which describes the type of command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * an int \u003ccode\u003eindex\u003c/code\u003e which is used by DeleteCommand and DoneCommand."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a Task \u003ccode\u003etask\u003c/code\u003e which is used by DeadlineCommand, EventCommand,TodoCommand."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String taskToSearch;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getTaskToSearch() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.taskToSearch;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 34
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a Deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Deadline is a Task and is described by its String \u003ccode\u003edescription\u003c/code\u003e and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * * a boolean \u003ccode\u003eisDone\u003c/code\u003e to indicate whether a Deadline is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * \u003ccode\u003eby\u003c/code\u003e describes the date at which the Deadline is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 22
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"deadline\" command give to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DeadlineCommand(Deadline deadline) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a DeleteCommand given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 59
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"done\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Duke is a chat bot program that builds a to do list. Current functions include:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * list, delete, done, todo, deadline, event, bye."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor for main class for the program to be run on the command line."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param filePath relative path of the file that the data of to do list is saved in."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (IOException IoError) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Error in creating new file duke.txt \" + IoError.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor for GUI."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * String filePath relative path of the file that the data of to do list is saved in."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String filePath \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            File file \u003d new File(\"data\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                new File(\"data\").mkdir();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (IOException IoError) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Error in creating new file duke.txt \" + IoError.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Main driver for Duke program."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        tasks.showCurrentTasks();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.showLineBreak();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        boolean isFinished \u003d false;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        while (!(isFinished)) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            String inputFromUser \u003d ui.handleInput();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            Command c \u003d Parser.parse(inputFromUser);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Input something into me!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks.runCommand(c);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (c.getCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                isFinished \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            this.storage.save(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.terminateMessage();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Shows the welcome message for the GUI"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return String Welcome Message in the GUI"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author garysyndromes-reused"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java with minor modifications"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        tasks.showCurrentTasks();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.showLineBreak();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Shows the current tasks in Duke"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return String of current tasks in duke"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author garysyndromes-reused"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java with minor modifications"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getCurrentTasksInDuke() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        tasks.showCurrentTasks();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.showLineBreak();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Handles the responses of duke"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return String of current response to the input"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author garysyndromes-reused"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    //Reused from https://stackoverflow.com/questions/8708342/redirect-console-output-to-string-in-java with minor modifications"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // Create a stream to hold the output"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(ps);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (c !\u003d null) : \"Input something correct into me! todo deadline (/by) event (/at) find list delete done\";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        tasks.runCommand(c);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.storage.save(tasks);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.flush();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.setOut(old);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "garysyndromes": 157
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent an unique exception thrown by my Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor of unique exception thrown."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param errorType unique error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DukeException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Event is a Task that is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether an Event is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * \u003ccode\u003eat\u003c/code\u003e describes the time of the Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 18
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"event\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public EventCommand(Event e) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d e;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"find\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public FindCommand(String taskToSearch) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"find\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.taskToSearch \u003d taskToSearch;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 12
    }
  },
  {
    "path": "src/main/java/FixedDurationTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * FixedDurationTask is a Task that takes a fixed amount of time but does not have a fixed start/end time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether an FixedDurationTask is completed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * \u003ccode\u003eneededHours\u003c/code\u003e describes the number of hours needed"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class FixedDurationTask extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private int neededHours;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public FixedDurationTask(String description, int neededHours) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.neededHours \u003d neededHours;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[F]\" + super.toString() + \" (needs \" + neededHours + \" hour(s))\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 19
    }
  },
  {
    "path": "src/main/java/FixedTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"fixedTask\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class FixedTaskCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public FixedTaskCommand(FixedDurationTask fdt) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"fixedTask\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d fdt;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"list\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            stage.setTitle(\"My version of Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.prefWidthProperty().bind(scrollPane.widthProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(this.duke.getWelcomeMessage(), dukeImage));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(this.duke.getCurrentTasksInDuke(), dukeImage));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 62
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Parser handles what command to generate based on the user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Parser makes sense of the text that is being input to Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    final static String exitInput \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Returns a Command for Duke to run on."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param text Input from user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return Command to run. Returns null when no input matches the correct Commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static Command parse(String text) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (text.toLowerCase().equals(exitInput)) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (text.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String[] splitStr \u003d text.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            String taskToFind \u003d text.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new FindCommand(taskToFind);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            int index \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            int index \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"fixedtask\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                 int neededHours \u003d -1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String fixedTaskDescription \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    if ((splitStr[i].equals(\"/needs\"))) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            neededHours \u003d Integer.parseInt(splitStr[i+1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        fixedTaskDescription +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (neededHours \u003d\u003d -1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! How long is this FixedDurationTask????? use /needs \u003chours\u003e to tell me! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    fixedTaskDescription \u003d fixedTaskDescription.substring(0, fixedTaskDescription.length() - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    FixedDurationTask fdt \u003d new FixedDurationTask(fixedTaskDescription, neededHours);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new FixedTaskCommand(fdt);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                LocalDate date \u003d LocalDate.now().minus(1, ChronoUnit.MONTHS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String deadline \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    if ((splitStr[i].equals(\"/by\"))) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        date \u003d LocalDate.parse(splitStr[i + 1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        deadline +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                deadline \u003d deadline.substring(0, deadline.length() - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You cannot set a date that is in the past! Format is yyyy-mm-dd ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Deadline d \u003d new Deadline(deadline, date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new DeadlineCommand(d);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String at \u003d \"\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String event \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    if ((splitStr[i].equals(\"/at\"))) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        for (int j \u003d i + 1; j \u003c splitStr.length; j++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            at +\u003d splitStr[j] + \" \";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        event +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Where is this event????? use /at to tell me! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    event \u003d event.substring(0, event.length() - 1);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    at \u003d at.substring(0, at.length() - 1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Event e \u003d new Event(event, at);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new EventCommand(e);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"todo\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty. ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    String todo \u003d \"\";"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        todo +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    todo \u003d todo.substring(0, todo.length() - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Todo t \u003d new Todo(todo);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new TodoCommand(t);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException m) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(m.getMessage());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 140
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Storage loads tasks from the file at \u003ccode\u003efilePath\u003c/code\u003e upon startup"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * and saves tasks into the file at \u003ccode\u003efilePath\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * every time there is changes to the to do list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor for Storage class."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param filePath relative directory of the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Load the data from the saved file into the current to do list. load() is called upon startup."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * The file is read as \u003ccode\u003eString\u003c/code\u003e and being translated into a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return ArrayList that contains all Task in the current saved file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @throws DukeException Exception is thrown when there is no file with the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if ((!f.exists())) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Error: There is no previous file stored! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cString\u003e stringTasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String text;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                while ((text \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    stringTasks.add(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Error: no File detected. \" + e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            for (int i \u003d 0; i \u003c stringTasks.size(); i++) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String task \u003d stringTasks.get(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String type \u003d task.charAt(1) + \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            task \u003d task.substring(10);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            task \u003d task.substring(12);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        String date \u003d task.substring(task.indexOf(\"at:\") + 4, task.length() - 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String event \u003d task.substring(10, task.indexOf(\"at:\") - 2);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Event e \u003d new Event(event, date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            e.markAsDone();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(e);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String event \u003d task.substring(12, task.indexOf(\"at:\") - 2);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Event e \u003d new Event(event, date);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(e);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"F\": {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        String hours \u003d task.substring(task.indexOf(\"needs\") + 6, task.indexOf(\"hour(s))\") - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String fixedTaskDescription \u003d task.substring(10, task.indexOf(\"needs\") - 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            FixedDurationTask fdt \u003d new FixedDurationTask(fixedTaskDescription, Integer.parseInt(hours));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            fdt.markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(fdt);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String fixedTaskDescription \u003d task.substring(12, task.indexOf(\"needs\") - 2);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            FixedDurationTask fdt \u003d new FixedDurationTask(fixedTaskDescription, Integer.parseInt(hours));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(fdt);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        String dateFromStorage \u003d task.substring(task.indexOf(\"by:\") + 4, task.length() - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String deadline \u003d task.substring(10, task.indexOf(\"by:\") - 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Deadline d \u003d new Deadline(deadline, dateConverter(dateFromStorage));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            d.markAsDone();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(d);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String deadline \u003d task.substring(12, task.indexOf(\"by:\") - 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Deadline d \u003d new Deadline(deadline, dateConverter(dateFromStorage));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(d);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        throw new DukeException(\"Wrong type of data in Storage!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private LocalDate dateConverter(String date) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date, dateTimeFormatter);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Saves the current to do list into the file at \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * save(Tasklist tasklist) is called every time a new Command is run."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param tasklist Tasklist containing all the tasks and methods to modify the list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void save(TaskList tasklist) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(f));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                bw.append(task.toString());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"Error when saving file. \" + e.getMessage());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 151
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a Task in the TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A Task is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether a Task is completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return (isDone ? \"DONE\" : \"UNDONE\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Sets the Task as Done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 33
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * TaskList contains the task list and all its operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Contains a .run() method as well to run the Command related to the Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTexts;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d listOfTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.listOfTexts;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Prints out all tasks currently in the to do list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showCurrentTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (listOfTexts.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"To Do List is empty! Congratulations!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTexts.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(counter + \". \" + listOfTexts.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showSearch(String stringToSearch) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTexts.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            String taskDescription \u003d listOfTexts.get(i).getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (taskDescription.contains(stringToSearch)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                searchList.add(listOfTexts.get(i));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Ui.printBeforeSearch();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Ui.printSearch(searchList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Applies the action on the TaskList as indicated by the type of Command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param command Type of Command described by .getCommand() which return a \u003ccode\u003eString\u003c/code\u003e description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void runCommand(Command command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (command !\u003d null) : \"Input something correct into me! todo/deadline(/by)/event(/at)/fixedtask(/needs)/find/list/delete/done\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            switch (command.getCommand()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"bye\": {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"list\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    showCurrentTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"find\": {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    showSearch(command.getTaskToSearch());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d this.listOfTexts.get(command.getIndex());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDone(currentTask);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d this.listOfTexts.get(command.getIndex());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    listOfTexts.remove(command.getIndex());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDelete(currentTask, listOfTexts);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterTodo((Todo) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDeadline((Deadline) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterEvent((Event) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"fixedTask\": {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterFixedTask((FixedDurationTask) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, you have entered wrong command. Error in TaskList! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 117
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Todo is a Task and is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether a Task is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 15
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represent a \"todo\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TodoCommand(Todo t) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Ui Class deals with interaction with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Includes logos and all messages that is sent to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * print message with logo on startup."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Hello from Duke!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"What can I do for you today?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Please tell me what to do!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * print when a \"bye\" Command is run."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void terminateMessage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Bye bye! Thank you for using me! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showLineBreak() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String handleInput() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Error message of no existing file at the current \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"There is no saved To Do List on your Hard disk!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDone(Task currentTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done and dusted:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDelete(Task currentTask, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Bye bye Task! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterTodo(Todo todo, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (listOfTexts.size() !\u003d 0) : \"☹ OOPS!!! No tasks to show: add some todo/deadline/event/fixedDurationTask now! ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this task to the list: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(todo);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDeadline(Deadline d, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (listOfTexts.size() !\u003d 0) : \"☹ OOPS!!! No tasks to show: add some todo/deadline/event/fixedDurationTask now! ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this deadline to the list:\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(d);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterEvent(Event e, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (listOfTexts.size() !\u003d 0) : \"☹ OOPS!!! No tasks to show: add some todo/deadline/event/fixedDurationTask now! ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this event to the list: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterFixedTask(FixedDurationTask fdt, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (listOfTexts.size() !\u003d 0) : \"☹ OOPS!!! No tasks to show: add some todo/deadline/event/fixedDurationTask now! ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this FixedDurationTask to the list: \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(fdt);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static void printBeforeSearch() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static void printSearch(ArrayList\u003cTask\u003e searchList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assert (searchList.size() !\u003d 0) : \"☹ OOPS!!! No match on your search! Are you sure you\u0027ve added it? ☹ OOPS!!!\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c searchList.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(counter + \". \" + searchList.get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" prefHeight\u003d\"102.0\" prefWidth\u003d\"278.0\" style\u003d\"-fx-background-color: ffffed; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003c/opaqueInsets\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"f\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            \u003cInsets right\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 22
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"500.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: #bbb;\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"75.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            \u003cFont name\u003d\"System Bold\" size\u003d\"14.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "      \u003c/TextField\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"357.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"SEND\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"357.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: #BE5504;\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"42.66666666666663\" AnchorPane.leftAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"1.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"500.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #BE5504;\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 24
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 2
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 2
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTexts;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskListTest(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d listOfTasks; // need to implement storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskListTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.listOfTexts;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showCurrentTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (listOfTexts.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"To Do List is empty! Congratulations!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 29
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void markAsDoneTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Task todo \u003d new Todo(\"todo1\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        todo.markAsDone();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        assertEquals(\"DONE\",todo.getStatusIcon());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 14
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 3
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Please tell me what to do!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Got you covered! Added this task to the list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Bye bye! Thank you for using me! Hope to see you again soon."
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Please tell me what to do!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Got you covered! Added this task to the list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Bye bye! Thank you for using me! Hope to see you again soon."
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "FC ACTUAL.TXT EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 21
    }
  }
]
