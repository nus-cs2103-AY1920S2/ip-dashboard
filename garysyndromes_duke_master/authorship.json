[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "garysyndromes": 23
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"bye\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"bye\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents the Command that is sent to the TaskList to handle the Tasks in TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A Command is represented by:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a String \u003ccode\u003ecommand\u003c/code\u003e which describes the type of command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * an int \u003ccode\u003eindex\u003c/code\u003e which is used by DeleteCommand and DoneCommand."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a Task \u003ccode\u003etask\u003c/code\u003e which is used by DeadlineCommand, EventCommand,TodoCommand."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String taskToSearch;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getTaskToSearch() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.taskToSearch;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 28
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a Deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Deadline is a Task and is described by its String \u003ccode\u003edescription\u003c/code\u003e and"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *  * a boolean \u003ccode\u003eisDone\u003c/code\u003e to indicate whether a Deadline is completed."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *  \u003ccode\u003eby\u003c/code\u003e describes the date at which the Deadline is due."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 22
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"deadline\" command give to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DeadlineCommand(Deadline d) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d d;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a DeleteCommand given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 49
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"done\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Duke is a chat bot program that builds a to do list. Current functions include:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * list, delete, done, todo, deadline, event, bye."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor for main class for the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param filePath relative path of the file that the data of to do list is saved in."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Main driver for Duke program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.welcomeMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        tasks.showCurrentTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.showLineBreak();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        boolean isFinished \u003d false;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        while (!(isFinished)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String inputFromUser \u003d ui.handleInput();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                Command c \u003d Parser.parse(inputFromUser);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (c \u003d\u003d null) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                tasks.runCommand(c);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (c.getCommand().equals(\"bye\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    isFinished \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Invalid command received: \" + e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                this.storage.save(tasks);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ui.terminateMessage();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // more code to be added here later"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        });"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        });"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        );"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"Duke SAYS: \" + input;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Duke duke \u003d new Duke(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "garysyndromes": 190
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents an unique exception thrown by my Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor of unique exception thrown."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param errorType unique error message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public DukeException(String errorType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(errorType);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Event is a Task that is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *  a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether an Event is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *  \u003ccode\u003eat\u003c/code\u003e describes the time of the Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 18
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"event\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public EventCommand(Event e) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d e;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public FindCommand(String taskToSearch) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"find\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.taskToSearch \u003d taskToSearch;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"list\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"list\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Parser handles what command to generate based on the user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Parser makes sense of the text that is being input to Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static String exitInput \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Returns a Command for Duke to run on."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param text Input from user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return Command to run. Returns null when no input matches the correct Commands."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static Command parse(String text) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (text.toLowerCase().equals(exitInput)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (text.toLowerCase().equals(\"list\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String[] splitStr \u003d text.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            String taskToFind \u003d text.substring(5);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new FindCommand(taskToFind);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            int index \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            int index \u003d Integer.parseInt(splitStr[1]) - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                LocalDate date \u003d LocalDate.now().minus(1, ChronoUnit.MONTHS);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String deadline \u003d \"\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    if ((splitStr[i].equals(\"/by\"))) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        date \u003d LocalDate.parse(splitStr[i + 1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        deadline +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                deadline \u003d deadline.substring(0, deadline.length() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (date.isBefore(LocalDate.now())) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! You cannot set a date that is in the past! Format is yyyy-mm-dd ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Deadline d \u003d new Deadline(deadline, date);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new DeadlineCommand(d);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"event\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String at \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String event \u003d \"\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    if ((splitStr[i].equals(\"/at\"))) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        for (int j \u003d i + 1; j \u003c splitStr.length; j++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            at +\u003d splitStr[j] + \" \";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        event +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (at.equals(\"\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! Where is this event????? use /at to tell me! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    event \u003d event.substring(0, event.length() - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    at \u003d at.substring(0, at.length() - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Event e \u003d new Event(event, at);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new EventCommand(e);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(error);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (splitStr[0].toLowerCase().equals(\"todo\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                if (splitStr.length \u003c 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty. ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    String todo \u003d \"\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    for (int i \u003d 1; i \u003c splitStr.length; i++) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        todo +\u003d splitStr[i] + \" \";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    todo.substring(0, todo.length() - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Todo t \u003d new Todo(todo);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    return new TodoCommand(t);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (DukeException m) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(m);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 114
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Storage loads tasks from the file at \u003ccode\u003efilePath\u003c/code\u003e upon startup"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * and saves tasks into the file at \u003ccode\u003efilePath\u003c/code\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * every time there is changes to the to do list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private File f;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Constructor for Storage class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param filePath relative directory of the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.f \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Load the data from the saved file into the current to do list. load() is called upon startup."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * The file is read as \u003ccode\u003eString\u003c/code\u003e and being translated into a \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @return ArrayList that contains all Task in the current saved file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @throws DukeException Exception is thrown when there is no file with the \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if ((!f.exists())) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Error: There is no previous file stored! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cString\u003e stringTasks \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                BufferedReader br \u003d new BufferedReader(new FileReader(f));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String text;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                while ((text \u003d br.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    stringTasks.add(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                System.out.println(\"Error: no File detected. \" + e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            for (int i \u003d 0; i \u003c stringTasks.size(); i++) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String task \u003d stringTasks.get(i);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                String type \u003d task.charAt(1) + \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"T\": {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            task \u003d task.substring(10);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            todo.markAsDone();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            task \u003d task.substring(12);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Todo todo \u003d new Todo(task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(todo);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"E\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        String date \u003d task.substring(task.indexOf(\"at:\") + 4, task.length() - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String event \u003d task.substring(10, task.indexOf(\"at:\") - 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Event e \u003d new Event(event, date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            e.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(e);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String event \u003d task.substring(12, task.indexOf(\"at:\") - 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Event e \u003d new Event(event, date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    case \"D\": {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        String dateFromStorage \u003d task.substring(task.indexOf(\"by:\") + 4, task.length() - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        if (task.charAt(4) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            // means task done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String deadline \u003d task.substring(10, task.indexOf(\"by:\") - 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Deadline d \u003d new Deadline(deadline, dateConverter(dateFromStorage));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            d.markAsDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(d);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            String deadline \u003d task.substring(12, task.indexOf(\"by:\") - 2);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            Deadline d \u003d new Deadline(deadline, dateConverter(dateFromStorage));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                            tasks.add(d);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                        throw new DukeException(\"Wrong type of data in Storage!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private LocalDate dateConverter(String date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date, dateTimeFormatter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Saves the current to do list into the file at \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * save(Tasklist tasklist) is called every time a new Command is run."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param tasklist Tasklist containing all the tasks and methods to modify the list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void save(TaskList tasklist) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(f));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d tasklist.getTasks();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                bw.append(task.toString());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            bw.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"Error when saving file. \" + e.getMessage());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 128
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a Task in the TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * A Task is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether a Task is completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return (isDone ? \"DONE\" : \"UNDONE\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Sets the Task as Done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * TaskList contains the task list and all its operations to add/delete tasks in the list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Contains a .run() method as well."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTexts;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d listOfTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.listOfTexts;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Prints out all tasks currently in the to do list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showCurrentTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (listOfTexts.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"To Do List is empty! Congratulations!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTexts.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(counter + \". \" + listOfTexts.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showSearch(String stringToSearch) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        ArrayList\u003cTask\u003e searchList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTexts.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            String taskDescription \u003d listOfTexts.get(i).getDescription();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            if (taskDescription.contains(stringToSearch)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                searchList.add(listOfTexts.get(i));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Ui.printBeforeSearch();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        Ui.printSearch(searchList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Applies the action on the TaskList as indicated by the type of Command."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * @param command Type of Command described by .getCommand() which return a \u003ccode\u003eString\u003c/code\u003e description."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void runCommand(Command command) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            switch (command.getCommand()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"bye\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"list\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    showCurrentTasks();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"find\": {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    showSearch(command.getTaskToSearch());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d this.listOfTexts.get(command.getIndex());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    currentTask.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDone(currentTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d this.listOfTexts.get(command.getIndex());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    listOfTexts.remove(command.getIndex());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDelete(currentTask, listOfTexts);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"todo\": {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterTodo((Todo) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"deadline\": {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterDeadline((Deadline) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                case \"event\": {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Task currentTask \u003d command.getTask();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    addTask(currentTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    Ui.printAfterEvent((Event) currentTask, listOfTexts);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, you have entered wrong command. Error in TaskList! ☹ OOPS!!!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 111
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Todo is a Task and is described by its \u003ccode\u003eString\u003c/code\u003e description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " *  a \u003ccode\u003eboolean\u003c/code\u003e isDone to indicate whether a Task is completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 15
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Represents a \"todo\" command given to TaskList."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TodoCommand(Todo t) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.command \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.task \u003d t;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Ui Class deals with interaction with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " * Includes logos and all messages that is sent to the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * print message with logo on startup."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void welcomeMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"What can I do for you today?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Please tell me what to do!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * print when a \"bye\" Command is run."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void terminateMessage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Bye bye! Thank you for using me! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showLineBreak() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public String handleInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     * Error message of no existing file at the current \u003ccode\u003efilePath\u003c/code\u003e."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"There is no saved To Do List on your Hard disk!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDone(Task currentTask) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done and dusted:\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDelete(Task currentTask, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Bye bye Task! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(currentTask);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterTodo(Todo todo, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this task to the list: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(todo);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterDeadline(Deadline d, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this deadline to the list:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(d);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public static void printAfterEvent(Event e, ArrayList\u003cTask\u003e listOfTexts) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Got you covered! Added this event to the list: \");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Now you have \" + listOfTexts.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static void printBeforeSearch() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    static void printSearch(ArrayList\u003cTask\u003e searchList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (searchList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"No match on your search! Are you sure you\u0027ve added it?\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        for (int i \u003d 0; i \u003c searchList.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(counter + \". \" + searchList.get(i));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 95
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 2
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 2
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTexts;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskListTest(ArrayList\u003cTask\u003e listOfTasks) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d listOfTasks; // need to implement storage"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public TaskListTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        this.listOfTexts.add(t);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        return this.listOfTexts;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    public void showCurrentTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        if (listOfTexts.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "            System.out.println(\"To Do List is empty! Congratulations!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 29
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 2
    }
  },
  {
    "path": "text-ui-test/ACTUAL.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Please tell me what to do!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Got you covered! Added this task to the list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Bye bye! Thank you for using me! Hope to see you again soon."
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": " ____        _"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|  _ \\ _   _| | _____"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "What can I do for you today?"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Please tell me what to do!"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Got you covered! Added this task to the list:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "[D][?] return book (by: Sunday)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "Bye bye! Thank you for using me! Hope to see you again soon."
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "deadline return book /by Sunday"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "garysyndromes"
        },
        "content": "FC ACTUAL.TXT EXPECTED.txt"
      }
    ],
    "authorContributionMap": {
      "garysyndromes": 21
    }
  }
]
