[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "D|0|return book|02/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "E|0|project meeting|02/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "T|0|borrow book"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * A deadline object, has a name and a date of the deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for a deadline task, which is not done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of deadline task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param date The date of deadline task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Deadline(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for a deadline task, in which the done status can be specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of deadline task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param date The date of deadline task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param isDone The done status of deadline task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Deadline(String name, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be displayed for a deadline task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of deadline task to be displayed to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:ss a\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be returned when written and saved to drive for a deadline task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of deadline task to be written to the file and saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String writeDrive() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"D|\" + (super.isDone() ? \"1|\" : \"0|\") + this.name + \"|\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHss\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * A new deadline object with done property being set."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A new deadline object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Deadline setDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return new Deadline(this.name, this.date, true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 58
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * This class is the main driving chatbot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " **/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor which takes in a file path"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * to obtain information from the file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param filePath The file path to the file to be modified"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            ui.showLoadingError(e);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * The main method to run the chatbot."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * This run method."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        processInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Method to process the input from user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void processInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        Parser curr \u003d new Parser(next);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        while (!curr.getTaskType().equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            if (curr.getTaskType().equals(\"list\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                ui.printList(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            } else if (curr.getTaskType().equals(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                String finding \u003d curr.getSecond();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                TaskList filtered \u003d tasks.filter(finding);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                ui.printFindings(filtered);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            } else if (curr.getTaskType().equals(\"done\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    Integer taskNumber \u003d Integer.valueOf(curr.getSecond());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    Task updatedTask \u003d tasks.get(taskNumber - 1).setDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    tasks.set(taskNumber - 1, updatedTask);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    storage.updateDrive(updatedTask);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    ui.printDone(updatedTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    ui.printException(new DukeException("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                            \" ☹ OOPS!!! The description of a done cannot be empty.\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            } else if (curr.getTaskType().equals(\"delete\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    Integer taskNumber \u003d Integer.valueOf(curr.getSecond());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    Task removedTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    tasks.remove(removedTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    storage.deleteDrive(taskNumber);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    ui.printRemove(removedTask, tasks.size());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    ui.printException(new DukeException("
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                            \" ☹ OOPS!!! The description of a delete cannot be empty.\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                String taskName;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                if (curr.getTaskType().equals(\"todo\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        taskName \u003d curr.getThird();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        newTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        addTask(newTask);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        ui.printException(new DukeException("
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                                \" ☹ OOPS!!! The description of a todo cannot be empty.\"));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } else if (curr.getTaskType().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        taskName \u003d curr.getThird();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        LocalDateTime time \u003d curr.getDate();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        newTask \u003d new Deadline(taskName, time);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        addTask(newTask);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        ui.printException(new DukeException("
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                                \" ☹ OOPS!!! The description of a deadline cannot be empty.\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } else if (next.trim().split(\" \")[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        taskName \u003d curr.getThird();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        LocalDateTime time \u003d curr.getDate();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        newTask \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        addTask(newTask);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        ui.printException(new DukeException("
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                                \" ☹ OOPS!!! The description of an event cannot be empty.\"));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    ui.printException(new DukeException("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                            \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\"));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            curr \u003d new Parser(next);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Method to add a task to the list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    void addTask(Task newTask) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        storage.updateDrive(newTask);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ui.printTask(newTask, tasks.size());"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 138,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * An exception object specifically for Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for a exception specific to Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param message The message of the exception"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be printed when there is an exception."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of the message of the exception."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"\\t\" + getMessage();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 22
    }
  },
  {
    "path": "src/main/java/duke/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import static org.junit.Assert.assertNotNull;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * A JUnit test to test correctness of Duke Exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * A test to make sure that the Exception generated is not a null."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        assertNotNull(new DukeException(\"read\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 19
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * An event object, has a name and a date of the event."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private LocalDateTime date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for an event task, which is not done."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param date The date of event task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Event(String name, LocalDateTime date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for an event task, in which the done status can be specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param date The date of event task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param isDone The done status of event task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Event(String name, LocalDateTime date, boolean isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be displayed for an event task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of event task to be displayed to user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:ss a\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be returned when written and saved to drive for an event task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of event task to be written to the file and saved."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String writeDrive() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"E|\" + (super.isDone() ? \"1|\" : \"0|\") + this.name + \"|\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                date.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHss\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * A new event object with done property being set."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A new event object."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Event setDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return new Event(this.name, this.date, true);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 58
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * This class takes care to interpret information from user\u0027s input."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor which takes in a string by the user to be interpreted."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    Parser(String next) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.command \u003d next;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Retrieves the task type of the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return String of the task type of the command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        if (this.command.trim().contains(\" \")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            return this.command.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            return this.command.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Retrieves the second argument of the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return String of the second argument of the command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String getSecond() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return this.command.trim().split(\" \")[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Retrieves the third argument of the command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return String of the third argument of the command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String getThird() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        if (this.command.contains(\"/\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            return this.command.substring(this.command.indexOf(\" \") + 1,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    this.command.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            return this.command.trim().substring(5);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Retrieves the date format of the command."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return Date format of the of the command of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public LocalDateTime getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return extractDate(this.command.substring(this.command.indexOf(\"/\") + 4));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Converts a date in the form of a string to a Date form."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return Date format of the of the string format of the date"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static LocalDateTime extractDate(String next) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        StringBuilder forTime \u003d new StringBuilder(next.substring(next.indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        forTime.insert(2, \u0027:\u0027);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String time \u003d forTime.toString();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String[] reverse \u003d next.substring(0, next.indexOf(\" \"))"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                .split(\"/\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String[] reversed \u003d reverse;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String temp \u003d String.format(\"%2s\",reverse[0]).replace(\" \", \"0\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        reversed[0] \u003d String.format(\"%4s\",reverse[2]).replace(\" \", \"0\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        reversed[2] \u003d temp;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        reversed[1] \u003d String.format(\"%2s\", reverse[1]).replace(\" \", \"0\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String date \u003d String.join(\"-\", reversed);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        LocalDateTime taskDate \u003d LocalDate.parse(date)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                .atTime(LocalTime.parse(time))"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                ;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 83
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * This class takes care storage and retrieval of information"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * from the drive of computer."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " **/"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor which takes in a file path to the file to be modified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Loading of information from the file specified for this Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                String curr \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                String type \u003d curr.substring(0, 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                String isDone \u003d curr.substring(2,3);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                Task add;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    add \u003d new ToDo(curr.substring(4), isDone.equals(\"0\") ? false : true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    String name \u003d curr.substring(4, curr.indexOf(\u0027|\u0027, 4));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    String date \u003d curr.substring(curr.indexOf(\u0027|\u0027, 4) + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        add \u003d new Deadline(name, Parser.extractDate(date),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                                isDone.equals(\"0\") ? false : true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        add \u003d new Event(name, Parser.extractDate(date),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                                isDone.equals(\"0\") ? false : true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                tasks.add(add);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            throw new DukeException(\"File for loading not found\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Update information to the file specified for this Storage"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * by adding on a new task object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param updatedTask Task to be updated"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void updateDrive(Task updatedTask) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        BufferedWriter writer;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            writer \u003d new BufferedWriter(new FileWriter(file, true));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            writer.append(updatedTask.writeDrive());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            //System.out.println(\"Cannot find file\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Update information to the file specified for this Storage"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * by removing on a new task object."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param size The order of the task that are to be removed"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void deleteDrive(int size) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            FileReader fr \u003d new FileReader(file);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            Scanner s \u003d new Scanner(fr);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                if (i \u003d\u003d size) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    tasks.add(line);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            for (String st : tasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                writer.append(st);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                writer.newLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        } catch (IOException ie) { }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 111
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * An abstract object of task, has a name and a done status."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for an abstract task, which is not done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Protected constructor for a task, in which the done status can be specified."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param isDone The done status of event task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    protected Task(String name, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String which states the name and done status of a task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String done \u003d isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"[\" + done + \"] \" + name;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Boolean of done status of the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return Boolean of the done status of the task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Method to return a the name of the task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A string of the name of the task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Abstract method to return a new task with specified done status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A new task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public abstract Task setDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Abstract method to return a string of the task object to be written to a file."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A string of the task to be written to a file."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public abstract String writeDrive();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 65
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * This class wraps around the class ArrayList from Java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * Collection Framework."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for an empty array list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Private constructor of a non-empty array list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param taskList The ArrayList of this self-implemented TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Set an object into the ArrayList at a specific index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * following the set() method of Java\u0027s ArrayList."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param t The task to be added"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param i The index to be inserted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void set(int i, Task t) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.taskList.set(i, t);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Get a task object from the ArrayList following the get() method of Java\u0027s ArrayList."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param i The indec of the task to be taken"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return this.taskList.get(i);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Remove an object into the ArrayList following the remove() method of Java\u0027s ArrayList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param t The task to be added"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void remove(Task t) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.taskList.remove(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Calculate the size of the ArrayList following the size() method of Java\u0027s ArrayList."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Add an object into the ArrayList following the add() method of Java\u0027s ArrayList."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param t The task to be added"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        this.taskList.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Obtain the list embedded in this TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return An ArrayList of this TaksList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Filter the list of task to the one that contains a certain string."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A TaskList that has been filtered"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public TaskList filter(String s) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        ArrayList\u003cTask\u003e al \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                this.taskList.stream()"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "                        .filter(x -\u003e x.getName().contains(s)).collect(Collectors.toList()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return new TaskList(al);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 89
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * A todo object, has a name and a date of the event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for a todo task, which is not done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor for a todo task, in which the done status can be specified."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param name The name of event task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @param isDone The done status of event task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ToDo(String name, boolean isDone) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        super(name, isDone);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be displayed for a todo task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of todo task to be displayed to user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * String to be returned when written and saved to drive for a todo task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return The string of todo task to be written to the file and saved."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public String writeDrive() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return \"T|\" + (super.isDone() ? \"1|\" : \"0|\") + this.name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * A new todo object with done property being set."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * @return A new todo object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public ToDo setDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        return new ToDo(this.name, true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 48
    }
  },
  {
    "path": "src/main/java/duke/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "import static org.junit.Assert.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * A JUnit test to test correctness of ToDo Object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * A test to make sure that the string generated by"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * writeDrive() method in ToDo object is correct."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    public void runTest() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        assertEquals(new ToDo(\"read\").writeDrive(), \"T|0|read\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 19
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * This class takes care of the user interface"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " * especially printing outputs to the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": " **/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Constructor of the UI object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    Ui(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing an error of loading a file to the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    void showLoadingError(DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing an greeting message to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    void greetUser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing the task lists of the user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        for (Task s : tasks.getTasks()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            System.out.println(\"\\t\" + i + \".\" + s.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing confirmation of task adding to the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printTask(Task newTask, int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\t\\t\" + newTask);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing confirmation of changing task done status to done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * to the user"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printDone(Task updatedTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\t\\t\" + updatedTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing a farewell message to the user."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printBye() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing confirmation of removing task from the list."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * to the user"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printRemove(Task removedTask, int size) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\t\\t\" + removedTask);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing an exception message to the user."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printException(DukeException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(e);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     * Printing the tasks that has related keywords."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    static void printFindings(TaskList foundTasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        String line \u003d \"   ____________________________________________________________\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(\"\\tHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        for (Task s : foundTasks.getTasks()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            System.out.println(\"\\t\" + i + \".\" + s.toString());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 119
    }
  },
  {
    "path": "text-ui-test/ACTUAL.TXT",
    "fileType": "TXT",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[D][✘] return book (by: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[E][✘] project meeting(at: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[T][✘] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t1.[D][✘] return book (by: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t2.[E][✘] project meeting(at: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t3.[T][✘] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 28
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tHello! I\u0027m Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tWhat can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[D][✘] return book (by: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 1 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[E][✘] project meeting(at: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 2 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tGot it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t\t[T][✘] borrow book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tNow you have 3 tasks in the list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tHere are the tasks in your list:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t1.[D][✘] return book (by: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t2.[E][✘] project meeting(at: Dec 2 2019 06:00 PM)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\t3.[T][✘] borrow book"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "\tBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "   ____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "deadline return book /by 2/12/2019 1800"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "event project meeting /at 2/12/2019 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 5
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "agnesnatasya"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "agnesnatasya": 34
    }
  }
]
