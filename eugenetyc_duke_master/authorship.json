[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# Setting up"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "**Prerequisites**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "* JDK 11"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "* Recommended: IntelliJ IDE"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "* Fork this repo to your GitHub account and clone the fork to your computer"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "**Importing the project into IntelliJ**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open IntelliJ (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `Configure` \u003e `Structure for new Projects` (in older versions of Intellij:`Configure` \u003e `Project Defaults` \u003e `Project Structure`)."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   * Click `OK`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Import Project`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "1. Locate the project directory and click `OK`."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "1. Select `Create project from existing sources` and click `Next`."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. Rename the project if you want. Click `Next`."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "1. Ensure that your src folder is checked. Keep clicking `Next`."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "1. Click `Finish`."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# Tutorials "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "Driver.duke.Duke Increment | Tutorial"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "---------------|---------------"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "`A-Gradle` | [Gradle Tutorial](tutorials/gradleTutorial.md)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "`A-TextUiTesting` | [Text UI Testing Tutorial](tutorials/textUiTestingTutorial.md)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "`Level-10` | JavaFX tutorials:\u003cbr\u003e→ [Part 1: Introduction to JavaFX][fx1]\u003cbr\u003e→ [Part 2: Creating a GUI for Driver.duke.Duke][fx2]\u003cbr\u003e→ [Part 3: Interacting with the user][fx3]\u003cbr\u003e→ [Part 4: Introduction to FXML][fx4]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "[fx1]: \u003ctutorials/javaFxTutorialPart1.md\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "[fx2]: \u003ctutorials/javaFxTutorialPart2.md\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "[fx3]: \u003ctutorials/javaFxTutorialPart3.md\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "[fx4]: \u003ctutorials/javaFxTutorialPart4.md\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# Feedback, Bug Reports"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "* If you have feedback or bug reports, please post in [se-edu/duke issue tracker](https://github.com/se-edu/duke/issues)."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "* We welcome pull requests too."
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 2,
      "-": 37
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "// For JavaFX"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "// For JUnit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "test {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "// For shadowJar"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "// For checkstyle"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 49,
      "-": 19
    }
  },
  {
    "path": "lastSavedTasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "1. [V] [T] good"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "2. [V] [E] FoodFest (at: May 7 2019)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "3. [X] [E] Homework Completion (at: Jun 7 2019)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "4. [V] [D] Good Fun Times (by: Jun 7 2019)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "5. [X] [E] foodFiesta (at: May 5 2019)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "6. [V] [D] finishMy food (by: Jan 29 2019)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "7. [X] [T] food good nest"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "8. [X] [T] food good icecream"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 8
    }
  },
  {
    "path": "src/main/java/duke/Constant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * A class for any constants to be used possibly often in its scope."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Constant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Utilised in printing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static final String FORMAT_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 13
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for DialogBox."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param text the String to include as text."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param img the profile photo for user identification."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Set Label and ImageView."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        displayPicture.setClip(new Circle(50, 50, 50));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Produces a DialogBox to represent the user\u0027s command."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param text the String to include as text."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param img the profile photo for user identification."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return DialogBox representing user command."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Special Effect: For user, command chats are blue in colour."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        db.setStyle(\"-fx-background-color:POWDERBLUE\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /** EDIT THIS FOR DUKE TO MAKE A NEW RESPONSE!!! MUST BE SAME DUKE!!!"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Produces a DialogBox to represent Duke\u0027s response."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param text the String to include as text."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param img the profile photo for Duke."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return DialogBox representing Duke\u0027s response."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Special Effect: For Duke, response chats are on the left of the chatbox."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 96
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Main class for the entire program, Duke is the chatbot and this is the driver class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * TaskList to store all the Tasks for Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private TaskList allTasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Storage file for reading when initialising or writing to when there are changes to the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Storage file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Handles the User Interactions/Formalities."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.allTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.file \u003d new Storage();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Main driver method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param args standard argument."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Welcomes the user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Ui.welcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Initialise duke.Duke program"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        duke.initialise();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Run main program"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // User is done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Ui.goodbye();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Runs TaskList to serve the user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Begins accepting input commands"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        allTasks.serveUser();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructs new duke.Duke, and uses past user data if any."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void initialise() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Loads previous Tasks if any"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        load();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Loads previously saved files if any."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Creates new file otherwise."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void load() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Take information from file to update allTasks to last saved preferences"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        file.readFromLastSavedFile(allTasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 88
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Launches the Duke Application."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param args standard argument."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 19
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    // GUI Controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    // GUI support."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    // Non-GUI members."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String userText \u003d getUserResponse(userInput.getText());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String dukeText \u003d getDukeResponse(userInput.getText());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                DialogBox.getUserDialog(userText, userImage),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, dukeImage)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Generates a response for Duke to the user input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getDukeResponse(String input) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return \"Duke: \" + input;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides user input with user as the author."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getUserResponse(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return \"You: \" + input;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 74
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Logical brain of processing information given in a raw format, mainly through the use of useful methods."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    // Storage methods"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Determines if a task is done or not from a line read in from the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param line line read in from a source file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representing completion (\"V\") or incomplete (\"X\")."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String determineTaskDoneStatusFromFileLine(String line) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfFirstSquareBracket \u003d line.indexOf(\"[\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String doneStatus \u003d String.valueOf(line.charAt(indexOfFirstSquareBracket + 1));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return doneStatus;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Determines the type of Task, either a To-Do, Event, or DeadLine."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param line line read in from source file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representing the type of Task, either a To-Do, Event, or DeadLine."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String determineTaskTypeFromFileLine(String line) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfFirstSquareBracket \u003d line.indexOf(\"[\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String taskType \u003d String.valueOf(line.charAt(indexOfFirstSquareBracket + 5));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Determines the Task Details like date limits or time of happening."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param line line read in from source file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String with all the details like date/time in raw form excluding the index, task status, and task type."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String determineTaskDetailsFromFileLine(String line) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfFirstSquareBracket \u003d line.indexOf(\"[\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String details \u003d line.substring(indexOfFirstSquareBracket + 8); // from unnecessary info at the front of line."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Checks if the String obtained from lastSavedTasks.txt represents a completed Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s Either a V or X."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return whether a Task is completed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public boolean isDone(String s) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return (s.equals(\"V\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    // TaskList methods"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Checks if this is capable of being a valid done command based on the criteria of length being more than 1."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command array representing each word in the String."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return whether this can be a possible done command."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public boolean satisfiesMinimumDoneCommandLength(String[] command) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return (command.length \u003e 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Checks if this is an actual done command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param commandWords array representing each word in the String."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param taskListSize current size of the TaskList."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return whether this is a correct done command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public boolean determineIfValidDoneCommand(String[] commandWords, int taskListSize) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return (Integer.parseInt(commandWords[1]) \u003c\u003d taskListSize);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 79
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Storage class for handling file input and output, saving past user data."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Reflects all Tasks in allTasks list to be saved in a lastSavedTasks.txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param allTasks List of Tasks for duke.Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void saveChanges(TaskList allTasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Note: The whole list will be iterated everytime an update is needed for the file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"lastSavedTasks.txt\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            for (int i \u003d 0; i \u003c allTasks.sizeOf(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String tickOrCross \u003d allTasks.getTask(i).obtainStatusIcon();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String currentLine \u003d String.valueOf(i + 1) + \". [\" + tickOrCross + \"] \" + allTasks.getTask(i);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                fw.write(currentLine + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            print(ioe.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Reads in from the lastSavedTasks.txt file if it exists, and updates duke.Duke allTasks list of Tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param allTasks List of Tasks for duke.Duke."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void readFromLastSavedFile(TaskList allTasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            // Read in from lastSavedTasks.txt file, if it exists, and load Tasks into allTasks ArrayList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            File f \u003d new File(\"lastSavedTasks.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(f);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            while (fileScanner.hasNext()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                // This is the line of interest"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String line \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                // We want to get these useful Strings using our Parser"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                Parser logic \u003d new Parser();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String doneStatus \u003d logic.determineTaskDoneStatusFromFileLine(line);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String taskType \u003d logic.determineTaskTypeFromFileLine(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String details \u003d logic.determineTaskDetailsFromFileLine(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // This is a To-Do item"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    Task currentToDo \u003d new ToDo(details);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    if (logic.isDone(doneStatus)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        currentToDo.doTask();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    allTasks.addSavedTaskToStored(currentToDo);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // This is a Deadline item"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    String deadlineCommand \u003d getDeadlineCommand(details);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    String deadlineLimit \u003d getDeadlineLimit(details);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    Task currentDeadline \u003d new Deadline(deadlineCommand, deadlineLimit);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // Check if done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    if (logic.isDone(doneStatus)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        currentDeadline.doTask();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // Finally, add the correct Task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    allTasks.addSavedTaskToStored(currentDeadline);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // This is an Event item"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    String eventCommand \u003d getEventCommand(details);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    String eventLimit \u003d getEventTime(details);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    Task currentEvent \u003d new Event(eventCommand, eventLimit);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // Check if done"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    if (logic.isDone(doneStatus)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        currentEvent.doTask();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // Finally, add the correct Task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    allTasks.addSavedTaskToStored(currentEvent);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            print(fnfe.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets the Event\u0027s command based on the details upon removing task status and type."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param details the line read in, after removing unnecessary information on task status and type."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the Event\u0027s command."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getEventCommand(String details) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfAtKeyword \u003d details.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String eventCommand \u003d details.substring(0, indexOfAtKeyword - 1);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return eventCommand;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets the Event\u0027s time based on the details upon removing task status and type."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param details the line read in, after removing unnecessary information on task status and type."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the Event\u0027s time of happening."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getEventTime(String details) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfByKeyword \u003d details.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String eventTime \u003d details.substring(indexOfByKeyword + 5,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                details.lastIndexOf(\")\"));"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return eventTime;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets the Deadline\u0027s command based on the details upon removing task status and type."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param details the line read in, after removing unnecessary information on task status and type."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the Deadline\u0027s command."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getDeadlineCommand(String details) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfAtKeyword \u003d details.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String deadlineCommand \u003d details.substring(0, indexOfAtKeyword - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return deadlineCommand;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets the Deadline\u0027s time limit based on the details upon removing task status and type."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param details the line read in, after removing unnecessary information on task status and type."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the Deadline\u0027s time limit to which it should be completed."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getDeadlineLimit(String details) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfByKeyword \u003d details.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String deadlineLimit \u003d details.substring(indexOfByKeyword + 5,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                details.lastIndexOf(\")\"));"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return deadlineLimit;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private static void print(String s) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 173
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.DeadlineException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.DeleteException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.DoneException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.EmptyTaskListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.EventException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.InputUnclearException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.exceptions.ToDoException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * TaskList class which mainly stores all the Tasks in an ArrayList of Tasks and handles related methods."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * for storing Tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private ArrayList\u003cTask\u003e allTasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.allTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Serves the user to do the bulk of the work in process individual commands."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void serveUser() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Scanner object to take in user input"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Scanner io \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Parser to make sense of various commands"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Parser logic \u003d new Parser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Accept and Respond to User Input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        while (io.hasNextLine()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                // obtain String command and split it to find the intention of the user (first word)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String command \u003d io.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                String[] commandWords \u003d command.split(\"\\\\s\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                // Depending on command, we process the command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                // Exceptions will be thrown respectively"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                switch (commandWords[0]) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    printAllTasks();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    deleteTask(command);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // user inputs will be \"done _____\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    // Take only the very next token which must be an integer"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    if (logic.satisfiesMinimumDoneCommandLength(commandWords)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        // this is a valid command"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        if (logic.determineIfValidDoneCommand(commandWords, this.sizeOf())) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                            // this valid command has a valid number, so, mark as done"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                            doTask(Integer.parseInt(commandWords[1]));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                            // invalid input: attempting to do a non-existent task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                            throw new InputUnclearException(\"\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        // invalid input"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                        throw new DoneException(\"\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    addNewToDo(command);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    addNewDeadline(command);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    addNewEvent(command);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    findTask(command);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    throw new InputUnclearException(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            } catch (DoneException | DeadlineException | DeleteException | EmptyTaskListException"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                | EventException | InputUnclearException | ToDoException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                Ui.printExceptionMessage(e.toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Finds the tasks which contain the keyword."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command the full command entered by the user."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void findTask(String command) throws EmptyTaskListException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Find the keyword for search"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] commandWords \u003d command.split(\"\\\\s\"); // 0: \"find\", 1: keyword"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String keywords \u003d commandWords[1];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        for (int i \u003d 2; i \u003c commandWords.length; i++) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            keywords \u003d \" \" + commandWords[i];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        keywords \u003d keywords.toLowerCase();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // For temporary storage and printing"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Search"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        for (Task t : allTasks) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            if (t.getCommand().toLowerCase().contains(keywords)) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                result.addSavedTaskToStored(t);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Print all options"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        result.printAllTasks();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Deletes the given Task based on the command\u0027s keyword (a number representing index in ArrayList)."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command raw text containing all information given to delete the Task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @throws InputUnclearException where deleting task not possible due to incorrect command/index entered by user."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void deleteTask(String command) throws DeleteException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            int indexToRemove \u003d Integer.parseInt(command.substring(\"delete \".length())) - 1; // due to zero-indexing"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Task removedTask \u003d allTasks.remove(indexToRemove);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            printTaskRemoval(indexToRemove, removedTask);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Storage.saveChanges(this);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            throw new DeleteException(\"\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Adds a new Task for user to do, specifying the actual action as Task command."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command basic raw information entered to create the Task."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @throws ToDoException Exception arising from creating To-Do Task due to wrong inputs."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void addNewToDo(String command) throws ToDoException {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        if (command.length() \u003c 6) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            throw new ToDoException(\"\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String toDoCommand \u003d command.substring(\"todo\".length() + 1);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        addTaskToStored(new ToDo(toDoCommand));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Storage.saveChanges(this);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Adds a new Deadline Task, specifying the actual Task command and time limit."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command basic raw information entered to create the Task."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @throws DeadlineException Exception arising from creating Deadline Task due to wrong inputs."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void addNewDeadline(String command) throws DeadlineException {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            // need to identify deadline limit"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String dateDetails \u003d getRestriction(\"/by\", command);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String deadlineLimit \u003d getPresentableDate(dateDetails);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            // filter to obtain command"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String deadlineCommand \u003d getCommand(\"deadline\", \"/by\", command);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            addTaskToStored(new Deadline(deadlineCommand, deadlineLimit));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Storage.saveChanges(this);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            throw new DeadlineException(\"\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Adds a new Event Task, specifying the actual Task command and the time duration."
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command basic raw information entered to create the Task."
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @throws EventException Exception arising from Event Task creation due to wrong inputs."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void addNewEvent(String command) throws EventException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            // need to identify event time"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String dateDetails \u003d getRestriction(\"/at\", command);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String eventTime \u003d getPresentableDate(dateDetails);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            // filter to obtain command"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String eventCommand \u003d getCommand(\"event\", \"/at\", command);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            addTaskToStored(new Event(eventCommand, eventTime));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            Storage.saveChanges(this);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            throw new EventException(\"\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides the date in a presentable, \"Month (in English) Day Year\" format."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getPresentableDate(String dateDetails) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String punctuation \u003d String.valueOf(dateDetails.charAt(4)); // due to \"/at \" or \"/by \""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] date \u003d dateDetails.split(punctuation); // 0: Year, 1: Month, 2: Day"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        LocalDate ld \u003d LocalDate.of(Integer.parseInt(date[0]),"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                Integer.parseInt(date[1]),"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                Integer.parseInt(date[2]));"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ld.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets Deadline limit or Event time based on keyword (which includes \"/\")."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * The result is simply the time/date in a String."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param keyword a String beginning with \"/\" and a keyword which separates the Task and Restriction of Time."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command basic raw information entered to create the Task."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the String representing the Restriction on the Task."
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getRestriction(String keyword, String command) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfKeyword \u003d indexSearchInString(keyword, command);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return command.substring(indexOfKeyword + keyword.length() + 1); // +1 due to whitespace"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets Deadline or Event Task description to do."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param taskType type of task."
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param keyword a String beginning with \"/\" and a keyword which separates the Task and Restriction of Time."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command basic raw information entered to create the Task."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representation of description of the command of the Task."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private String getCommand(String taskType, String keyword, String command) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int indexOfTimeKeyword \u003d indexSearchInString(keyword, command) - 1; // due to whitespace"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int startIndex \u003d taskType.length() + 1; // due to whitespace"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return command.substring(startIndex, indexOfTimeKeyword);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Finds the first occurrence of keywords in a search space."
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param keyword a String beginning with \"/\" and a keyword which separates the Task and Restriction of Time."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param searchSpace the full String to search from."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return index in which the keyword appears first."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private int indexSearchInString(String keyword, String searchSpace) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return searchSpace.indexOf(keyword);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Marks task complete and prints completion message."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param i Index of the Task to be done."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void doTask(int i) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d allTasks.get(i - 1); // due to 0 indexing"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printTaskComplete(t);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        t.doTask(); // task marked as complete"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Storage.saveChanges(this);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Adds the Task to store in the ArrayList, and prints added message."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param t Task to be stored."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void addTaskToStored(Task t) {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        allTasks.add(t);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        t.taskAddedMessage();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Adds the Task (previously saved) without printing the added message."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Can also be used to simply to add without announcing, from one TaskList to another such as a temporary one."
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param t Task to be stored."
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void addSavedTaskToStored(Task t) {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        allTasks.add(t);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints removal of a given task, of its index then and the current number of Tasks remaining."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param index index of current Task to remove."
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskRemoval(int index, Task removedTask) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"Removed Task #\" + (index + 1) + \": \" + removedTask"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nHope it\u0027s worth it!\\nYou are now left with \""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + allTasks.size() + \" tasks.\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints all tasks, their number order, and their completion for list command."
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printAllTasks() throws EmptyTaskListException {"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        if (allTasks.isEmpty()) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            throw new EmptyTaskListException(\"\");"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        for (int i \u003d 0; i \u003c allTasks.size(); i++) {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            printTaskFromStored(i);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a response to the done command after doTask completes."
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param t Task that has been completed via doTask method."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskComplete(Task t) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        if (t.getIsDone()) {"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            print(\"That\u0027s already done, try another. Or did you make a careless mistake? XD\");"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            print(\"Nice! The following task has been marked completed:\\n\""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                    + \"\u003d\u003d\u003d\u003e [V] \" + t + \" \u003c\u003d\u003d\u003d\");"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints individual task with current completion status."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param i index of storage of the Task in the container/collection."
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskFromStored(int i) {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String tickOrCross \u003d allTasks.get(i).obtainStatusIcon();"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(String.valueOf(i + 1) + \". [\" + tickOrCross + \"] \" + allTasks.get(i));"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a horizontal formatting line."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printLine() {"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(Constant.FORMAT_LINE);"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void print(String s) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Returns size of the TaskList\u0027s ArrayList."
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return size of the list."
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public int sizeOf() {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return this.allTasks.size();"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Gets the task at index i."
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param i index of Task in TaskList."
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return Task at index i of TaskList."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return allTasks.get(i);"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 396
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * User Interface class which is centred about a strong user experience and its associated methods."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Welcomes the user with a message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void welcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"Hello, duke.Duke here! :D \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"I\u0027m feeling good and ready to go! \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void goodbye() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"\u003d\u003d\u003d\u003d\u003e Alright byeee thanks for coming and see ya soon! \u003c\u003d\u003d\u003d\u003d \\n:D :D :D :D :D\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param e String to be printed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static void printExceptionMessage(String e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a horizontal formatting line."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private static void printLine() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(Constant.FORMAT_LINE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private static void print(String s) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 55
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when deadline command has issue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class DeadlineException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for DeadlineException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public DeadlineException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nDeadline tasks should be named/specified with the deadline, Funny! XD\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"The format for the time/date should be \u0027YYYY-MM-DD\u0027 or \u0027YYYY/MM/DD\u0027\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"Please try again!\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 31
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when delete command has an issue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class DeleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for DeleteException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public DeleteException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nDeleting Tasks require a valid task number and the task needs to be previously entered\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when done command has an issue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for DeadlineException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public DoneException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nSeems like you are kinda tired. Please remember to define a Task Number!\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"Or, you could also take a break. :)\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 30
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * The most general Exception in the Duke Program, of which other Exceptions are child classes of."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for DukeException, parent exception of all exceptions in Duke program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyTaskListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when the TaskList is empty but an unexpected action is commanded by the user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class EmptyTaskListException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for EmptyTaskListException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public EmptyTaskListException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nNo tasks! You\u0027re good to go!\\nPlease exit using \u0027bye\u0027 command. :)\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 30
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when event command has an issue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class EventException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for EventException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public EventException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nEvent tasks should be named/specified with time duration, Blur! XD\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"The format for the time/date should be \u0027YYYY-MM-DD\u0027 or \u0027YYYY/MM/DD\u0027\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"Please try again!\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 31
    }
  },
  {
    "path": "src/main/java/duke/exceptions/ExceptionsConstant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * A class for any constants to be used possibly often in its scope (Exceptions)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class ExceptionsConstant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Utilised in printing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static final String FORMAT_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InputUnclearException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when inputs of user are unclear, prompting for clearer input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class InputUnclearException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for InputUnclearException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public InputUnclearException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nPlease enter another command, this time, with \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"a known command word/valid number;\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"I\u0027m not quite sure I understand you :(\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 31
    }
  },
  {
    "path": "src/main/java/duke/exceptions/ToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Exception when to do command has issue."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class ToDoException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for ToDoException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param message any message to convey."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public ToDoException(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a custom String representation of the current Exception, which includes formatting lines."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return the presentable String representation."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return ExceptionsConstant.FORMAT_LINE"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"\\nPlease enter another todo command, this time, with \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"a known command word/valid number;\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + \"For example, \u0027todo good\u0027\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                + ExceptionsConstant.FORMAT_LINE;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 31
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Deadline class for tasks that have a time limit to complete by."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides the time deadline by which the Task has to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private final String limit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for the Task type Deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command raw String data entered to create the Deadline Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param limit time limit by which the Deadline Task has to be completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public Deadline(String command, String limit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.limit \u003d limit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a message indicating the Deadline Task has been added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void taskAddedMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"\u003d\u003d\u003e Added unique Deadline task: \" + this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a String representation of the Deadline Task object with tag [D] and its time limit."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representation of the Deadline Task with limit and tag."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return \"[D] \" + this.command + \" (by: \" + this.limit + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Event class for tasks that have a specific time of happening."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides the time of the event\u0027s happening."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private final String time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for the Event Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command full raw text entered to create the Event Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param time time during which the Event occurs."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public Event(String command, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a message indicating the Event Task has been added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void taskAddedMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"\u003d\u003d\u003e Added unique Event: \" + this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a String representation of the Event Task object with tag [E] and its time of happening."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representation of the Event Task with time and tag."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return \"[E] \" + this.command + \" (at: \" + this.time + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Abstract task class for which includes the most common features among To-Do, Deadline, Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Indicates whether or not user has completed the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Stores the main task that user wants to log in raw String."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for Task Class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command full raw text entered as a command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public Task(String command) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.isDone \u003d false; // all tasks are created incomplete"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides String representation of the respective Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Indicates that the Task\u0027s command has been added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public abstract void taskAddedMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Marks the Task as completed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public final void doTask() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Obtains tick or cross status icon dependent on completion."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return a String of a tick(completed) or a cross(incomplete)."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public final String obtainStatusIcon() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return (this.isDone) ? \"V\" : \"X\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a horizontal formatting line."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    protected final void printLine() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(TasksConstant.FORMAT_LINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a given String."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param s String to be printed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    protected final void print(String s) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Finds out if a Task is done or not."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return whether a task has been done."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public final boolean getIsDone() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Obtains the Task\u0027s (irrelevant of subtype) actual command/action to complete."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return The Task-of-interest\u0027s command/action."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public final String getCommand() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 90
    }
  },
  {
    "path": "src/main/java/duke/tasks/TasksConstant.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * A class for any constants to be used possibly often in its scope."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class TasksConstant {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Utilised in printing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public static final String FORMAT_LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 13
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " * Standard task to be done without time limit or specific time of happening."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Constructor for this particular type of Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @param command full raw text entered to create this particular Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public ToDo(String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Prints a message indicating that the Task has been added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void taskAddedMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        print(\"\u003d\u003d\u003e Added unique ToDo task: \" + this);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * Provides a String representation of the Task object with tag [T]."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     * @return String representation of the Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        return \"[T] \" + this.command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 37
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "         \u003cpadding\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "         \u003c/padding\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void satisfiesMinimumDoneCommandLength_validInput_trueReturned() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] commandWords \u003d new String[] {\"todo\", \"good\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertTrue(new Parser().satisfiesMinimumDoneCommandLength(commandWords));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void satisfiesMinimumDoneCommandLength_invalidInput_falseReturned() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] commandWords \u003d new String[] {\"todo\"};"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertFalse(new Parser().satisfiesMinimumDoneCommandLength(commandWords));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void determineIfValidDoneCommand_NumberSmallerThanListSize_trueReturned() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] commandWords \u003d new String[] {\"done\", \"1\"};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int taskListSize \u003d 5;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertTrue(Integer.parseInt(commandWords[1]) \u003c\u003d taskListSize);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void determineIfValidDoneCommand_NumberLargerThanListSize_trueReturned() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String[] commandWords \u003d new String[] {\"done\", \"100\"};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        int taskListSize \u003d 5;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertFalse(Integer.parseInt(commandWords[1]) \u003c\u003d taskListSize);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void determineIfValidDoneCommand_invalidTokenNotNumber_exceptionThrown() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            String[] commandWords \u003d new String[] {\"done\", \"ThisIsNotANumber, pls give an exception\"};"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            int taskListSize \u003d 5;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            assertFalse(Integer.parseInt(commandWords[1]) \u003c\u003d taskListSize);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "            assertEquals(\"For input string: \\\"ThisIsNotANumber, pls give an exception\\\"\", e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 48
    }
  },
  {
    "path": "src/test/java/duke/TaskListTester.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "public class TaskListTester {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void doTask_completeTask_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d new ToDo(\"mark complete\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        t.doTask();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertTrue(t.getIsDone());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void addSavedTaskToStored_addTask_success() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d new ToDo(\"Swim\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(t);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(1, tl.sizeOf());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskFromStored_completedToDoCommandSwim_success() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList(); // new TaskList to store Tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d new ToDo(\"Swim\"); // new Task for testing"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        t.doTask(); // Task is marked as Complete and should give \"V\", not \"X\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String tickOrCross \u003d tl.getTask(0).obtainStatusIcon();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"V\", tickOrCross);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(t);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String output \u003d 1 + \". [\" + tickOrCross + \"] \" + tl.getTask(1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"1. [V] Swim\", output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskFromStored_notCompletedEventCommandFlyTime20190102_success() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList(); // new TaskList to store Tasks"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d new Event(\"Fly\", \"Jan 2 2019\"); // new Task for testing"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        // Task is not marked as Complete and should give \"X\", not \"V\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String tickOrCross \u003d tl.getTask(0).obtainStatusIcon();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"X\", tickOrCross);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String output \u003d 1 + \". [\" + tickOrCross + \"] \" + tl.getTask(1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"1. [X] Fly (at: Jan 2 2019)\", output);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    private void printTaskFromStored_completedDeadlineCommandDinnerLimit2019302_success() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList(); // new TaskList to store Tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        Task t \u003d new Deadline(\"Dinner\", \"Mar 2 2019\"); // new Task for testing"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        t.doTask(); // Task is marked as Complete and should give \"V\", not \"X\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String tickOrCross \u003d tl.getTask(0).obtainStatusIcon();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"V\", tickOrCross);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(t);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String output \u003d 1 + \". [\" + tickOrCross + \"] \" + tl.getTask(1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"1. [X] Fly (at: Mar 2 2019)\", output);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void sizeOf_sizeTwo_success() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(new ToDo(\"good\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(new ToDo(\"bad\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(2, tl.sizeOf());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    public void getTask_toDoGood_success() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        TaskList tl \u003d new TaskList();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        tl.addSavedTaskToStored(new ToDo(\"good\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        String icon \u003d (tl.getTask(0).getIsDone()) ? \"V\" : \"X\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "        assertEquals(\"Xgood\", icon + tl.getTask(0).getCommand());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "}"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 89
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "Hello, duke.Duke here! :D"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "I\u0027m feeling good and ready to go! What can I do for you?"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "Please enter another command, this time, with a known command word/valid number;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "I\u0027m not quite sure I understand you :("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003d\u003d\u003e Added unique ToDo task: [T] good"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003d\u003d\u003e Added unique Event: [E] ABC (at: Sunday, 7-9pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "1. [X] [T] good"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "2. [X] [E] ABC (at: Sunday, 7-9pm)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003d\u003d\u003e Added unique Deadline task: [D] XYZ (by: 89pm Friday)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "Nice! The following task has been marked completed:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003d\u003d\u003d\u003e [V] [D] XYZ (by: 89pm Friday) \u003c\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "1. [X] [T] good"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "2. [X] [E] ABC (at: Sunday, 7-9pm)"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "3. [V] [D] XYZ (by: 89pm Friday)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "\u003d\u003d\u003d\u003d\u003e Alright byeee thanks for coming and see ya soon! \u003c\u003d\u003d\u003d\u003d "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ":D :D :D :D :D"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "____________________________________________________________"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 34
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "todo good"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "event ABC /at Sunday, 7-9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "deadline XYZ /by 89pm Friday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "eugenetyc"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "eugenetyc": 21
    }
  }
]
