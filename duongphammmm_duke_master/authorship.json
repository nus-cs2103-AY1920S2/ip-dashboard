[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "test {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "duongphammmm": 22
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "T | false | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "T | false | borrow book"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 2
    }
  },
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class AddCommand extends Command{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private String[] commands;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public AddCommand(String commandWord, String[] commands) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.commands \u003d commands;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        Task task \u003d tasks.addTask(commandWord, commands);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.printAddingMessage(tasks, task);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.showAddingError(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 22
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String commandWord;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Command(String commandWord) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return this instanceof ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String byString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Deadline(boolean isDone, String description, String byString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.byString \u003d byString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        //Date input format: yyyy-mm-dd HHmm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String[] by \u003d byString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.date \u003d LocalDate.parse(by[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (by.length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            this.time \u003d LocalTime.parse(by[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String[] toDataTokens() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String isDoneString \u003d String.valueOf(super.isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return new String[] {this.type, isDoneString, super.description, this.byString};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        dateTime +\u003d this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (this.time !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            dateTime +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 42
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private int deleteIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public DeleteCommand(String commandWord, int deleteIndex) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.deleteIndex \u003d deleteIndex - 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        Task task \u003d tasks.getTask(this.deleteIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        tasks.deleteTask(this.deleteIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.printDeletingMessage(tasks, task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.showDeletingError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 23
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private int doneIndex;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public DoneCommand(String commandWord, int doneIndex) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.doneIndex \u003d doneIndex - 1;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidIndexException{"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        Task task \u003d tasks.getTask(this.doneIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        tasks.markTaskAsDone(this.doneIndex);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.printDoneMessage(tasks, task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.showMarkingAsDoneError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 23
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            storage.initialiseData();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.showLoadingError(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                ui.showCommandError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 37,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 5
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public EmptyDescriptionException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String atString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected LocalTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Event(boolean isDone, String description, String atString) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.atString \u003d atString;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        //Date input format: yyyy-mm-dd HHmm"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String[] at \u003d atString.split(\" \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.date \u003d LocalDate.parse(at[0]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (at.length \u003e 1) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            this.time \u003d LocalTime.parse(at[1], DateTimeFormatter.ofPattern(\"HHmm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            this.time \u003d null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String[] toDataTokens() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String isDoneString \u003d String.valueOf(super.isDone);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return new String[] {this.type, isDoneString, super.description, this.atString};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String dateTime \u003d \"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        dateTime +\u003d this.date.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (this.time !\u003d null) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            dateTime +\u003d \" \" + this.time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 42
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public ExitCommand(String commandWord) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 11
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public FindCommand(String commandWord, String keyword) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        tasks.findTask(ui, this.keyword);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 14
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 5
    }
  },
  {
    "path": "src/main/java/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class InvalidIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public InvalidIndexException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 5
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public ListCommand(String commandWord) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(commandWord);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        tasks.printTaskList(ui);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 11
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private static ArrayList\u003cString\u003e validCommands \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            Arrays.asList(\"list\", \"done\", \"delete\", \"find\", \"todo\", \"event\", \"deadline\", \"bye\"));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String[] commands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String commandWord \u003d commands[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        checkCommand(commandWord, commands);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        switch(commandWord) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new ExitCommand(commandWord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new ListCommand(commandWord);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                int doneIndex \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new DoneCommand(commandWord, doneIndex);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                int deleteIndex \u003d Integer.parseInt(commands[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new DeleteCommand(commandWord, deleteIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                String keyword \u003d commands[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new FindCommand(commandWord, keyword);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                return new AddCommand(commandWord, commands);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public static void checkCommand(String commandWord, String[] commands) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        checkCommandWord(commandWord);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (!commandWord.equals(\"list\") \u0026\u0026 !commandWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            checkDetails(commands);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public static void checkCommandWord(String commandWord) throws InvalidCommandException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (!validCommands.contains(commandWord)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            throw new InvalidCommandException(\"Sorry dude but that won\u0027t command me!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public static void checkDetails(String[] commands) throws EmptyDescriptionException{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (commands.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            throw new EmptyDescriptionException(\"Sorry dude but where are the arguments???\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 53
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private String SPLIT \u003d  \" \\\\| \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private String JOIN \u003d \" | \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String line \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        line \u003d reader.readLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        while (line !\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            String[] tokens \u003d line.split(SPLIT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            String type \u003d tokens[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            boolean isDone \u003d Boolean.parseBoolean(tokens[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            String description \u003d tokens[2];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            Task task \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                task \u003d new Todo(isDone, description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                String time \u003d tokens[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                    task \u003d new Deadline(isDone, description, time);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                    task \u003d new Event(isDone, description, time);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            line \u003d reader.readLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void update(TaskList tasks) throws IOException{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filePath, false));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            String[] tokens \u003d task.toDataTokens();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            writer.append(String.join(JOIN, tokens));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            writer.append(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        writer.flush();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void initialiseData() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 68
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Task(boolean isDone, String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        //return tick or X symbols"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return (isDone ? \"v\" : \"x\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String[] toDataTokens() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String isDoneString \u003d String.valueOf(this.isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return new String[] {isDoneString, this.description};"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Task getTask(int index) throws InvalidIndexException{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            return this.taskList.get(index);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            throw new InvalidIndexException(\"Sorry dude but this index is nowhere to be found.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printTaskList(Ui ui) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        if (this.taskList.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.printEmptyListMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.loadMachinePrompt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.printTaskMessage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                Task task \u003d this.taskList.get(i - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                ui.printTask(i, task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            ui.loadUserPrompt();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Task addTask(String commandWord, String[] commands) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String[] descriptions;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                description \u003d commands[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                task \u003d new Todo(false, description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                descriptions \u003d commands[1].split(\" /at \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                task \u003d new Event(false, descriptions[0], descriptions[1]);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                descriptions \u003d commands[1].split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                task \u003d new Deadline(false, descriptions[0], descriptions[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void markTaskAsDone(int doneIndex) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        Task task \u003d this.taskList.get(doneIndex);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void deleteTask(int deleteIndex) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.taskList.remove(deleteIndex );"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void findTask(Ui ui, String keyword) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.loadMachinePrompt();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.printFoundTaskMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d this.taskList.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            Task task \u003d this.taskList.get(i - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                ui.printTask(i, task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        ui.loadUserPrompt();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 86
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Todo(boolean isDone, String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        super(isDone, description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String[] toDataTokens() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        String isDoneString \u003d String.valueOf(super.isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return new String[] {this.type, isDoneString, super.description};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    private String indent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        this.indent \u003d \"      \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void loadMachinePrompt() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.print(\"Dude: \");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void loadUserPrompt() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.print(\"dude: \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.print(\"Hi dude! I\u0027m your Dude\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                + indent + \"What do you want?\\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void showLoadingError(String message) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"\\n\" + indent + \"Loading error: \" + message);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void showCommandError(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"\\n\" + indent + \"Command error: \" + message);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void showAddingError(String message) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"\\n\" + indent + \"Adding error: \" + message);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void showDeletingError(String message) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"\\n\" + indent + \"Deleting error: \" + message);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void showMarkingAsDoneError(String message) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"\\n\" + indent + \"Marking as done error: \" + message);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printAddingMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Got it dude! I\u0027ve added this task:\" + \"\\n\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                + indent + task);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        printTaskListSize(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printDoneMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Got it dude! I\u0027ve marked this task as done:\" + \"\\n\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                + indent + task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printDeletingMessage(TaskList tasks, Task task) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Got it dude! I\u0027ve deleted this task:\" + \"\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "                + indent + task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        printTaskListSize(tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printTaskListSize(TaskList tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        int size \u003d tasks.getListSize();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(indent + \"Now you have \" + size + \" task(s) in the list.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printEmptyListMessage() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Your list is currently empty dude.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadUserPrompt();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printTaskMessage() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Here\u0027s your list of tasks dude:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printFoundTaskMessage() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Okay dude here are what I found:\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void printTask(int i, Task task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(indent + i + \". \" + task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        loadMachinePrompt();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        System.out.println(\"Okay see ya dude!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 113
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 10
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 11
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "Dude: Dude now you have even more things to do:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      [T][x]  borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "dude:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "Dude: Here\u0027s your list of tasks dude:"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      1. [T][x]  borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "dude:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "Dude: That\u0027s strange dude your pile of deadlines suddenly grew:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      [D][x]  return book  (by: Sunday)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "dude:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "Dude: Woohoo what an eventful life:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      [E][x]  project meeting  (at: Mon 2-4pm)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "      Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "dude:"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "duongphammmm"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "duongphammmm": 21
    }
  }
]
