[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "javafx {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    version \u003d \"11.0.2\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "test {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    mainClassName \u003d \"duke.main.Duke\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 28,
      "-": 19
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "T|0|venuor"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": "D|0|kill people |5pm"
      }
    ],
    "authorContributionMap": {
      "Dban1": 2
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public enum Commands {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        TASK(\"task\"), TODO(\"todo\"), EVENT(\"event\"), DEADLINE(\"deadline\"), LIST(\"list\"), BYE(\"bye\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        private String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Commands(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        public String getCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            return this.command;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private String[] elements;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private String commandWord;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private String fullInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Command(String fullInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.elements \u003d fullInput.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.commandWord \u003d elements[0];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.fullInput \u003d fullInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String execute(TaskList taskList, Storage storage, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        switch (this.commandWord) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ui.showMessage(\"Aww okay, see you next time!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.isExit \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (taskList.getTaskList().size() \u003c 1) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                result +\u003d ui.showMessage(\"no tasks\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                result +\u003d (\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String output \u003d \"\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    output \u003d index + \". \" + t.toString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    result +\u003d output + \"\\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"done\": {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (this.elements.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"OOPS boi. Need moar arguments!!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                Integer.parseInt(this.elements[1]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"Input a number boi.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (Integer.parseInt(this.elements[1]) \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"Boi. You don\u0027t have that many tasks boi! :)\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            int taskNum \u003d Integer.parseInt(this.elements[1]);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            taskList.getTaskList().get(taskNum - 1).setDone();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ui.showMessage("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    \"Nice! I\u0027ve marked this task as done:\\n\" + taskList.getTaskList().get(taskNum - 1).toString());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"delete\": {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (this.elements.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"OOPS boi. Need moar arguments!!\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                Integer.parseInt(this.elements[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"Input a number boi.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (Integer.parseInt(this.elements[1]) \u003e taskList.getTaskList().size()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"Boi. You don\u0027t have that many tasks boi! :)\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            int taskNum \u003d Integer.parseInt(elements[1]);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ("
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    \"Boi. I\u0027ve went and deleted that task \\n\" + taskList.getTaskList().get(taskNum - 1).toString())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    + \"\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            taskList.getTaskList().remove(taskNum - 1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (this.elements.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"OOPS boi. Need moar arguments!!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Task task \u003d new Todo(this.fullInput.substring(5)); // stores input to storedText List"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            TaskList.addTask(task, taskList);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ui.showMessage(\"I\u0027ve added the todo to the list!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String[] deadlineElements \u003d this.fullInput.split(\"/by\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (deadlineElements.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"OOPS boi. Need moar arguments!!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String deadlineDescription \u003d deadlineElements[0].substring(9);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String by \u003d deadlineElements[1].substring(1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineDescription, by);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            TaskList.addTask(deadline, taskList);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ui.showMessage(\"I\u0027ve added the deadline to the list!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String[] eventElements \u003d this.fullInput.split(\"/at\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            if (eventElements.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"OOPS boi. Need moar arguments!!\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String eventDescription \u003d eventElements[0].substring(6);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            String at \u003d eventElements[1].substring(1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Task event \u003d new Event(eventDescription, at);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            TaskList.addTask(event, taskList);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            result +\u003d ui.showMessage(\"I\u0027ve added the event to the list!\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        case \"find\": {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String findElement \u003d this.fullInput.substring(5);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                boolean hasAtLeastOne \u003d false;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String output \u003d \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    if (t.toString().contains(findElement)) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                        hasAtLeastOne \u003d true;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                        output \u003d index + \". \" + t.toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                        result +\u003d ui.showMessage(output) + \"\\n\";"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                if (!hasAtLeastOne) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    result +\u003d ui.showMessage(\"Couldn\u0027t find any related tasks! Sorry.\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                throw new DukeException(\"Need more arguments boi\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            throw new DukeException(\"unknown command!!!\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 165
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 8
    }
  },
  {
    "path": "src/main/java/duke/main/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 56
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.ui.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": " * Represents a Duke program that stores user-inputted tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Constructs a Duke class."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param filePath Filepath of the storage file tasks.txt"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            tasks \u003d storage.buildTaskList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            storage.updateStorage(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        storage \u003d new Storage(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            tasks \u003d storage.buildTaskList();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            storage.updateStorage(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//            handleUserInput();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Dban1"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String getResponse(String fullCommand) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String response \u003d ui.divider(\"\") + \"\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            response +\u003d ui.divider(\"\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            response +\u003d c.execute(tasks, storage, ui);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            storage.updateStorage(tasks);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            response +\u003d ui.showError(e);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            response +\u003d \"\\n\" + ui.divider(\"\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Executes the main function of Duke."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        ui.welcomeUser();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                ui.divider(\"\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                Command c \u003d Parser.parseCommand(fullCommand);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                c.execute(tasks, storage, ui);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                storage.updateStorage(tasks);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                ui.divider(\"\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        new Duke(\"./data/tasks.txt\").run();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 171
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 9
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch(IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            System.out.println(\"ncrwjke\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 28
    }
  },
  {
    "path": "src/main/java/duke/main/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public MainWindow() {}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 52
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": " * Provides functionality for reading and writing from storage file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Storage(String s) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.data \u003d new File(s);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            System.err.println(\"Error retrieving file!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Builds a TaskList class from storage Filepath."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return Returns a TaskList class built according to storage Filepath. Returns"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     *         an empty TaskList class if there is no storage file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @throws DukeException Filepath not found."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public TaskList buildTaskList() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            Scanner scan \u003d new Scanner(data);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String elementLine \u003d scan.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                String[] elements \u003d elementLine.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                switch (elements[0]) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    taskList.add(Todo.create(elements));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    taskList.add(Event.create(elements));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    taskList.add(Deadline.create(elements));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    taskList.add(Task.create(elements));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            scan.close();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            return new TaskList(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            throw new DukeException(\"Error building task list from file path. Creating new task.txt\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Saves given TaskList to the storage file."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param taskList The TaskList to be stored."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void updateStorage(TaskList taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            FileWriter writer \u003d new FileWriter(data);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            for (Task t : taskList.getTaskList()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                writer.write(t.store() + \"\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            System.err.println(\"Error writing to save file, message: \" + e.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 79
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected String by \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            assert this.date.isAfter(LocalDate.now()): \"Invalid early date\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            getParsed_date_successfully();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private void getParsed_date_successfully() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        System.out.println(\"Parsed date successfully\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Creates a Deadline class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param strArr Array of String containing input for the Deadline class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return Created Deadline class."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static Deadline create(String[] strArr) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Deadline t \u003d new Deadline(strArr[TASK_NAME_INDEX], strArr[3]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String dateType \u003d this.by;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (dateType.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            dateType \u003d this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"D|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + dateType;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                + (by.isEmpty() ? date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) : this.by) + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected String at \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            assert this.date.isAfter(LocalDate.now()): \"Invalid early date\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            System.out.println(\"Parsed date successfully\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Creates an Event class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param strArr Array of String containing input for the Event class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return Created Event class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static Event create(String[] strArr) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Event t \u003d new Event(strArr[TASK_NAME_INDEX], strArr[3]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String dateType \u003d this.at;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (dateType.isEmpty()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            dateType \u003d this.date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description + \"|\" + dateType;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                + (at.isEmpty() ? date.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) : this.at) + \")\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected final static int TASK_NAME_INDEX \u003d 2;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    protected final static int IS_DONE_BOOLEAN_INDEX \u003d 1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Task(String s) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.description \u003d s;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"Task|\" + (isDone ? \"1\" : \"0\") + \"|\" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Creates a Task class."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param strArr Array of String containing input for the Task class."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return Created Task class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static Task create(String[] strArr) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Task t \u003d new Task(strArr[TASK_NAME_INDEX]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \u0027[\u0027 + getStatusIcon() + \u0027]\u0027 + this.description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Returns the List of Task objects of this TaskList class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return List of Task objects of this class."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Sets isDone boolean to specified Task index in the Task List to be true."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param i Index of Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param taskList TaskList class to be operated on."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return TaskList class that was operated on."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static TaskList doneTask(int i, TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        taskList.getTaskList().get(i - 1).setDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Removes Task from List of Task of specified TaskList class."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param i The index of Task in the TaskList to be removed."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param taskList The TaskList class to be operated on."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return The TaskList object operated on."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static TaskList removeTask(int i, TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        taskList.getTaskList().remove(i - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Adds a Task to the TaskList."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param t The Task to be added to the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param taskList The TaskList to be operated on."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return The TaskList object operated on."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static TaskList addTask(Task t, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        taskList.getTaskList().add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 57
    }
  },
  {
    "path": "src/main/java/duke/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Creates a Todo class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param strArr Array of String containing input for the Todo class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return Created Todo class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static Todo create(String[] strArr) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Todo t \u003d new Todo(strArr[TASK_NAME_INDEX]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        if (strArr[IS_DONE_BOOLEAN_INDEX].equals(\"1\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            t.setDone();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public static Command parseCommand(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return new Command(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 9
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private String dukeLogo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Prints out standard welcome message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void welcomeUser() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        System.out.println(\"Hello, I am \\n\" + dukeLogo + \"your personal buddy. What\u0027s up?\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "                + \"______________________________________________________\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Prints out standard farewell message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void farewellUser() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        divider(\"Aww, see you again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Prints out input String within two divider lines. If input string is empty, prints out single line."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param s String to be wrapped by two divider lines."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String divider(String s) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        String scanned \u003d scan.nextLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return scanned;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Prints input String."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param s Input String."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String showMessage(String s) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * Prints given DukeException."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     * @param e Input DukeException."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Dban1"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public String showError(DukeException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        return e.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 63
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Dban1": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.main.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "      \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "      \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Dban1": 19
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import org.junit.jupiter.api.BeforeAll;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import org.junit.jupiter.api.TestInstance;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    private TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void addTaskTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Task task \u003d new Task(\"hello\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        TaskList.addTask(task, taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        assertEquals(1, taskList.getTaskList().size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 18
    }
  },
  {
    "path": "src/test/java/duke/tasks/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import duke.tasks.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    public void todoTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        Todo t \u003d new Todo(\"hack the pentagon\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": "        assertEquals(\"[T][✗]hack the pentagon\", t.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Dban1": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "lame"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": "frnjekwdn"
      }
    ],
    "authorContributionMap": {
      "Dban1": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "hi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": "lame"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "lor"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "borrow 5 book"
      }
    ],
    "authorContributionMap": {
      "Dban1": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Dban1"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Dban1"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Dban1"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Dban1"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Dban1"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Dban1"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Dban1"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Dban1"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Dban1"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Dban1"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Dban1"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Dban1": 21
    }
  }
]
