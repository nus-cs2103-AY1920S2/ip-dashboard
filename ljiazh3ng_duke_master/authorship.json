[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    archiveVersion \u003d \"0.2\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "tasks.withType(Checkstyle) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    reports {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        xml.enabled false"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        html.enabled true"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        html.stylesheet resources.text.fromFile(\u0027config/checkstyle/checkstyle-text.xsl\u0027)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "test {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ljiazh3ng": 45
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * get DialogBox."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param text text of the dialogbox."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param img image of the dialogbox."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 63
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.CommandResult;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Duke class calls the Ui, Storage and TaskList class to gather and update the result of the user command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Empty constructor so that Launcher works."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Path filePath \u003d java.nio.file.Paths.get(\"data\",\"data.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Initiate the Duke bot."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * create UI, duke.storage.Storage, duke.task.TaskList."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param filePath filePath stores the txt file used to load data."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Duke(Path filePath) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Chat bot function, run infinitely until user types \"bye\"."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void runChatBot() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.ui.welcome();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                Command c \u003d Parser.parseMessage(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                CommandResult commandResult \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                isExit \u003d c.getIsExit();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        ByteArrayOutputStream baos \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            PrintStream ps \u003d new PrintStream(baos);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            PrintStream old \u003d System.out;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.setOut(ps);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Command c \u003d Parser.parseMessage(input);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            CommandResult commandResult \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.out.flush();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.setOut(old);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            assert commandResult.toString().equals(\"Sgituccess\") : \"Command not executed successfully.\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (AssertionError e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.showError(\"AssertError\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return baos.toString();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints a logo of the name Duke."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param args Set up main function"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Path path \u003d java.nio.file.Paths.get(home, \"Desktop\", \"GitHub\", \"duke\",\"data\",\"data.txt\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        new Duke(path).runChatBot();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 108
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * launches GUI."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 32
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * AddCommand inherits from the Command abstract class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Executes the task in an orderly manner."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String RESULT_SUCCESS \u003d \"Success\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Stores the task that needs to be added to the taskList later on."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param task task that needs to be stored later."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Additional isExit variable that enables for quick exit feature."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param isExit if isExit is true the command will terminate the program after it executes."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param task task that needs to be stored inside the taskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public AddCommand(Boolean isExit, Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Add task to tasklist."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Updates task in storage."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints feedback to user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskList taskList used to update task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui Print feedback."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage Save progress at txt file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns duke.command.CommandResult."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            taskList.addTask(this.task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            storage.saveTask(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.addTaskSuccess(this.task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(RESULT_SUCCESS);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 56
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * ByeCommand inherits from the Command class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Terminates the program upon execution."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Terminates the program."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param isExit always set to true to terminate the program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public ByeCommand(Boolean isExit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * List of command to do when exiting the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param tasklist tasklist loaded into storage."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui duke.Duke.duke.ui.Ui Prints exit message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage storage used to store data."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return Returns a duke.command.CommandResult object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.printGoodBye();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            storage.saveTask(tasklist);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(\"Successfully Executed\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(\"IO Exception\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 41
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Abstract class with a core feature \"execute\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * To be implemented by superclass."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Complete and execute the task/command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskList taskList used to store or retrieve data."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui ui used to print output to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage storage used to store or load data from a txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns a CommandResult object that lets you know if you have successfully execute the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public abstract CommandResult execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 35
    }
  },
  {
    "path": "src/main/java/duke/command/CommandResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Command result that record if the execution is successful."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class CommandResult {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult(String feedbackToUser) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 17
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * DeleteCommand that inherits Command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implements abstract method execute that deletes the task from a TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String SUCCESS \u003d \"Task has been removed\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DeleteCommand(Boolean isExit, int taskIndex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Deletes task base on taskIndex."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Saves task in txt file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskList taskList is updated with the deleted task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui duke.Duke.duke.ui.Ui prints delete task message back to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage duke.storage.Storage updates the txt file with updated taskList."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns duke.command.CommandResult."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task temp \u003d taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            storage.saveTask(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            taskList.updateList(storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.deleteTaskSuccess(temp);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(SUCCESS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DisplayTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * DisplayTaskCommand inherits Command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implements the abstract method execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class DisplayTaskCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String SUCCESS \u003d \"Success\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DisplayTaskCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DisplayTaskCommand(Boolean isExit) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * UI prints all the current task in task List."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param tasks taskList used to retrieve current Tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui Prints feedback to user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage duke.storage.Storage not used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return Returns duke.command.CommandResult."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            tasks.sortTask();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            storage.saveTask(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.printStoredTask(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(SUCCESS);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 39
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * DoneCommand that inherits from the Command Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implements abstract method execute."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String SUCCESS \u003d \"Success\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DoneCommand(Boolean isExit, int taskIndex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * mark Task as Done and feedback to User."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskList taskList used to fetch the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui Prints feedback to User."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage duke.storage.Storage update task to txt file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return Return duke.command.CommandResult."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            taskList.updateList(storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task task \u003d taskList.doneTask(taskIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.doneTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            storage.saveTask(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(SUCCESS);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * FindCommand inherits from abstract class Command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implement abstract method execute."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private String find;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String SUCCESS \u003d \"Success\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public FindCommand(String find) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.find \u003d find;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Find tasks with keyword."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints feedback to user."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskList taskList used to find Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui Print feedback."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage not used."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns duke.command.CommandResult."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            TreeMap\u003cInteger, Task\u003e foundTasks \u003d taskList.findTask(find);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.printFoundTask(foundTasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(SUCCESS);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 40
    }
  },
  {
    "path": "src/main/java/duke/command/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * IncorrectCommand class inherits from Command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implements abstract method execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private final String feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList tasklist, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        ui.showError(feedbackToUser);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return new CommandResult(feedbackToUser);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 24
    }
  },
  {
    "path": "src/main/java/duke/command/InstructionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * InstructionCommand inherits from Command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Implements abstract method execute."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class InstructionCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    static final String SUCCESS \u003d \"Success\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public InstructionCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public InstructionCommand(Boolean isExit) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(isExit);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints list of Commands."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param tasks not used."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param ui Prints commands"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage not used."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns duke.command.CommandResult"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public CommandResult execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            ui.botInstruction();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(SUCCESS);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new CommandResult(ex.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * DukeException inherits Exception class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Handles all exceptions that involves Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(\"Invalid Instruction\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 17
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.DisplayTaskCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.IncorrectCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.command.InstructionCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Symbol;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Parser class handles all the input of the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Process message and deem if user wants to quit."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Print good bye message if user wants to quit."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Else echo back the message the user inputted"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param message entered by user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return boolean used to inform other function if user wants to quit"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     *     true -\u003e continue using bot, false -\u003e quit bot."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static Command parseMessage(String message) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task temp;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            if (message.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new ByeCommand(true);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.equals(\"i\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new InstructionCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.equals(\"list\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new DisplayTaskCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(message.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                temp \u003d parseTask(message, Symbol.T);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new AddCommand(temp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                String find \u003d message.split(\" \",2)[1];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new FindCommand(find);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                temp \u003d parseTask(message, Symbol.E);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new AddCommand(temp);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                temp \u003d parseTask(message, Symbol.D);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new AddCommand(temp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else if (message.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                int taskIndex \u003d Integer.parseInt(message.split(\" \", 2)[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (StringIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new IncorrectCommand(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Creates task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param message use to store it in the tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static Task parseTask(String message, Symbol symbol) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String[] arrMessage \u003d message.split(\" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int landmark \u003d arrMessage.length;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        switch (symbol) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        case T:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String[] tempArr \u003d Arrays.copyOfRange(arrMessage,1,arrMessage.length);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String newMessage \u003d String.join(\" \", tempArr);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            task \u003d new Todo(newMessage, TaskList.index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        case D:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            for (int i \u003d 1; i \u003c arrMessage.length; i++) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                if (arrMessage[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    landmark \u003d i;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            if (landmark \u003d\u003d arrMessage.length) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                throw new DukeException(\"  ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            task \u003d createTask(arrMessage, 1, landmark);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        case E:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            for (int i \u003d 1; i \u003c arrMessage.length; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                if (arrMessage[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    landmark \u003d i;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            if (landmark \u003d\u003d arrMessage.length) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                throw new DukeException(\"  ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            task \u003d createTask(arrMessage, 2, landmark);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.out.println(\"No task created.\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Creates Task."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param arrMessage arrMessage contains the information of the task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param i 1 \u003d\u003d Deadline task, 2 \u003d\u003d Event Task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param landmark index of the /at or /by in the arr."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns a Task."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static Task createTask(String[] arrMessage, int i, int landmark) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String[] tempArr \u003d Arrays.copyOfRange(arrMessage, 1, landmark);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String[] tempArr2 \u003d Arrays.copyOfRange(arrMessage, landmark + 1, arrMessage.length);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String newMessage \u003d String.join(\" \", tempArr);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String newDate \u003d String.join(\" \", tempArr2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (i \u003d\u003d 1) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new Deadlines(newMessage, TaskList.index, false, newDate);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return new Event(newMessage, TaskList.index, newDate);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 132
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Storage class handles all loading and saving of data into txt file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private java.nio.file.Path path;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Storage(Path path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Load task from a txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @throws IOException Throw exception if no file detected."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public TreeMap\u003cInteger, Task\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            File file \u003d this.path.toFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            TreeMap\u003cInteger, Task\u003e tasksTemp \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            int counter \u003d 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                boolean don \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                String data \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                String[] arrMessage \u003d data.split(\"\\\\|\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                if (arrMessage[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    don \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                if (arrMessage[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    task \u003d new Todo(arrMessage[2], counter, don);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    tasksTemp.put(counter, task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                } else if (arrMessage[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    task \u003d new Deadlines(arrMessage[2], counter, don, arrMessage[3]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    tasksTemp.put(counter, task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                } else if (arrMessage[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    task \u003d new Event(arrMessage[2], counter, don, arrMessage[3]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                    tasksTemp.put(counter, task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return tasksTemp;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            throw new DukeException(\"There was a error when loading the data\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Saves task in txt doc."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param tasksList taskList use to get the latest task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @throws IOException Handle IOexception associated to fileWriter."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void saveTask(TaskList tasksList) throws IOException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        TreeMap\u003cInteger, Task\u003e tasks \u003d tasksList.getList();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        File file \u003d this.path.toFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task task \u003d entry.getValue();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String message \u003d task.getInfo();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            writer.write(message + \"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 82
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Deadline inherits from Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Has additional attribute for date storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private LocalDate date1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Deadline that extends task and tracks date/time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title title of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index index of the event in the task tracker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param symbol duke.task.Symbol D to signify Deadline events"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param date date and time in the form of strings"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Deadlines(String title, int index, Symbol symbol, String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Second constructor that does not preset \"Done\"."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * User provide if task is done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title title of the event."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index index of the event in task tracker."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param don boolean tracking if the task is done."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param date date and time in the form of strings."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Deadlines(String title,int index, boolean don,String date) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index, don);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"D\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d null;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Get the a String output to be stored in a txt file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return formated String to be stored in a txt file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int binary \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            binary \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return String.format(\"%s|%d|%s|%s\", this.symbol, binary, this.title,this.date);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String crosstick \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✓\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✗\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (date1 !\u003d null) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String dateFormatted \u003d this.date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s)\", this.symbol, crosstick, this.title, dateFormatted);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return String.format(\"[%s][%s] %s (by: %s)\", this.symbol, crosstick, this.title, date);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 81
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Event inherits from Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Has additional attribute for date storage."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private LocalDate date1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * SubClass of Task that tracks date/time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title Title of the event"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index Index of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param date Date of the event scheduled."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Event(String title,int index,String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Second constructor that does not preset \"Done\"."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * User provide if task is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title title of the event."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index index of the event in task tracker."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param don boolean tracking if the task is done."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param date date and time in the form of strings."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Event(String title,int index, boolean don,String date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index, don);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"E\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (DateTimeException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            this.date1 \u003d null;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Get the a String output to be stored in a txt file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns formatted String to be stored in a txt file."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int binary \u003d 0;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            binary \u003d 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return String.format(\"%s|%d|%s|%s\", this.symbol, binary, this.title,this.date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String crosstick \u003d \"\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✓\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✗\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.date1 !\u003d null) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String dateFormatted \u003d this.date1.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s)\", this.symbol, crosstick, this.title, dateFormatted);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return String.format(\"[%s][%s] %s (at: %s)\", this.symbol, crosstick, this.title, date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 79
    }
  },
  {
    "path": "src/main/java/duke/task/Symbol.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public enum Symbol {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    T, D, E;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 5
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Abstract class representing a class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public abstract class Task implements Comparable\u003cTask\u003e {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    protected String title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    protected String symbol;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Constructor for duke.task.Task object initializing with 2 attribute."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Tracks title, index and done status."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index Index of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title Title of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Task(String title, int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Constructor with 3 attribute."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Tracks Tasks,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param title title of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param index index of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param don done status of the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Task(String title, int index, boolean don) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.done \u003d don;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String getTitle() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return this.title;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public abstract String getInfo();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Used to set priority in sorting Tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param compareTask compareTask is another task currently compared with."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns negative to indicate priority vice versa."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public int compareTo(Task compareTask) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.symbol.compareTo(compareTask.symbol) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return this.title.compareTo(compareTask.title);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return (this.symbol.compareTo(compareTask.symbol)) * -1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 61
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * TaskList collections for Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private TreeMap\u003cInteger, Task\u003e tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public static int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Constructor for duke.task.Task object initializing with 2 attribute."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Tracks Tasks and completed Tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public TaskList(TreeMap\u003cInteger, Task\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.index \u003d tasks.size() + 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Create new taskList if there are no saved progress."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.tasks \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.index \u003d 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Mark the tasks that are fulfilled."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param num used to locate the specific tasks."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Task doneTask(int num) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Task temp \u003d this.tasks.get(num);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        temp.done();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Updates list with the latest stored details in the data.txt file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param storage storage used to access the data.txt file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @throws DukeException throws exception when there is a error in laoding the file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void updateList(Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.tasks \u003d storage.load();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Deletes task from the task List."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param taskIndex taskIndex use to retrieve task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns the deleted duke.task.Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @throws NullPointerException if taskIndex not available."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Task deleteTask(int taskIndex) throws NullPointerException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            final Task temp \u003d this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            return temp;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } catch (NullPointerException ex) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            throw new NullPointerException(\"Number provided does not exist in the list, please try again.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.tasks.put(this.index, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.index++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public TreeMap\u003cInteger, Task\u003e getList() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Find tasks that has the keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param find find is the keyword used to find the tasks."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return returns a Treemap of the tasks found."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public TreeMap\u003cInteger, Task\u003e findTask(String find) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int newIndex \u003d 1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        TreeMap\u003cInteger, Task\u003e newTasks \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task task \u003d entry.getValue();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            String message \u003d task.getTitle();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            if (message.contains(find)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                newTasks.put(newIndex, task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                newIndex++;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return newTasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Sorts the existing taskList by type of event followed by title."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void sortTask() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        List\u003cTask\u003e sortTask \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        TreeMap\u003cInteger, Task\u003e newTasks \u003d new TreeMap\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task task \u003d entry.getValue();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            sortTask.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        Collections.sort(sortTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Task taskObject: sortTask) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            newTasks.put(counter, taskObject);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.tasks \u003d newTasks;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 122
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Todo(String title,int index) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Todo(String title,int index, Boolean don) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        super(title,index, don);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.symbol \u003d \"T\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Get the a String output to be stored in a txt file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @return formated String to be stored in a txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int binary \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            binary \u003d 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return String.format(\"%s|%d|%s\", this.symbol, binary, this.title);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String crosstick \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        if (this.done) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✓\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            crosstick \u003d \"✗\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.symbol, crosstick, this.title);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 40
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.DialogBox;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JayZ.jpg\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user1.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String response \u003d this.duke.getResponse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 55
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import java.util.TreeMap;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * Ui displays the output to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " * @author Lua Jia Zheng."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Print instruction of the commands in JayZbot."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void botInstruction() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"Use the list command to see your tasks.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"Set up tasks by using the command shown below:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"todo {your task}\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"deadline {your task} /by {date/time}\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"event {your task} /at {date/time}\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"Use the bye command to quit.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Welcome message when bot first initialize."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(\"Hello! I\u0027m JayZ-Bot\\nWhat can i do for you?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        botInstruction();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Echo message back in a text box."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param message provided by user, prints it."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void printMessageInBox(String message) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String[] splited \u003d message.split(\"\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (String s : splited) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.out.println(String.format(\"  %-57s\", s));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\" %-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints goodbye message."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void printGoodBye() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"* %-57s*\",\u0027 \u0027));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"* %-57s*\",\"Thank you for using JayZ-Bot! Hope to see you again :D\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"* %-57s*\",\u0027 \u0027));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        return this.scanner.nextLine();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        printMessageInBox(\"There is a error\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void showError(String e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        printMessageInBox(e);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints feedback that task is successfully added."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param task show the task to user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void addTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String addedTask \u003d \"Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String message \u003d String.format(\"%s\\n%s\", addedTask, task.toString());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        printMessageInBox(message);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints feedback that task is deleted."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param task show user the deleted task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void deleteTaskSuccess(Task task) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String deleteTask \u003d \"Got it. I\u0027ve delete this task:\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String message \u003d String.format(\"%s\\n%s\", deleteTask, task.toString());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        printMessageInBox(message);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints feedback that task has been marked as Done."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * @param task show eser the marked task."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void doneTask(Task task) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String toPrint1 \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String message \u003d String.format(\"%s\\n%s\", toPrint1, task.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        printMessageInBox(message);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints all the tasks stored."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void printStoredTask(TaskList tasksList) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"  %-55s\", \"The following task below are stored in the Task List.\"));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        TreeMap\u003cInteger,Task\u003e tasks \u003d tasksList.getList();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Map.Entry\u003cInteger, Task\u003e entry : tasks.entrySet()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task message \u003d entry.getValue();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.out.println(String.format(\"%d.%-55s\", counter, message));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     * Prints all the found tasks stored."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void printFoundTask(TreeMap\u003cInteger, Task\u003e foundTasks) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        String matching \u003d \" Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",matching));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        for (Map.Entry\u003cInteger, Task\u003e entry : foundTasks.entrySet()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            Task message \u003d entry.getValue();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            System.out.println(String.format(\"%d.%-55s\", counter, message));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%-57s\",\u0027 \u0027));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        System.out.println(String.format(\"%60s\",\u0027 \u0027).replace(\u0027 \u0027,\u0027*\u0027));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 143
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"453.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"376.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"BOTTOM_RIGHT\" layoutX\u003d\"377.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"453.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"451.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 19
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void testGetInfo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        assertEquals(\"T|0|return book\", new Todo(\"return book\", 1).getInfo());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "        assertEquals(\"[T][✗] return book\", new Todo(\"return book\", 1).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 18
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "Hello! I\u0027m JayZ-Bot"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "What can i do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "Use the list command to see your tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "Set up tasks by using the command shown below:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "todo {your task}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "deadline {your task} /by {date/time}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "event {your task} /at {date/time}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "Use the bye command to quit."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* Got it. I\u0027ve added this task:                                                *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* [T][✗] todo borrow book                                                      *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* 1.[T][✗] todo borrow book                                                    *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* Got it. I\u0027ve added this task:                                                *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* [D][✗] return book (by: Sunday)                                              *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* Got it. I\u0027ve added this task:                                                *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* [E][✗] project metting (at: Mon 2-4pm)                                       *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* Got it. I\u0027ve added this task:                                                *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* [D][✗] do homework (by: 2-4?)                                                *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "* Thank you for using JayZ-Bot! Hope to see you again :D                       *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "*                                                                              *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "********************************************************************************"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "event project metting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "deadline do homework /by 2-4?"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ljiazh3ng"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ljiazh3ng": 34
    }
  }
]
